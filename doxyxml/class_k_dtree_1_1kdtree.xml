<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="class_k_dtree_1_1kdtree" kind="class" language="C++" prot="public">
    <compoundname>KDtree::kdtree</compoundname>
    <includes refid="_k_dtree_8_h" local="no">KDtree.H</includes>
    <innerclass refid="struct_k_dtree_1_1kdtree_1_1node" prot="public">KDtree::kdtree::node</innerclass>
    <innerclass refid="struct_k_dtree_1_1kdtree_1_1node__cmp" prot="private">KDtree::kdtree::node_cmp</innerclass>
    <templateparamlist>
      <param>
        <type>typename coordinate_type</type>
      </param>
      <param>
        <type>size_t</type>
        <declname>dimensions</declname>
        <defname>dimensions</defname>
      </param>
    </templateparamlist>
    <sectiondef kind="public-type">
      <memberdef kind="typedef" id="class_k_dtree_1_1kdtree_1a73c843c42fd511a710344813eb7e9376" prot="public" static="no">
        <type><ref refid="class_k_dtree_1_1_cache" kindref="compound">Cache</ref>&lt; double, <ref refid="struct_k_dtree_1_1kdtree_1_1node" kindref="compound">node</ref> * &gt;</type>
        <definition>using KDtree::kdtree&lt; coordinate_type, dimensions &gt;::cache =  Cache&lt;double, node*&gt;</definition>
        <argsstring></argsstring>
        <name>cache</name>
        <qualifiedname>KDtree::kdtree::cache</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/KDtree.H" line="191" column="5" bodyfile="/home/weinberg/Projects/EXP/include/KDtree.H" bodystart="191" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_k_dtree_1_1kdtree_1a90ad8cf6e73e970269c2dd27675eaede" prot="public" static="no">
        <type><ref refid="class_k_dtree_1_1point" kindref="compound">point</ref>&lt; coordinate_type, dimensions &gt;</type>
        <definition>using KDtree::kdtree&lt; coordinate_type, dimensions &gt;::point_type =  point&lt;coordinate_type, dimensions&gt;</definition>
        <argsstring></argsstring>
        <name>point_type</name>
        <qualifiedname>KDtree::kdtree::point_type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/KDtree.H" line="169" column="5" bodyfile="/home/weinberg/Projects/EXP/include/KDtree.H" bodystart="169" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_k_dtree_1_1kdtree_1ae459908407ba06e78f5d11739d622b53" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="struct_k_dtree_1_1kdtree_1_1node" kindref="compound">node</ref> &gt;</type>
        <definition>std::vector&lt;node&gt; KDtree::kdtree&lt; coordinate_type, dimensions &gt;::nodes_</definition>
        <argsstring></argsstring>
        <name>nodes_</name>
        <qualifiedname>KDtree::kdtree::nodes_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/KDtree.H" line="198" column="17" bodyfile="/home/weinberg/Projects/EXP/include/KDtree.H" bodystart="198" bodyend="-1"/>
        <referencedby refid="class_k_dtree_1_1kdtree_1a5444c39408966995b6ec3634087ec521" compoundref="_k_dtree_8_h" startline="313" endline="316">KDtree::kdtree&lt; coordinate_type, dimensions &gt;::empty</referencedby>
        <referencedby refid="class_k_dtree_1_1kdtree_1a96221d70f375af756bb1d507d33aabd1" compoundref="_k_dtree_8_h" startline="301" endline="308">KDtree::kdtree&lt; coordinate_type, dimensions &gt;::kdtree</referencedby>
        <referencedby refid="class_k_dtree_1_1kdtree_1a2dc15e091ae69946ab7242675c7972b3" compoundref="_k_dtree_8_h" startline="283" endline="290">KDtree::kdtree&lt; coordinate_type, dimensions &gt;::kdtree</referencedby>
        <referencedby refid="class_k_dtree_1_1kdtree_1aa32d61a1534b52c07765750706a5335f" compoundref="_k_dtree_8_h" startline="213" endline="222">KDtree::kdtree&lt; coordinate_type, dimensions &gt;::make_tree</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_k_dtree_1_1kdtree_1a05e29ac38ae5a71beda716fbfddbc766" prot="private" static="no" mutable="no">
        <type><ref refid="struct_k_dtree_1_1kdtree_1_1node" kindref="compound">node</ref> *</type>
        <definition>node* KDtree::kdtree&lt; coordinate_type, dimensions &gt;::root_</definition>
        <argsstring></argsstring>
        <name>root_</name>
        <qualifiedname>KDtree::kdtree::root_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/KDtree.H" line="195" column="10" bodyfile="/home/weinberg/Projects/EXP/include/KDtree.H" bodystart="195" bodyend="-1"/>
        <referencedby refid="class_k_dtree_1_1kdtree_1a6983e3adb42de73fe6250532e0171091" compoundref="_k_dtree_8_h" startline="408" endline="414">KDtree::kdtree&lt; coordinate_type, dimensions &gt;::getPartition</referencedby>
        <referencedby refid="class_k_dtree_1_1kdtree_1a96221d70f375af756bb1d507d33aabd1" compoundref="_k_dtree_8_h" startline="301" endline="308">KDtree::kdtree&lt; coordinate_type, dimensions &gt;::kdtree</referencedby>
        <referencedby refid="class_k_dtree_1_1kdtree_1a2dc15e091ae69946ab7242675c7972b3" compoundref="_k_dtree_8_h" startline="283" endline="290">KDtree::kdtree&lt; coordinate_type, dimensions &gt;::kdtree</referencedby>
        <referencedby refid="class_k_dtree_1_1kdtree_1a9f434a583dfc36c081bc847ce08f604b" compoundref="_k_dtree_8_h" startline="380" endline="399">KDtree::kdtree&lt; coordinate_type, dimensions &gt;::nearestList</referencedby>
        <referencedby refid="class_k_dtree_1_1kdtree_1a1184c06c17ad742ef1d21321f48c9c6e" compoundref="_k_dtree_8_h" startline="347" endline="367">KDtree::kdtree&lt; coordinate_type, dimensions &gt;::nearestN</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_k_dtree_1_1kdtree_1ad7a1d004e9c6c0c775041dc47f487f1f" prot="private" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t KDtree::kdtree&lt; coordinate_type, dimensions &gt;::visited_</definition>
        <argsstring></argsstring>
        <name>visited_</name>
        <qualifiedname>KDtree::kdtree::visited_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/KDtree.H" line="197" column="12" bodyfile="/home/weinberg/Projects/EXP/include/KDtree.H" bodystart="197" bodyend="-1"/>
        <referencedby refid="class_k_dtree_1_1kdtree_1a96221d70f375af756bb1d507d33aabd1" compoundref="_k_dtree_8_h" startline="301" endline="308">KDtree::kdtree&lt; coordinate_type, dimensions &gt;::kdtree</referencedby>
        <referencedby refid="class_k_dtree_1_1kdtree_1a2dc15e091ae69946ab7242675c7972b3" compoundref="_k_dtree_8_h" startline="283" endline="290">KDtree::kdtree&lt; coordinate_type, dimensions &gt;::kdtree</referencedby>
        <referencedby refid="class_k_dtree_1_1kdtree_1a9f434a583dfc36c081bc847ce08f604b" compoundref="_k_dtree_8_h" startline="380" endline="399">KDtree::kdtree&lt; coordinate_type, dimensions &gt;::nearestList</referencedby>
        <referencedby refid="class_k_dtree_1_1kdtree_1a1184c06c17ad742ef1d21321f48c9c6e" compoundref="_k_dtree_8_h" startline="347" endline="367">KDtree::kdtree&lt; coordinate_type, dimensions &gt;::nearestN</referencedby>
        <referencedby refid="class_k_dtree_1_1kdtree_1aa58bba9dfe7d739510ef269d0eda12a7" compoundref="_k_dtree_8_h" startline="224" endline="246">KDtree::kdtree&lt; coordinate_type, dimensions &gt;::nearestN</referencedby>
        <referencedby refid="class_k_dtree_1_1kdtree_1a50778a9c54c2b709400e2a20c8e7dc2a" compoundref="_k_dtree_8_h" startline="322" endline="325">KDtree::kdtree&lt; coordinate_type, dimensions &gt;::visited</referencedby>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-func">
      <memberdef kind="function" id="class_k_dtree_1_1kdtree_1a08ace98fabf7f04410138593270d1cee" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void KDtree::kdtree&lt; coordinate_type, dimensions &gt;::accum</definition>
        <argsstring>(node *root, std::vector&lt; std::vector&lt; unsigned long &gt; &gt; &amp;ret, unsigned cur)</argsstring>
        <name>accum</name>
        <qualifiedname>KDtree::kdtree::accum</qualifiedname>
        <param>
          <type><ref refid="struct_k_dtree_1_1kdtree_1_1node" kindref="compound">node</ref> *</type>
          <declname>root</declname>
        </param>
        <param>
          <type>std::vector&lt; std::vector&lt; unsigned long &gt; &gt; &amp;</type>
          <declname>ret</declname>
        </param>
        <param>
          <type>unsigned</type>
          <declname>cur</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/KDtree.H" line="248" column="10" bodyfile="/home/weinberg/Projects/EXP/include/KDtree.H" bodystart="248" bodyend="253"/>
        <references refid="class_k_dtree_1_1kdtree_1a08ace98fabf7f04410138593270d1cee" compoundref="_k_dtree_8_h" startline="248" endline="253">KDtree::kdtree&lt; coordinate_type, dimensions &gt;::accum</references>
        <references refid="class_k_dtree_1_1point_1a93001f2f3d45f19f7c2b178df4ae2a7f" compoundref="_k_dtree_8_h" startline="137" endline="140">KDtree::point&lt; coordinate_type, dimensions &gt;::indx</references>
        <references refid="struct_k_dtree_1_1kdtree_1_1node_1a1b960ae93ff36d6385f90c1327bbe2b5" compoundref="_k_dtree_8_h" startline="187">KDtree::kdtree&lt; coordinate_type, dimensions &gt;::node::left_</references>
        <references refid="struct_k_dtree_1_1kdtree_1_1node_1a4b85af0f26388e84665ba184155ba3a4" compoundref="_k_dtree_8_h" startline="186">KDtree::kdtree&lt; coordinate_type, dimensions &gt;::node::point_</references>
        <references refid="struct_k_dtree_1_1kdtree_1_1node_1a2de68af5f626fac1e412ef947b1003f5" compoundref="_k_dtree_8_h" startline="188">KDtree::kdtree&lt; coordinate_type, dimensions &gt;::node::right_</references>
        <referencedby refid="class_k_dtree_1_1kdtree_1a08ace98fabf7f04410138593270d1cee" compoundref="_k_dtree_8_h" startline="248" endline="253">KDtree::kdtree&lt; coordinate_type, dimensions &gt;::accum</referencedby>
        <referencedby refid="class_k_dtree_1_1kdtree_1a3f1ff1ad7101d0cca08124390a4d8628" compoundref="_k_dtree_8_h" startline="255" endline="264">KDtree::kdtree&lt; coordinate_type, dimensions &gt;::walk</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_k_dtree_1_1kdtree_1aa32d61a1534b52c07765750706a5335f" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="struct_k_dtree_1_1kdtree_1_1node" kindref="compound">node</ref> *</type>
        <definition>node * KDtree::kdtree&lt; coordinate_type, dimensions &gt;::make_tree</definition>
        <argsstring>(size_t begin, size_t end, size_t index)</argsstring>
        <name>make_tree</name>
        <qualifiedname>KDtree::kdtree::make_tree</qualifiedname>
        <param>
          <type>size_t</type>
          <declname>begin</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>end</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/KDtree.H" line="213" column="10" bodyfile="/home/weinberg/Projects/EXP/include/KDtree.H" bodystart="213" bodyend="222"/>
        <references refid="class_k_dtree_1_1kdtree_1aa32d61a1534b52c07765750706a5335f" compoundref="_k_dtree_8_h" startline="213" endline="222">KDtree::kdtree&lt; coordinate_type, dimensions &gt;::make_tree</references>
        <references refid="class_k_dtree_1_1kdtree_1ae459908407ba06e78f5d11739d622b53" compoundref="_k_dtree_8_h" startline="198">KDtree::kdtree&lt; coordinate_type, dimensions &gt;::nodes_</references>
        <referencedby refid="class_k_dtree_1_1kdtree_1a96221d70f375af756bb1d507d33aabd1" compoundref="_k_dtree_8_h" startline="301" endline="308">KDtree::kdtree&lt; coordinate_type, dimensions &gt;::kdtree</referencedby>
        <referencedby refid="class_k_dtree_1_1kdtree_1a2dc15e091ae69946ab7242675c7972b3" compoundref="_k_dtree_8_h" startline="283" endline="290">KDtree::kdtree&lt; coordinate_type, dimensions &gt;::kdtree</referencedby>
        <referencedby refid="class_k_dtree_1_1kdtree_1aa32d61a1534b52c07765750706a5335f" compoundref="_k_dtree_8_h" startline="213" endline="222">KDtree::kdtree&lt; coordinate_type, dimensions &gt;::make_tree</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_k_dtree_1_1kdtree_1aa58bba9dfe7d739510ef269d0eda12a7" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void KDtree::kdtree&lt; coordinate_type, dimensions &gt;::nearestN</definition>
        <argsstring>(node *root, const point_type &amp;point, size_t index, int N, cache &amp;best_)</argsstring>
        <name>nearestN</name>
        <qualifiedname>KDtree::kdtree::nearestN</qualifiedname>
        <param>
          <type><ref refid="struct_k_dtree_1_1kdtree_1_1node" kindref="compound">node</ref> *</type>
          <declname>root</declname>
        </param>
        <param>
          <type>const <ref refid="class_k_dtree_1_1kdtree_1a90ad8cf6e73e970269c2dd27675eaede" kindref="member">point_type</ref> &amp;</type>
          <declname>point</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>index</declname>
        </param>
        <param>
          <type>int</type>
          <declname>N</declname>
        </param>
        <param>
          <type><ref refid="class_k_dtree_1_1kdtree_1a73c843c42fd511a710344813eb7e9376" kindref="member">cache</ref> &amp;</type>
          <declname>best_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/KDtree.H" line="224" column="10" bodyfile="/home/weinberg/Projects/EXP/include/KDtree.H" bodystart="224" bodyend="246"/>
        <references refid="class_k_dtree_1_1_cache_1a496ef1c22183670fd782fad18c0d559f" compoundref="_k_dtree_8_h" startline="20" endline="26">KDtree::Cache&lt; key_t, value_t &gt;::add</references>
        <references refid="struct_k_dtree_1_1kdtree_1_1node_1af3ead000be381d9633076f7a049c9ca1" compoundref="_k_dtree_8_h" startline="182" endline="185">KDtree::kdtree&lt; coordinate_type, dimensions &gt;::node::distance</references>
        <references refid="class_k_dtree_1_1point_1a693012127d3ee164726ed99f67d7ddac" compoundref="_k_dtree_8_h" startline="86" endline="89">KDtree::point&lt; coordinate_type, dimensions &gt;::get</references>
        <references refid="struct_k_dtree_1_1kdtree_1_1node_1a791f1cbecb854afdc09431606e5776b4" compoundref="_k_dtree_8_h" startline="177" endline="180">KDtree::kdtree&lt; coordinate_type, dimensions &gt;::node::get</references>
        <references refid="struct_k_dtree_1_1kdtree_1_1node_1a1b960ae93ff36d6385f90c1327bbe2b5" compoundref="_k_dtree_8_h" startline="187">KDtree::kdtree&lt; coordinate_type, dimensions &gt;::node::left_</references>
        <references refid="class_k_dtree_1_1kdtree_1aa58bba9dfe7d739510ef269d0eda12a7" compoundref="_k_dtree_8_h" startline="224" endline="246">KDtree::kdtree&lt; coordinate_type, dimensions &gt;::nearestN</references>
        <references refid="struct_k_dtree_1_1kdtree_1_1node_1a2de68af5f626fac1e412ef947b1003f5" compoundref="_k_dtree_8_h" startline="188">KDtree::kdtree&lt; coordinate_type, dimensions &gt;::node::right_</references>
        <references refid="class_k_dtree_1_1kdtree_1ad7a1d004e9c6c0c775041dc47f487f1f" compoundref="_k_dtree_8_h" startline="197">KDtree::kdtree&lt; coordinate_type, dimensions &gt;::visited_</references>
        <referencedby refid="class_k_dtree_1_1kdtree_1a9f434a583dfc36c081bc847ce08f604b" compoundref="_k_dtree_8_h" startline="380" endline="399">KDtree::kdtree&lt; coordinate_type, dimensions &gt;::nearestList</referencedby>
        <referencedby refid="class_k_dtree_1_1kdtree_1a1184c06c17ad742ef1d21321f48c9c6e" compoundref="_k_dtree_8_h" startline="347" endline="367">KDtree::kdtree&lt; coordinate_type, dimensions &gt;::nearestN</referencedby>
        <referencedby refid="class_k_dtree_1_1kdtree_1aa58bba9dfe7d739510ef269d0eda12a7" compoundref="_k_dtree_8_h" startline="224" endline="246">KDtree::kdtree&lt; coordinate_type, dimensions &gt;::nearestN</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_k_dtree_1_1kdtree_1a3f1ff1ad7101d0cca08124390a4d8628" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void KDtree::kdtree&lt; coordinate_type, dimensions &gt;::walk</definition>
        <argsstring>(node *root, std::vector&lt; std::vector&lt; unsigned long &gt; &gt; &amp;ret, unsigned int cur, unsigned int lev, unsigned int level)</argsstring>
        <name>walk</name>
        <qualifiedname>KDtree::kdtree::walk</qualifiedname>
        <param>
          <type><ref refid="struct_k_dtree_1_1kdtree_1_1node" kindref="compound">node</ref> *</type>
          <declname>root</declname>
        </param>
        <param>
          <type>std::vector&lt; std::vector&lt; unsigned long &gt; &gt; &amp;</type>
          <declname>ret</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>cur</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>lev</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>level</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/KDtree.H" line="255" column="10" bodyfile="/home/weinberg/Projects/EXP/include/KDtree.H" bodystart="255" bodyend="264"/>
        <references refid="class_k_dtree_1_1kdtree_1a08ace98fabf7f04410138593270d1cee" compoundref="_k_dtree_8_h" startline="248" endline="253">KDtree::kdtree&lt; coordinate_type, dimensions &gt;::accum</references>
        <references refid="class_k_dtree_1_1point_1a93001f2f3d45f19f7c2b178df4ae2a7f" compoundref="_k_dtree_8_h" startline="137" endline="140">KDtree::point&lt; coordinate_type, dimensions &gt;::indx</references>
        <references refid="struct_k_dtree_1_1kdtree_1_1node_1a1b960ae93ff36d6385f90c1327bbe2b5" compoundref="_k_dtree_8_h" startline="187">KDtree::kdtree&lt; coordinate_type, dimensions &gt;::node::left_</references>
        <references refid="struct_k_dtree_1_1kdtree_1_1node_1a4b85af0f26388e84665ba184155ba3a4" compoundref="_k_dtree_8_h" startline="186">KDtree::kdtree&lt; coordinate_type, dimensions &gt;::node::point_</references>
        <references refid="struct_k_dtree_1_1kdtree_1_1node_1a2de68af5f626fac1e412ef947b1003f5" compoundref="_k_dtree_8_h" startline="188">KDtree::kdtree&lt; coordinate_type, dimensions &gt;::node::right_</references>
        <references refid="class_k_dtree_1_1kdtree_1a3f1ff1ad7101d0cca08124390a4d8628" compoundref="_k_dtree_8_h" startline="255" endline="264">KDtree::kdtree&lt; coordinate_type, dimensions &gt;::walk</references>
        <referencedby refid="class_k_dtree_1_1kdtree_1a6983e3adb42de73fe6250532e0171091" compoundref="_k_dtree_8_h" startline="408" endline="414">KDtree::kdtree&lt; coordinate_type, dimensions &gt;::getPartition</referencedby>
        <referencedby refid="class_k_dtree_1_1kdtree_1a3f1ff1ad7101d0cca08124390a4d8628" compoundref="_k_dtree_8_h" startline="255" endline="264">KDtree::kdtree&lt; coordinate_type, dimensions &gt;::walk</referencedby>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_k_dtree_1_1kdtree_1a024425e1dac5ca602177aa0fbc114505" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double KDtree::kdtree&lt; coordinate_type, dimensions &gt;::distance</definition>
        <argsstring>(cache &amp;best_) const</argsstring>
        <name>distance</name>
        <qualifiedname>KDtree::kdtree::distance</qualifiedname>
        <param>
          <type><ref refid="class_k_dtree_1_1kdtree_1a73c843c42fd511a710344813eb7e9376" kindref="member">cache</ref> &amp;</type>
          <declname>best_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the distance between the input point and return value from the last call to nearest(). </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/KDtree.H" line="331" column="12" bodyfile="/home/weinberg/Projects/EXP/include/KDtree.H" bodystart="331" bodyend="334"/>
      </memberdef>
      <memberdef kind="function" id="class_k_dtree_1_1kdtree_1a5444c39408966995b6ec3634087ec521" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool KDtree::kdtree&lt; coordinate_type, dimensions &gt;::empty</definition>
        <argsstring>() const</argsstring>
        <name>empty</name>
        <qualifiedname>KDtree::kdtree::empty</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns true if the tree is empty, false otherwise. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/KDtree.H" line="313" column="10" bodyfile="/home/weinberg/Projects/EXP/include/KDtree.H" bodystart="313" bodyend="316"/>
        <references refid="class_k_dtree_1_1kdtree_1ae459908407ba06e78f5d11739d622b53" compoundref="_k_dtree_8_h" startline="198">KDtree::kdtree&lt; coordinate_type, dimensions &gt;::nodes_</references>
      </memberdef>
      <memberdef kind="function" id="class_k_dtree_1_1kdtree_1ac2e6fafd4d40a8bf6e9fc6e4c1ab5d67" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::vector&lt; double &gt;</type>
        <definition>std::vector&lt; double &gt; KDtree::kdtree&lt; coordinate_type, dimensions &gt;::getDist</definition>
        <argsstring>(cache &amp;best_)</argsstring>
        <name>getDist</name>
        <qualifiedname>KDtree::kdtree::getDist</qualifiedname>
        <param>
          <type><ref refid="class_k_dtree_1_1kdtree_1a73c843c42fd511a710344813eb7e9376" kindref="member">cache</ref> &amp;</type>
          <declname>best_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/KDtree.H" line="401" column="17" bodyfile="/home/weinberg/Projects/EXP/include/KDtree.H" bodystart="401" bodyend="406"/>
      </memberdef>
      <memberdef kind="function" id="class_k_dtree_1_1kdtree_1a6983e3adb42de73fe6250532e0171091" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::vector&lt; std::vector&lt; unsigned long &gt; &gt;</type>
        <definition>std::vector&lt; std::vector&lt; unsigned long &gt; &gt; KDtree::kdtree&lt; coordinate_type, dimensions &gt;::getPartition</definition>
        <argsstring>(unsigned level)</argsstring>
        <name>getPartition</name>
        <qualifiedname>KDtree::kdtree::getPartition</qualifiedname>
        <param>
          <type>unsigned</type>
          <declname>level</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/KDtree.H" line="408" column="17" bodyfile="/home/weinberg/Projects/EXP/include/KDtree.H" bodystart="408" bodyend="414"/>
        <references refid="class_k_dtree_1_1kdtree_1a05e29ac38ae5a71beda716fbfddbc766" compoundref="_k_dtree_8_h" startline="195">KDtree::kdtree&lt; coordinate_type, dimensions &gt;::root_</references>
        <references refid="class_k_dtree_1_1kdtree_1a3f1ff1ad7101d0cca08124390a4d8628" compoundref="_k_dtree_8_h" startline="255" endline="264">KDtree::kdtree&lt; coordinate_type, dimensions &gt;::walk</references>
      </memberdef>
      <memberdef kind="function" id="class_k_dtree_1_1kdtree_1a3f2048b06eab9fc46b0c9c5bcc9bc714" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>KDtree::kdtree&lt; coordinate_type, dimensions &gt;::kdtree</definition>
        <argsstring>(const kdtree &amp;)=delete</argsstring>
        <name>kdtree</name>
        <qualifiedname>KDtree::kdtree::kdtree</qualifiedname>
        <param>
          <type>const <ref refid="class_k_dtree_1_1kdtree" kindref="compound">kdtree</ref> &amp;</type>
        </param>
        <briefdescription>
<para>Copy constructor2. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/KDtree.H" line="271" column="5"/>
      </memberdef>
      <memberdef kind="function" id="class_k_dtree_1_1kdtree_1a96221d70f375af756bb1d507d33aabd1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename func</type>
          </param>
        </templateparamlist>
        <type></type>
        <definition>KDtree::kdtree&lt; coordinate_type, dimensions &gt;::kdtree</definition>
        <argsstring>(func &amp;&amp;f, size_t n)</argsstring>
        <name>kdtree</name>
        <qualifiedname>KDtree::kdtree::kdtree</qualifiedname>
        <param>
          <type>func &amp;&amp;</type>
          <declname>f</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Constructor taking a function object that generates points. The function object will be called n times to populate the tree.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>f</parametername>
</parameternamelist>
<parameterdescription>
<para>function that returns a point </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>n</parametername>
</parameternamelist>
<parameterdescription>
<para>number of points to add </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/KDtree.H" line="301" column="5" bodyfile="/home/weinberg/Projects/EXP/include/KDtree.H" bodystart="301" bodyend="308"/>
        <references refid="class_k_dtree_1_1kdtree_1aa32d61a1534b52c07765750706a5335f" compoundref="_k_dtree_8_h" startline="213" endline="222">KDtree::kdtree&lt; coordinate_type, dimensions &gt;::make_tree</references>
        <references refid="class_k_dtree_1_1kdtree_1ae459908407ba06e78f5d11739d622b53" compoundref="_k_dtree_8_h" startline="198">KDtree::kdtree&lt; coordinate_type, dimensions &gt;::nodes_</references>
        <references refid="class_k_dtree_1_1kdtree_1a05e29ac38ae5a71beda716fbfddbc766" compoundref="_k_dtree_8_h" startline="195">KDtree::kdtree&lt; coordinate_type, dimensions &gt;::root_</references>
        <references refid="class_k_dtree_1_1kdtree_1ad7a1d004e9c6c0c775041dc47f487f1f" compoundref="_k_dtree_8_h" startline="197">KDtree::kdtree&lt; coordinate_type, dimensions &gt;::visited_</references>
      </memberdef>
      <memberdef kind="function" id="class_k_dtree_1_1kdtree_1a2dc15e091ae69946ab7242675c7972b3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename iterator</type>
          </param>
        </templateparamlist>
        <type></type>
        <definition>KDtree::kdtree&lt; coordinate_type, dimensions &gt;::kdtree</definition>
        <argsstring>(iterator begin, iterator end)</argsstring>
        <name>kdtree</name>
        <qualifiedname>KDtree::kdtree::kdtree</qualifiedname>
        <param>
          <type>iterator</type>
          <declname>begin</declname>
        </param>
        <param>
          <type>iterator</type>
          <declname>end</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Constructor taking a pair of iterators. Adds each point in the range [begin, end) to the tree.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>begin</parametername>
</parameternamelist>
<parameterdescription>
<para>start of range </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>end</parametername>
</parameternamelist>
<parameterdescription>
<para>end of range </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/KDtree.H" line="283" column="5" bodyfile="/home/weinberg/Projects/EXP/include/KDtree.H" bodystart="283" bodyend="290"/>
        <references refid="class_k_dtree_1_1kdtree_1aa32d61a1534b52c07765750706a5335f" compoundref="_k_dtree_8_h" startline="213" endline="222">KDtree::kdtree&lt; coordinate_type, dimensions &gt;::make_tree</references>
        <references refid="class_k_dtree_1_1kdtree_1ae459908407ba06e78f5d11739d622b53" compoundref="_k_dtree_8_h" startline="198">KDtree::kdtree&lt; coordinate_type, dimensions &gt;::nodes_</references>
        <references refid="class_k_dtree_1_1kdtree_1a05e29ac38ae5a71beda716fbfddbc766" compoundref="_k_dtree_8_h" startline="195">KDtree::kdtree&lt; coordinate_type, dimensions &gt;::root_</references>
        <references refid="class_k_dtree_1_1kdtree_1ad7a1d004e9c6c0c775041dc47f487f1f" compoundref="_k_dtree_8_h" startline="197">KDtree::kdtree&lt; coordinate_type, dimensions &gt;::visited_</references>
      </memberdef>
      <memberdef kind="function" id="class_k_dtree_1_1kdtree_1a9f434a583dfc36c081bc847ce08f604b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::tuple&lt; std::vector&lt; <ref refid="class_k_dtree_1_1kdtree_1a90ad8cf6e73e970269c2dd27675eaede" kindref="member">point_type</ref> &gt;, double, <ref refid="class_k_dtree_1_1kdtree_1a73c843c42fd511a710344813eb7e9376" kindref="member">cache</ref> &gt;</type>
        <definition>std::tuple&lt; std::vector&lt; point_type &gt;, double, cache &gt; KDtree::kdtree&lt; coordinate_type, dimensions &gt;::nearestList</definition>
        <argsstring>(const point_type &amp;pt, int N)</argsstring>
        <name>nearestList</name>
        <qualifiedname>KDtree::kdtree::nearestList</qualifiedname>
        <param>
          <type>const <ref refid="class_k_dtree_1_1kdtree_1a90ad8cf6e73e970269c2dd27675eaede" kindref="member">point_type</ref> &amp;</type>
          <declname>pt</declname>
        </param>
        <param>
          <type>int</type>
          <declname>N</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Finds the nearest N points in the tree to the given point. It is not valid to call this function if the tree is empty.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pt</parametername>
</parameternamelist>
<parameterdescription>
<para>a point </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>N</parametername>
</parameternamelist>
<parameterdescription>
<para>is the number of nearest points</para>
</parameterdescription>
</parameteritem>
</parameterlist>
Returns: tuple of the nearest point list and the radius of the Nth point </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/KDtree.H" line="380" column="5" bodyfile="/home/weinberg/Projects/EXP/include/KDtree.H" bodystart="380" bodyend="399"/>
        <references refid="class_k_dtree_1_1kdtree_1aa58bba9dfe7d739510ef269d0eda12a7" compoundref="_k_dtree_8_h" startline="224" endline="246">KDtree::kdtree&lt; coordinate_type, dimensions &gt;::nearestN</references>
        <references refid="class_k_dtree_1_1kdtree_1a05e29ac38ae5a71beda716fbfddbc766" compoundref="_k_dtree_8_h" startline="195">KDtree::kdtree&lt; coordinate_type, dimensions &gt;::root_</references>
        <references refid="class_k_dtree_1_1kdtree_1ad7a1d004e9c6c0c775041dc47f487f1f" compoundref="_k_dtree_8_h" startline="197">KDtree::kdtree&lt; coordinate_type, dimensions &gt;::visited_</references>
      </memberdef>
      <memberdef kind="function" id="class_k_dtree_1_1kdtree_1a1184c06c17ad742ef1d21321f48c9c6e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::tuple&lt; <ref refid="class_k_dtree_1_1kdtree_1a90ad8cf6e73e970269c2dd27675eaede" kindref="member">point_type</ref>, double, double, <ref refid="class_k_dtree_1_1kdtree_1a73c843c42fd511a710344813eb7e9376" kindref="member">cache</ref> &gt;</type>
        <definition>std::tuple&lt; point_type, double, double, cache &gt; KDtree::kdtree&lt; coordinate_type, dimensions &gt;::nearestN</definition>
        <argsstring>(const point_type &amp;pt, int N)</argsstring>
        <name>nearestN</name>
        <qualifiedname>KDtree::kdtree::nearestN</qualifiedname>
        <param>
          <type>const <ref refid="class_k_dtree_1_1kdtree_1a90ad8cf6e73e970269c2dd27675eaede" kindref="member">point_type</ref> &amp;</type>
          <declname>pt</declname>
        </param>
        <param>
          <type>int</type>
          <declname>N</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Finds the nearest N points in the tree to the given point. It is not valid to call this function if the tree is empty.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pt</parametername>
</parameternamelist>
<parameterdescription>
<para>a point </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>N</parametername>
</parameternamelist>
<parameterdescription>
<para>is the number of nearest points</para>
</parameterdescription>
</parameteritem>
</parameterlist>
Returns: tuple of the first points, summed weight, and the radius of the Nth point </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/KDtree.H" line="347" column="5" bodyfile="/home/weinberg/Projects/EXP/include/KDtree.H" bodystart="347" bodyend="367"/>
        <references refid="class_k_dtree_1_1kdtree_1aa58bba9dfe7d739510ef269d0eda12a7" compoundref="_k_dtree_8_h" startline="224" endline="246">KDtree::kdtree&lt; coordinate_type, dimensions &gt;::nearestN</references>
        <references refid="class_k_dtree_1_1kdtree_1a05e29ac38ae5a71beda716fbfddbc766" compoundref="_k_dtree_8_h" startline="195">KDtree::kdtree&lt; coordinate_type, dimensions &gt;::root_</references>
        <references refid="class_k_dtree_1_1kdtree_1ad7a1d004e9c6c0c775041dc47f487f1f" compoundref="_k_dtree_8_h" startline="197">KDtree::kdtree&lt; coordinate_type, dimensions &gt;::visited_</references>
      </memberdef>
      <memberdef kind="function" id="class_k_dtree_1_1kdtree_1a95c7055268303a010a957cb9a2f72708" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_k_dtree_1_1kdtree" kindref="compound">kdtree</ref> &amp;</type>
        <definition>kdtree &amp; KDtree::kdtree&lt; coordinate_type, dimensions &gt;::operator=</definition>
        <argsstring>(const kdtree &amp;)=delete</argsstring>
        <name>operator=</name>
        <qualifiedname>KDtree::kdtree::operator=</qualifiedname>
        <param>
          <type>const <ref refid="class_k_dtree_1_1kdtree" kindref="compound">kdtree</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/KDtree.H" line="272" column="12"/>
      </memberdef>
      <memberdef kind="function" id="class_k_dtree_1_1kdtree_1a50778a9c54c2b709400e2a20c8e7dc2a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t KDtree::kdtree&lt; coordinate_type, dimensions &gt;::visited</definition>
        <argsstring>() const</argsstring>
        <name>visited</name>
        <qualifiedname>KDtree::kdtree::visited</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the number of nodes visited by the last call to nearest(). </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/KDtree.H" line="322" column="12" bodyfile="/home/weinberg/Projects/EXP/include/KDtree.H" bodystart="322" bodyend="325"/>
        <references refid="class_k_dtree_1_1kdtree_1ad7a1d004e9c6c0c775041dc47f487f1f" compoundref="_k_dtree_8_h" startline="197">KDtree::kdtree&lt; coordinate_type, dimensions &gt;::visited_</references>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>k-d tree implementation </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="2">
        <label>KDtree::kdtree&lt; coordinate_type, dimensions &gt;::node</label>
        <link refid="struct_k_dtree_1_1kdtree_1_1node"/>
        <childnode refid="2" relation="usage">
          <edgelabel>left_</edgelabel>
          <edgelabel>right_</edgelabel>
        </childnode>
      </node>
      <node id="1">
        <label>KDtree::kdtree&lt; coordinate_type, dimensions &gt;</label>
        <link refid="class_k_dtree_1_1kdtree"/>
        <childnode refid="2" relation="usage">
          <edgelabel>root_</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/weinberg/Projects/EXP/include/KDtree.H" line="165" column="3" bodyfile="/home/weinberg/Projects/EXP/include/KDtree.H" bodystart="166" bodyend="416"/>
    <listofallmembers>
      <member refid="class_k_dtree_1_1kdtree_1a08ace98fabf7f04410138593270d1cee" prot="private" virt="non-virtual"><scope>KDtree::kdtree</scope><name>accum</name></member>
      <member refid="class_k_dtree_1_1kdtree_1a73c843c42fd511a710344813eb7e9376" prot="public" virt="non-virtual"><scope>KDtree::kdtree</scope><name>cache</name></member>
      <member refid="class_k_dtree_1_1kdtree_1a024425e1dac5ca602177aa0fbc114505" prot="public" virt="non-virtual"><scope>KDtree::kdtree</scope><name>distance</name></member>
      <member refid="class_k_dtree_1_1kdtree_1a5444c39408966995b6ec3634087ec521" prot="public" virt="non-virtual"><scope>KDtree::kdtree</scope><name>empty</name></member>
      <member refid="class_k_dtree_1_1kdtree_1ac2e6fafd4d40a8bf6e9fc6e4c1ab5d67" prot="public" virt="non-virtual"><scope>KDtree::kdtree</scope><name>getDist</name></member>
      <member refid="class_k_dtree_1_1kdtree_1a6983e3adb42de73fe6250532e0171091" prot="public" virt="non-virtual"><scope>KDtree::kdtree</scope><name>getPartition</name></member>
      <member refid="class_k_dtree_1_1kdtree_1a3f2048b06eab9fc46b0c9c5bcc9bc714" prot="public" virt="non-virtual"><scope>KDtree::kdtree</scope><name>kdtree</name></member>
      <member refid="class_k_dtree_1_1kdtree_1a2dc15e091ae69946ab7242675c7972b3" prot="public" virt="non-virtual"><scope>KDtree::kdtree</scope><name>kdtree</name></member>
      <member refid="class_k_dtree_1_1kdtree_1a96221d70f375af756bb1d507d33aabd1" prot="public" virt="non-virtual"><scope>KDtree::kdtree</scope><name>kdtree</name></member>
      <member refid="class_k_dtree_1_1kdtree_1aa32d61a1534b52c07765750706a5335f" prot="private" virt="non-virtual"><scope>KDtree::kdtree</scope><name>make_tree</name></member>
      <member refid="class_k_dtree_1_1kdtree_1a9f434a583dfc36c081bc847ce08f604b" prot="public" virt="non-virtual"><scope>KDtree::kdtree</scope><name>nearestList</name></member>
      <member refid="class_k_dtree_1_1kdtree_1aa58bba9dfe7d739510ef269d0eda12a7" prot="private" virt="non-virtual"><scope>KDtree::kdtree</scope><name>nearestN</name></member>
      <member refid="class_k_dtree_1_1kdtree_1a1184c06c17ad742ef1d21321f48c9c6e" prot="public" virt="non-virtual"><scope>KDtree::kdtree</scope><name>nearestN</name></member>
      <member refid="class_k_dtree_1_1kdtree_1ae459908407ba06e78f5d11739d622b53" prot="private" virt="non-virtual"><scope>KDtree::kdtree</scope><name>nodes_</name></member>
      <member refid="class_k_dtree_1_1kdtree_1a95c7055268303a010a957cb9a2f72708" prot="public" virt="non-virtual"><scope>KDtree::kdtree</scope><name>operator=</name></member>
      <member refid="class_k_dtree_1_1kdtree_1a90ad8cf6e73e970269c2dd27675eaede" prot="public" virt="non-virtual"><scope>KDtree::kdtree</scope><name>point_type</name></member>
      <member refid="class_k_dtree_1_1kdtree_1a05e29ac38ae5a71beda716fbfddbc766" prot="private" virt="non-virtual"><scope>KDtree::kdtree</scope><name>root_</name></member>
      <member refid="class_k_dtree_1_1kdtree_1a50778a9c54c2b709400e2a20c8e7dc2a" prot="public" virt="non-virtual"><scope>KDtree::kdtree</scope><name>visited</name></member>
      <member refid="class_k_dtree_1_1kdtree_1ad7a1d004e9c6c0c775041dc47f487f1f" prot="private" virt="non-virtual"><scope>KDtree::kdtree</scope><name>visited_</name></member>
      <member refid="class_k_dtree_1_1kdtree_1a3f1ff1ad7101d0cca08124390a4d8628" prot="private" virt="non-virtual"><scope>KDtree::kdtree</scope><name>walk</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
