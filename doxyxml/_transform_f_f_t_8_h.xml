<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="_transform_f_f_t_8_h" kind="file" language="C++">
    <compoundname>TransformFFT.H</compoundname>
    <includes local="no">complex</includes>
    <includes local="no">vector</includes>
    <includes local="no">Eigen/Dense</includes>
    <includes local="no">fftw3.h</includes>
    <incdepgraph>
      <node id="1">
        <label>/home/weinberg/Projects/EXP/include/TransformFFT.H</label>
        <link refid="_transform_f_f_t_8_h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>Eigen/Dense</label>
      </node>
      <node id="2">
        <label>complex</label>
      </node>
      <node id="5">
        <label>fftw3.h</label>
      </node>
      <node id="3">
        <label>vector</label>
      </node>
    </incdepgraph>
    <innerclass refid="class_transform_f_f_t" prot="public">TransformFFT</innerclass>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>_TransformFFT_h</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_TransformFFT_h</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;complex&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;Eigen/Dense&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;fftw3.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12" refid="class_transform_f_f_t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_transform_f_f_t" kindref="compound">TransformFFT</ref></highlight></codeline>
<codeline lineno="13"><highlight class="normal">{</highlight></codeline>
<codeline lineno="14" refid="class_transform_f_f_t_1a4b7b60f83f9e4951698e5d2eb00f2fd6" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_transform_f_f_t_1a7be5660c1bce374cd503a0e61b13e3d1" kindref="member">N</ref>,<sp/><ref refid="class_transform_f_f_t_1ace352464af0c9dac5f3be0dc429ce0ba" kindref="member">lo</ref>,<sp/><ref refid="class_transform_f_f_t_1a4b7b60f83f9e4951698e5d2eb00f2fd6" kindref="member">hi</ref>;</highlight></codeline>
<codeline lineno="15" refid="class_transform_f_f_t_1a42df46b4c42f409decec15185c438462" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_transform_f_f_t_1a7356961908810ec6060dadee8bccf629" kindref="member">dr</ref>,<sp/><ref refid="class_transform_f_f_t_1a42df46b4c42f409decec15185c438462" kindref="member">dk</ref>;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17" refid="class_transform_f_f_t_1acba28259ac41f0fb8279714bce108103" refkind="member"><highlight class="normal"><sp/><sp/>fftw_plan<sp/><ref refid="class_transform_f_f_t_1acba28259ac41f0fb8279714bce108103" kindref="member">p</ref>;</highlight></codeline>
<codeline lineno="18" refid="class_transform_f_f_t_1aa5ba3063dbb94c59ceb6c4b043bf938f" refkind="member"><highlight class="normal"><sp/><sp/>std::vector&lt;double&gt;<sp/><ref refid="class_transform_f_f_t_1aa5ba3063dbb94c59ceb6c4b043bf938f" kindref="member">in</ref>;</highlight></codeline>
<codeline lineno="19" refid="class_transform_f_f_t_1a1784d9455cb8bb53e7c87bb7f205bbaa" refkind="member"><highlight class="normal"><sp/><sp/>std::vector&lt;std::complex&lt;double&gt;&gt;<sp/><ref refid="class_transform_f_f_t_1a1784d9455cb8bb53e7c87bb7f205bbaa" kindref="member">out</ref>;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="23" refid="class_transform_f_f_t_1a3d44fcbe8ed0702f26e75b4f4eb52bce" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="class_transform_f_f_t_1a3d44fcbe8ed0702f26e75b4f4eb52bce" kindref="member">TransformFFT</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_transform_f_f_t_1a7356961908810ec6060dadee8bccf629" kindref="member">dr</ref>,<sp/>std::vector&lt;double&gt;&amp;<sp/>Y);</highlight></codeline>
<codeline lineno="24" refid="class_transform_f_f_t_1aa86943ee4c35687cabadf48dc10d0ed7" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="class_transform_f_f_t_1aa86943ee4c35687cabadf48dc10d0ed7" kindref="member">TransformFFT</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_transform_f_f_t_1a7356961908810ec6060dadee8bccf629" kindref="member">dr</ref>,<sp/>Eigen::VectorXd&amp;<sp/>Y);</highlight></codeline>
<codeline lineno="25" refid="class_transform_f_f_t_1ae5747eeb7306cf05f77bf74efd020306" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="class_transform_f_f_t_1ae5747eeb7306cf05f77bf74efd020306" kindref="member">~TransformFFT</ref>();</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27" refid="class_transform_f_f_t_1ad82812703356ed0c89ca4974667e5bf4" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_transform_f_f_t_1ad82812703356ed0c89ca4974667e5bf4" kindref="member">Power</ref>(Eigen::VectorXd&amp;<sp/>F,<sp/>Eigen::VectorXd&amp;<sp/>P);</highlight></codeline>
<codeline lineno="28" refid="class_transform_f_f_t_1a63c3e06563294025b7af2057e8d69080" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_transform_f_f_t_1a63c3e06563294025b7af2057e8d69080" kindref="member">Power</ref>(std::vector&lt;double&gt;&amp;<sp/>F,<sp/>std::vector&lt;double&gt;&amp;<sp/>P);</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30" refid="class_transform_f_f_t_1a7077e53d998e105cd5c654948694fff1" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_transform_f_f_t_1a7077e53d998e105cd5c654948694fff1" kindref="member">Inverse</ref>(Eigen::VectorXd&amp;<sp/>F,<sp/>Eigen::VectorXcd&amp;<sp/>W);</highlight></codeline>
<codeline lineno="31" refid="class_transform_f_f_t_1ab284d5f1fdf86ee2265c50b408a5f75e" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_transform_f_f_t_1ab284d5f1fdf86ee2265c50b408a5f75e" kindref="member">Inverse</ref>(std::vector&lt;double&gt;&amp;<sp/>F,<sp/></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;double&gt;&amp;<sp/>Wr,<sp/>std::vector&lt;double&gt;&amp;<sp/>Wi);</highlight></codeline>
<codeline lineno="33"><highlight class="normal">};</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/weinberg/Projects/EXP/include/TransformFFT.H"/>
  </compounddef>
</doxygen>
