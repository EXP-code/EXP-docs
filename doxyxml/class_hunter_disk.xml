<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="class_hunter_disk" kind="class" language="C++" prot="public">
    <compoundname>HunterDisk</compoundname>
    <basecompoundref refid="class_axi_sym_model" prot="public" virt="non-virtual">AxiSymModel</basecompoundref>
    <includes refid="hunter_8_h" local="no">hunter.H</includes>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_hunter_disk_1abdf5098713085801ee54b617bad71dd3" prot="private" static="no" mutable="no">
        <type>Vector</type>
        <definition>Vector HunterDisk::cvec</definition>
        <argsstring></argsstring>
        <name>cvec</name>
        <qualifiedname>HunterDisk::cvec</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/hunter.H" line="19" column="14" bodyfile="/home/weinberg/Projects/EXP/include/hunter.H" bodystart="19" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hunter_disk_1ade5637c7bd38f07cfd076ec3bb5157cf" prot="private" static="no" mutable="no">
        <type>Vector</type>
        <definition>Vector HunterDisk::gam</definition>
        <argsstring></argsstring>
        <name>gam</name>
        <qualifiedname>HunterDisk::gam</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/hunter.H" line="19" column="10" bodyfile="/home/weinberg/Projects/EXP/include/hunter.H" bodystart="19" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hunter_disk_1a363cd7b6341774439c02513885fb1e40" prot="private" static="no" mutable="no">
        <type>Logic</type>
        <definition>Logic HunterDisk::hankel_setup</definition>
        <argsstring></argsstring>
        <name>hankel_setup</name>
        <qualifiedname>HunterDisk::hankel_setup</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/hunter.H" line="32" column="9" bodyfile="/home/weinberg/Projects/EXP/include/hunter.H" bodystart="32" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hunter_disk_1a47198276536f12718495b2547e045385" prot="private" static="no" mutable="no">
        <type>Vector</type>
        <definition>Vector HunterDisk::K</definition>
        <argsstring></argsstring>
        <name>K</name>
        <qualifiedname>HunterDisk::K</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/hunter.H" line="33" column="14" bodyfile="/home/weinberg/Projects/EXP/include/hunter.H" bodystart="33" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hunter_disk_1a88454d3b998edb9c198abb3e16ac3e5e" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double HunterDisk::kfac</definition>
        <argsstring></argsstring>
        <name>kfac</name>
        <qualifiedname>HunterDisk::kfac</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/hunter.H" line="17" column="26" bodyfile="/home/weinberg/Projects/EXP/include/hunter.H" bodystart="17" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hunter_disk_1a8c56957216bf9ca56efe91e375d1f2c1" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double HunterDisk::kmax</definition>
        <argsstring></argsstring>
        <name>kmax</name>
        <qualifiedname>HunterDisk::kmax</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/hunter.H" line="34" column="10" bodyfile="/home/weinberg/Projects/EXP/include/hunter.H" bodystart="34" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hunter_disk_1ad15ebfaf68f042d8af7f372b42821203" prot="private" static="no" mutable="no">
        <type>Vector</type>
        <definition>Vector HunterDisk::m_mass</definition>
        <argsstring></argsstring>
        <name>m_mass</name>
        <qualifiedname>HunterDisk::m_mass</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/hunter.H" line="30" column="17" bodyfile="/home/weinberg/Projects/EXP/include/hunter.H" bodystart="30" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hunter_disk_1a70eb6b3d3d47eb2bbcaeffd2f0563489" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double HunterDisk::mass</definition>
        <argsstring></argsstring>
        <name>mass</name>
        <qualifiedname>HunterDisk::mass</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/hunter.H" line="16" column="15" bodyfile="/home/weinberg/Projects/EXP/include/hunter.H" bodystart="16" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hunter_disk_1aa8c7bd3888aaf6c8848490cd28a40b7f" prot="private" static="no" mutable="no">
        <type>Logic</type>
        <definition>Logic HunterDisk::mass_setup</definition>
        <argsstring></argsstring>
        <name>mass_setup</name>
        <qualifiedname>HunterDisk::mass_setup</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/hunter.H" line="27" column="9" bodyfile="/home/weinberg/Projects/EXP/include/hunter.H" bodystart="27" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hunter_disk_1a1b362f6d37cb2738b508366161046af6" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int HunterDisk::mgrid</definition>
        <argsstring></argsstring>
        <name>mgrid</name>
        <qualifiedname>HunterDisk::mgrid</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/hunter.H" line="29" column="7" bodyfile="/home/weinberg/Projects/EXP/include/hunter.H" bodystart="29" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hunter_disk_1a24a0924957dad7e0c0f88c2f07d0895f" prot="private" static="no" mutable="no">
        <type>Logic</type>
        <definition>Logic HunterDisk::model_setup</definition>
        <argsstring></argsstring>
        <name>model_setup</name>
        <qualifiedname>HunterDisk::model_setup</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/hunter.H" line="21" column="9" bodyfile="/home/weinberg/Projects/EXP/include/hunter.H" bodystart="21" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hunter_disk_1afff8fe078ebf1d8711614ec4f7ef0014" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int HunterDisk::n</definition>
        <argsstring></argsstring>
        <name>n</name>
        <qualifiedname>HunterDisk::n</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/hunter.H" line="15" column="7" bodyfile="/home/weinberg/Projects/EXP/include/hunter.H" bodystart="15" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hunter_disk_1a1980d397e8f328316e23d08e7348e212" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int HunterDisk::nhank</definition>
        <argsstring></argsstring>
        <name>nhank</name>
        <qualifiedname>HunterDisk::nhank</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/hunter.H" line="35" column="8" bodyfile="/home/weinberg/Projects/EXP/include/hunter.H" bodystart="35" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hunter_disk_1a3daf9fabb6eeb29fe19b441061b4f29e" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int HunterDisk::nint</definition>
        <argsstring></argsstring>
        <name>nint</name>
        <qualifiedname>HunterDisk::nint</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/hunter.H" line="23" column="7" bodyfile="/home/weinberg/Projects/EXP/include/hunter.H" bodystart="23" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hunter_disk_1aa5c2e4339ea330b5eb5be02f6c4693ae" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double HunterDisk::offset_dp</definition>
        <argsstring></argsstring>
        <name>offset_dp</name>
        <qualifiedname>HunterDisk::offset_dp</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/hunter.H" line="40" column="10" bodyfile="/home/weinberg/Projects/EXP/include/hunter.H" bodystart="40" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hunter_disk_1a03f1f7db82b82043935dc35dbbf05709" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double HunterDisk::offset_dp2</definition>
        <argsstring></argsstring>
        <name>offset_dp2</name>
        <qualifiedname>HunterDisk::offset_dp2</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/hunter.H" line="41" column="10" bodyfile="/home/weinberg/Projects/EXP/include/hunter.H" bodystart="41" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hunter_disk_1ab6161283ab6067e78523cb3ce45120d4" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double HunterDisk::offset_p</definition>
        <argsstring></argsstring>
        <name>offset_p</name>
        <qualifiedname>HunterDisk::offset_p</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/hunter.H" line="39" column="10" bodyfile="/home/weinberg/Projects/EXP/include/hunter.H" bodystart="39" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hunter_disk_1a38a02ba1ecec55948df5849f0ebade11" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double HunterDisk::omfac</definition>
        <argsstring></argsstring>
        <name>omfac</name>
        <qualifiedname>HunterDisk::omfac</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/hunter.H" line="17" column="15" bodyfile="/home/weinberg/Projects/EXP/include/hunter.H" bodystart="17" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hunter_disk_1a7a08c35750e9e390621f30ffe62c6ae8" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double HunterDisk::pfac</definition>
        <argsstring></argsstring>
        <name>pfac</name>
        <qualifiedname>HunterDisk::pfac</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/hunter.H" line="17" column="21" bodyfile="/home/weinberg/Projects/EXP/include/hunter.H" bodystart="17" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hunter_disk_1a9a089c805396ceb5ea033aa11b59ce6a" prot="private" static="no" mutable="no">
        <type>Vector</type>
        <definition>Vector HunterDisk::r_mass</definition>
        <argsstring></argsstring>
        <name>r_mass</name>
        <qualifiedname>HunterDisk::r_mass</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/hunter.H" line="30" column="10" bodyfile="/home/weinberg/Projects/EXP/include/hunter.H" bodystart="30" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hunter_disk_1abf01ce72bdade42bbe5eaee91d817d98" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double HunterDisk::rcut</definition>
        <argsstring></argsstring>
        <name>rcut</name>
        <qualifiedname>HunterDisk::rcut</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/hunter.H" line="16" column="20" bodyfile="/home/weinberg/Projects/EXP/include/hunter.H" bodystart="16" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hunter_disk_1a6687d3c573a707f9b72cc97d4adac59d" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double HunterDisk::rmax</definition>
        <argsstring></argsstring>
        <name>rmax</name>
        <qualifiedname>HunterDisk::rmax</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/hunter.H" line="16" column="10" bodyfile="/home/weinberg/Projects/EXP/include/hunter.H" bodystart="16" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hunter_disk_1afac88f68933ae9bd48d5fb945c0c4949" prot="private" static="no" mutable="no">
        <type>Vector</type>
        <definition>Vector HunterDisk::S_K</definition>
        <argsstring></argsstring>
        <name>S_K</name>
        <qualifiedname>HunterDisk::S_K</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/hunter.H" line="33" column="10" bodyfile="/home/weinberg/Projects/EXP/include/hunter.H" bodystart="33" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hunter_disk_1a124bae6cdffff5bd40cc122d035d4e4c" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double HunterDisk::sfac</definition>
        <argsstring></argsstring>
        <name>sfac</name>
        <qualifiedname>HunterDisk::sfac</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/hunter.H" line="17" column="10" bodyfile="/home/weinberg/Projects/EXP/include/hunter.H" bodystart="17" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="class_hunter_disk_1a7aeccddb17c9d8320ec9f1daf71830ec" prot="private" static="yes" mutable="no">
        <type>const double</type>
        <definition>const double HunterDisk::defKMAX</definition>
        <argsstring></argsstring>
        <name>defKMAX</name>
        <qualifiedname>HunterDisk::defKMAX</qualifiedname>
        <initializer>=20.0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/hunter.H" line="46" column="23" bodyfile="/home/weinberg/Projects/EXP/include/hunter.H" bodystart="46" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hunter_disk_1a2fde533420a8f0d3b7a472191853a231" prot="private" static="yes" mutable="no">
        <type>const int</type>
        <definition>const int HunterDisk::defMGRID</definition>
        <argsstring></argsstring>
        <name>defMGRID</name>
        <qualifiedname>HunterDisk::defMGRID</qualifiedname>
        <initializer>=200</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/hunter.H" line="44" column="20" bodyfile="/home/weinberg/Projects/EXP/include/hunter.H" bodystart="44" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hunter_disk_1a7599a22f73a869e0c6ed9cb9906565b3" prot="private" static="yes" mutable="no">
        <type>const int</type>
        <definition>const int HunterDisk::defNHANK</definition>
        <argsstring></argsstring>
        <name>defNHANK</name>
        <qualifiedname>HunterDisk::defNHANK</qualifiedname>
        <initializer>=400</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/hunter.H" line="45" column="20" bodyfile="/home/weinberg/Projects/EXP/include/hunter.H" bodystart="45" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hunter_disk_1a2aa59d0c4e6e7b14ff7025aa5dd3c84f" prot="private" static="yes" mutable="no">
        <type>const int</type>
        <definition>const int HunterDisk::defNINT</definition>
        <argsstring></argsstring>
        <name>defNINT</name>
        <qualifiedname>HunterDisk::defNINT</qualifiedname>
        <initializer>=200</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/hunter.H" line="43" column="20" bodyfile="/home/weinberg/Projects/EXP/include/hunter.H" bodystart="43" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hunter_disk_1a60885b6ff4672898796457c4d1ea72c2" prot="private" static="yes" mutable="no">
        <type>const double</type>
        <definition>const double HunterDisk::defRCUT</definition>
        <argsstring></argsstring>
        <name>defRCUT</name>
        <qualifiedname>HunterDisk::defRCUT</qualifiedname>
        <initializer>=8.0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/hunter.H" line="47" column="23" bodyfile="/home/weinberg/Projects/EXP/include/hunter.H" bodystart="47" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-func">
      <memberdef kind="function" id="class_hunter_disk_1a1137c0681e72b99035015b1d4501716a" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Vector</type>
        <definition>Vector HunterDisk::d2vplgndr</definition>
        <argsstring>(double)</argsstring>
        <name>d2vplgndr</name>
        <qualifiedname>HunterDisk::d2vplgndr</qualifiedname>
        <param>
          <type>double</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/hunter.H" line="25" column="27"/>
      </memberdef>
      <memberdef kind="function" id="class_hunter_disk_1a3619ddaa065b3e24bc1c62be0869375b" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Vector</type>
        <definition>Vector HunterDisk::dvplgndr</definition>
        <argsstring>(double)</argsstring>
        <name>dvplgndr</name>
        <qualifiedname>HunterDisk::dvplgndr</qualifiedname>
        <param>
          <type>double</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/hunter.H" line="25" column="18"/>
      </memberdef>
      <memberdef kind="function" id="class_hunter_disk_1afa468a36fe2362936e72ada1f4a729a9" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void HunterDisk::setup_mass</definition>
        <argsstring>(void)</argsstring>
        <name>setup_mass</name>
        <qualifiedname>HunterDisk::setup_mass</qualifiedname>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/hunter.H" line="28" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_hunter_disk_1ae6d965d87d1cf5be7608fd66d9de3b41" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void HunterDisk::setup_model</definition>
        <argsstring>(void)</argsstring>
        <name>setup_model</name>
        <qualifiedname>HunterDisk::setup_model</qualifiedname>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/hunter.H" line="22" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_hunter_disk_1afbc512c906143b5cc020896188c6790e" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void HunterDisk::tabulate_hankel</definition>
        <argsstring>(void)</argsstring>
        <name>tabulate_hankel</name>
        <qualifiedname>HunterDisk::tabulate_hankel</qualifiedname>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/hunter.H" line="37" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_hunter_disk_1a5d9dc6c1a508e857e3b262fc96cb9878" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Vector</type>
        <definition>Vector HunterDisk::vplgndr</definition>
        <argsstring>(double)</argsstring>
        <name>vplgndr</name>
        <qualifiedname>HunterDisk::vplgndr</qualifiedname>
        <param>
          <type>double</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/hunter.H" line="25" column="10"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_hunter_disk_1a673cc41f41f7bc72593c5419eb5e8987" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>double</type>
        <definition>double HunterDisk::d2fde2</definition>
        <argsstring>(double E, double L)</argsstring>
        <name>d2fde2</name>
        <qualifiedname>HunterDisk::d2fde2</qualifiedname>
        <reimplements refid="class_axi_sym_model_1a12d39568c81a72b9e3ea2277816d05f9">d2fde2</reimplements>
        <param>
          <type>double</type>
          <declname>E</declname>
        </param>
        <param>
          <type>double</type>
          <declname>L</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/hunter.H" line="92" column="10" bodyfile="/home/weinberg/Projects/EXP/include/hunter.H" bodystart="92" bodyend="94"/>
        <references refid="class_mass_model_1a6e55e3cb2647fcc4840e969768930b9f" compoundref="massmodel_8_h" startline="101" endline="106">MassModel::bomb</references>
      </memberdef>
      <memberdef kind="function" id="class_hunter_disk_1ae5befb0384c024c55cfbe426854d5fda" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>double</type>
        <definition>double HunterDisk::dfde</definition>
        <argsstring>(double E, double L)</argsstring>
        <name>dfde</name>
        <qualifiedname>HunterDisk::dfde</qualifiedname>
        <reimplements refid="class_axi_sym_model_1a2978a19f299f41fdea7e3cefc1164e3a">dfde</reimplements>
        <param>
          <type>double</type>
          <declname>E</declname>
        </param>
        <param>
          <type>double</type>
          <declname>L</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/hunter.H" line="84" column="10" bodyfile="/home/weinberg/Projects/EXP/include/hunter.H" bodystart="84" bodyend="86"/>
        <references refid="class_mass_model_1a6e55e3cb2647fcc4840e969768930b9f" compoundref="massmodel_8_h" startline="101" endline="106">MassModel::bomb</references>
      </memberdef>
      <memberdef kind="function" id="class_hunter_disk_1a84dc8c74bcfa02317ebe9ff29bbe45dd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>double</type>
        <definition>double HunterDisk::dfdl</definition>
        <argsstring>(double E, double L)</argsstring>
        <name>dfdl</name>
        <qualifiedname>HunterDisk::dfdl</qualifiedname>
        <reimplements refid="class_axi_sym_model_1a120cec5af54e43d727f83df8678cc93b">dfdl</reimplements>
        <param>
          <type>double</type>
          <declname>E</declname>
        </param>
        <param>
          <type>double</type>
          <declname>L</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/hunter.H" line="88" column="10" bodyfile="/home/weinberg/Projects/EXP/include/hunter.H" bodystart="88" bodyend="90"/>
        <references refid="class_mass_model_1a6e55e3cb2647fcc4840e969768930b9f" compoundref="massmodel_8_h" startline="101" endline="106">MassModel::bomb</references>
      </memberdef>
      <memberdef kind="function" id="class_hunter_disk_1a615ce48a7e56365fa147b8c942ef29cb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>double</type>
        <definition>double HunterDisk::distf</definition>
        <argsstring>(double E, double L)</argsstring>
        <name>distf</name>
        <qualifiedname>HunterDisk::distf</qualifiedname>
        <reimplements refid="class_axi_sym_model_1a5530c3612f1c09c6c77401a9e21550b8">distf</reimplements>
        <param>
          <type>double</type>
          <declname>E</declname>
        </param>
        <param>
          <type>double</type>
          <declname>L</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/hunter.H" line="80" column="10" bodyfile="/home/weinberg/Projects/EXP/include/hunter.H" bodystart="80" bodyend="82"/>
        <references refid="class_mass_model_1a6e55e3cb2647fcc4840e969768930b9f" compoundref="massmodel_8_h" startline="101" endline="106">MassModel::bomb</references>
      </memberdef>
      <memberdef kind="function" id="class_hunter_disk_1a42a9fa1f93af1ced9f80fa63c1f7bd15" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>double HunterDisk::get_density</definition>
        <argsstring>(const double r)</argsstring>
        <name>get_density</name>
        <qualifiedname>HunterDisk::get_density</qualifiedname>
        <reimplements refid="class_axi_sym_model_1afe871e6b3d1dee86e7f045262559f69a">get_density</reimplements>
        <param>
          <type>const double</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/hunter.H" line="64" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_hunter_disk_1af99a03a59ba0b83966f467808ad2a27a" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>double HunterDisk::get_dpot</definition>
        <argsstring>(const double r)</argsstring>
        <name>get_dpot</name>
        <qualifiedname>HunterDisk::get_dpot</qualifiedname>
        <reimplements refid="class_axi_sym_model_1acc81caff799658620cd3075a2104d845">get_dpot</reimplements>
        <param>
          <type>const double</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/hunter.H" line="68" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_hunter_disk_1ad9076b5c77a753e868411485681602a5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double HunterDisk::get_dpot</definition>
        <argsstring>(const double r, const double z)</argsstring>
        <name>get_dpot</name>
        <qualifiedname>HunterDisk::get_dpot</qualifiedname>
        <param>
          <type>const double</type>
          <declname>r</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>z</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/hunter.H" line="98" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_hunter_disk_1a25b4689e9ac2cdef2c021ee18e0bafdb" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>double HunterDisk::get_dpot2</definition>
        <argsstring>(const double r)</argsstring>
        <name>get_dpot2</name>
        <qualifiedname>HunterDisk::get_dpot2</qualifiedname>
        <reimplements refid="class_axi_sym_model_1a77b9bb693457557d379167ca0ca2caae">get_dpot2</reimplements>
        <param>
          <type>const double</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/hunter.H" line="70" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_hunter_disk_1a05ba212df8a443c0ea94a8d5a9f3446d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double HunterDisk::get_dpot2</definition>
        <argsstring>(const double r, const double z)</argsstring>
        <name>get_dpot2</name>
        <qualifiedname>HunterDisk::get_dpot2</qualifiedname>
        <param>
          <type>const double</type>
          <declname>r</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>z</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/hunter.H" line="100" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_hunter_disk_1a54d5a3014d036e20d5379483e86fd316" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>double HunterDisk::get_mass</definition>
        <argsstring>(const double r)</argsstring>
        <name>get_mass</name>
        <qualifiedname>HunterDisk::get_mass</qualifiedname>
        <reimplements refid="class_axi_sym_model_1a7d2efb78351c828250fd6bfc1b3a7465">get_mass</reimplements>
        <param>
          <type>const double</type>
        </param>
        <briefdescription>
<para>Access the profile. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/hunter.H" line="62" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_hunter_disk_1a3c62bdf7240114cd0b33299b8e6252c4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>double</type>
        <definition>double HunterDisk::get_max_radius</definition>
        <argsstring>(void)</argsstring>
        <name>get_max_radius</name>
        <qualifiedname>HunterDisk::get_max_radius</qualifiedname>
        <reimplements refid="class_axi_sym_model_1a87510a095e6b9533812eba57c7ca862c">get_max_radius</reimplements>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/hunter.H" line="78" column="10" bodyfile="/home/weinberg/Projects/EXP/include/hunter.H" bodystart="78" bodyend="78"/>
      </memberdef>
      <memberdef kind="function" id="class_hunter_disk_1a2a2476206cb5f4e62a3ca2db46837a6b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>double</type>
        <definition>double HunterDisk::get_min_radius</definition>
        <argsstring>(void)</argsstring>
        <name>get_min_radius</name>
        <qualifiedname>HunterDisk::get_min_radius</qualifiedname>
        <reimplements refid="class_axi_sym_model_1ab304897a450a2d79f4e27841526b70e9">get_min_radius</reimplements>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/hunter.H" line="76" column="10" bodyfile="/home/weinberg/Projects/EXP/include/hunter.H" bodystart="76" bodyend="76"/>
      </memberdef>
      <memberdef kind="function" id="class_hunter_disk_1a275d6e4c24f2f60a4dc8e245f53602fe" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>double HunterDisk::get_pot</definition>
        <argsstring>(const double r)</argsstring>
        <name>get_pot</name>
        <qualifiedname>HunterDisk::get_pot</qualifiedname>
        <reimplements refid="class_axi_sym_model_1a1c0583421a9f67665aa9157cbe16bbba">get_pot</reimplements>
        <param>
          <type>const double</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/hunter.H" line="66" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_hunter_disk_1a9f2470c94a8ec620d96a7eea14f5732b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double HunterDisk::get_pot</definition>
        <argsstring>(const double r, const double z)</argsstring>
        <name>get_pot</name>
        <qualifiedname>HunterDisk::get_pot</qualifiedname>
        <param>
          <type>const double</type>
          <declname>r</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>z</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/hunter.H" line="96" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_hunter_disk_1a9388a8bdb5d0b369292193dae69aa84c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void HunterDisk::get_pot_dpot</definition>
        <argsstring>(const double r, const double z, double &amp;ur, double &amp;dur)</argsstring>
        <name>get_pot_dpot</name>
        <qualifiedname>HunterDisk::get_pot_dpot</qualifiedname>
        <param>
          <type>const double</type>
          <declname>r</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>z</declname>
        </param>
        <param>
          <type>double &amp;</type>
          <declname>ur</declname>
        </param>
        <param>
          <type>double &amp;</type>
          <declname>dur</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/hunter.H" line="102" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_hunter_disk_1a289f52f9c77980fafde8fa76ebe9528b" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void HunterDisk::get_pot_dpot</definition>
        <argsstring>(const double r, double &amp;ur, double &amp;dur)</argsstring>
        <name>get_pot_dpot</name>
        <qualifiedname>HunterDisk::get_pot_dpot</qualifiedname>
        <reimplements refid="class_axi_sym_model_1a4fc766458a1f45b3ece0410b2c85b632">get_pot_dpot</reimplements>
        <param>
          <type>const double</type>
          <declname>r</declname>
        </param>
        <param>
          <type>double &amp;</type>
          <declname>ur</declname>
        </param>
        <param>
          <type>double &amp;</type>
          <declname>dur</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/hunter.H" line="72" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_hunter_disk_1a1156f9f91f6db7bb82c76c392b92fe43" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>HunterDisk::HunterDisk</definition>
        <argsstring>(int N, double RMAX=1.0, double MASS=1.0)</argsstring>
        <name>HunterDisk</name>
        <qualifiedname>HunterDisk::HunterDisk</qualifiedname>
        <param>
          <type>int</type>
          <declname>N</declname>
        </param>
        <param>
          <type>double</type>
          <declname>RMAX</declname>
          <defval>1.0</defval>
        </param>
        <param>
          <type>double</type>
          <declname>MASS</declname>
          <defval>1.0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/hunter.H" line="53" column="3"/>
      </memberdef>
      <memberdef kind="function" id="class_hunter_disk_1a04e5d347ff8c031375f00846150a9fff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void HunterDisk::set_params</definition>
        <argsstring>(const double KMAX=20.0, const double RCUT=8.0, const int NINT=200, const int MGRID=200, const int NHANK=400)</argsstring>
        <name>set_params</name>
        <qualifiedname>HunterDisk::set_params</qualifiedname>
        <param>
          <type>const double</type>
          <declname>KMAX</declname>
          <defval>20.0</defval>
        </param>
        <param>
          <type>const double</type>
          <declname>RCUT</declname>
          <defval>8.0</defval>
        </param>
        <param>
          <type>const int</type>
          <declname>NINT</declname>
          <defval>200</defval>
        </param>
        <param>
          <type>const int</type>
          <declname>MGRID</declname>
          <defval>200</defval>
        </param>
        <param>
          <type>const int</type>
          <declname>NHANK</declname>
          <defval>400</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/hunter.H" line="55" column="8"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>AxiSymModel</label>
        <link refid="class_axi_sym_model"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>HunterDisk</label>
        <link refid="class_hunter_disk"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>MassModel</label>
        <link refid="class_mass_model"/>
      </node>
      <node id="4">
        <label>std::enable_shared_from_this&lt; AxiSymModel &gt;</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="7">
        <label>ANGLE_GRID</label>
        <link refid="struct_a_n_g_l_e___g_r_i_d"/>
      </node>
      <node id="2">
        <label>AxiSymModel</label>
        <link refid="class_axi_sym_model"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>gen_orb</edgelabel>
        </childnode>
      </node>
      <node id="8">
        <label>GaussQuad</label>
        <link refid="class_gauss_quad"/>
      </node>
      <node id="1">
        <label>HunterDisk</label>
        <link refid="class_hunter_disk"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>MassModel</label>
        <link refid="class_mass_model"/>
      </node>
      <node id="6">
        <label>RegularOrbit</label>
        <link refid="class_regular_orbit"/>
      </node>
      <node id="5">
        <label>SphericalOrbit</label>
        <link refid="class_spherical_orbit"/>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>angle_grid</edgelabel>
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>Gkn</edgelabel>
        </childnode>
      </node>
      <node id="4">
        <label>std::enable_shared_from_this&lt; AxiSymModel &gt;</label>
      </node>
    </collaborationgraph>
    <location file="/home/weinberg/Projects/EXP/include/hunter.H" line="11" column="1" bodyfile="/home/weinberg/Projects/EXP/include/hunter.H" bodystart="12" bodyend="105"/>
    <listofallmembers>
      <member refid="class_axi_sym_model_1ac0df4b049522622b8ac3c4b087be83a5" prot="public" virt="non-virtual"><scope>HunterDisk</scope><name>AxiSymModel</name></member>
      <member refid="class_mass_model_1a6e55e3cb2647fcc4840e969768930b9f" prot="public" virt="non-virtual"><scope>HunterDisk</scope><name>bomb</name></member>
      <member refid="class_hunter_disk_1abdf5098713085801ee54b617bad71dd3" prot="private" virt="non-virtual"><scope>HunterDisk</scope><name>cvec</name></member>
      <member refid="class_hunter_disk_1a673cc41f41f7bc72593c5419eb5e8987" prot="public" virt="virtual"><scope>HunterDisk</scope><name>d2fde2</name></member>
      <member refid="class_hunter_disk_1a1137c0681e72b99035015b1d4501716a" prot="private" virt="non-virtual"><scope>HunterDisk</scope><name>d2vplgndr</name></member>
      <member refid="class_mass_model_1afd175166ced6f7768342b631f983eb1a" prot="public" virt="non-virtual"><scope>HunterDisk</scope><name>defined</name></member>
      <member refid="class_hunter_disk_1a7aeccddb17c9d8320ec9f1daf71830ec" prot="private" virt="non-virtual"><scope>HunterDisk</scope><name>defKMAX</name></member>
      <member refid="class_hunter_disk_1a2fde533420a8f0d3b7a472191853a231" prot="private" virt="non-virtual"><scope>HunterDisk</scope><name>defMGRID</name></member>
      <member refid="class_hunter_disk_1a7599a22f73a869e0c6ed9cb9906565b3" prot="private" virt="non-virtual"><scope>HunterDisk</scope><name>defNHANK</name></member>
      <member refid="class_hunter_disk_1a2aa59d0c4e6e7b14ff7025aa5dd3c84f" prot="private" virt="non-virtual"><scope>HunterDisk</scope><name>defNINT</name></member>
      <member refid="class_hunter_disk_1a60885b6ff4672898796457c4d1ea72c2" prot="private" virt="non-virtual"><scope>HunterDisk</scope><name>defRCUT</name></member>
      <member refid="class_axi_sym_model_1a3556ad7640450879dd0d3d922c2cf6b9" prot="protected" virt="non-virtual"><scope>HunterDisk</scope><name>dEgrid</name></member>
      <member refid="class_hunter_disk_1ae5befb0384c024c55cfbe426854d5fda" prot="public" virt="virtual"><scope>HunterDisk</scope><name>dfde</name></member>
      <member refid="class_hunter_disk_1a84dc8c74bcfa02317ebe9ff29bbe45dd" prot="public" virt="virtual"><scope>HunterDisk</scope><name>dfdl</name></member>
      <member refid="class_mass_model_1a80ab2b1813fdbbaf30f70d1089f2316d" prot="public" virt="non-virtual"><scope>HunterDisk</scope><name>dim</name></member>
      <member refid="class_axi_sym_model_1a71a6a479380a41b28b633b1252550a7c" prot="public" virt="non-virtual"><scope>HunterDisk</scope><name>dist_defined</name></member>
      <member refid="class_hunter_disk_1a615ce48a7e56365fa147b8c942ef29cb" prot="public" virt="virtual"><scope>HunterDisk</scope><name>distf</name></member>
      <member refid="class_axi_sym_model_1a526eabe43c3685815c0fab271accbe32" prot="protected" virt="non-virtual"><scope>HunterDisk</scope><name>dKgrid</name></member>
      <member refid="class_mass_model_1a92409cb4786626a1beb92bea71d05846" prot="public" virt="non-virtual"><scope>HunterDisk</scope><name>dof</name></member>
      <member refid="class_hunter_disk_1a3619ddaa065b3e24bc1c62be0869375b" prot="private" virt="non-virtual"><scope>HunterDisk</scope><name>dvplgndr</name></member>
      <member refid="class_axi_sym_model_1a86935282f15c2976cd9d5faef793d63e" prot="protected" virt="non-virtual"><scope>HunterDisk</scope><name>Egrid</name></member>
      <member refid="class_axi_sym_model_1aedf45b15e0286153ef407f957a1eebf7" prot="protected" virt="non-virtual"><scope>HunterDisk</scope><name>EgridMass</name></member>
      <member refid="class_axi_sym_model_1a8ee767a8941390c7816d9c1c27bb4334" prot="protected" virt="non-virtual"><scope>HunterDisk</scope><name>Emax_grid</name></member>
      <member refid="class_axi_sym_model_1acf573aca18c8e1687d639133d5710ea7" prot="protected" virt="non-virtual"><scope>HunterDisk</scope><name>Emin_grid</name></member>
      <member refid="class_hunter_disk_1ade5637c7bd38f07cfd076ec3bb5157cf" prot="private" virt="non-virtual"><scope>HunterDisk</scope><name>gam</name></member>
      <member refid="class_axi_sym_model_1aeda764e1f1145cf03bc79e89cb5f28ee" prot="protected" virt="non-virtual"><scope>HunterDisk</scope><name>Gauss</name></member>
      <member refid="class_axi_sym_model_1af60c7d2a97b4e2242ece29ba77f990a8" prot="public" virt="non-virtual"><scope>HunterDisk</scope><name>gen_E</name></member>
      <member refid="class_axi_sym_model_1a85758608cec039affbc42c2ad3390056" prot="protected" virt="non-virtual"><scope>HunterDisk</scope><name>gen_ecut</name></member>
      <member refid="class_axi_sym_model_1a89d1c8c1a334e17d164229404284b1aa" prot="public" virt="non-virtual"><scope>HunterDisk</scope><name>gen_EJ</name></member>
      <member refid="class_axi_sym_model_1ad3e1a1fcfe55dfa0f9332673faaad460" prot="protected" virt="non-virtual"><scope>HunterDisk</scope><name>gen_firstime</name></member>
      <member refid="class_axi_sym_model_1a0256603484bb0820fe8ec15cc0f88a84" prot="protected" virt="non-virtual"><scope>HunterDisk</scope><name>gen_firstime_E</name></member>
      <member refid="class_axi_sym_model_1a16b08425c760dcb7fe24635c05a4d9b1" prot="protected" virt="non-virtual"><scope>HunterDisk</scope><name>gen_firstime_jeans</name></member>
      <member refid="class_axi_sym_model_1a5b9f30c0297a19e48806f53aa6b9d68e" prot="protected" virt="non-virtual"><scope>HunterDisk</scope><name>gen_fmax</name></member>
      <member refid="class_axi_sym_model_1aaf38968f265e18cf20e403041279435c" prot="protected" virt="non-virtual"><scope>HunterDisk</scope><name>gen_fomax</name></member>
      <member refid="class_axi_sym_model_1a2b491db27d15b7b20b6f9ab473373d90" prot="public" virt="non-virtual"><scope>HunterDisk</scope><name>gen_itmax</name></member>
      <member refid="class_axi_sym_model_1a739b1e9027c37122906c3f38d88b3a17" prot="public" virt="non-virtual"><scope>HunterDisk</scope><name>gen_K</name></member>
      <member refid="class_axi_sym_model_1a1df0ddafb9d52556b7306aac0b4d1390" prot="public" virt="non-virtual"><scope>HunterDisk</scope><name>gen_kmin</name></member>
      <member refid="class_axi_sym_model_1aa0aea523e00ecd60effa0c8302f88070" prot="protected" virt="non-virtual"><scope>HunterDisk</scope><name>gen_lastr</name></member>
      <member refid="class_axi_sym_model_1a2ddd661afb64be0edc0c903cc1d0d6a3" prot="public" virt="non-virtual"><scope>HunterDisk</scope><name>gen_logr</name></member>
      <member refid="class_axi_sym_model_1a21d0612b687d8f4e2fa57f45ebea5ad9" prot="protected" virt="non-virtual"><scope>HunterDisk</scope><name>gen_mass</name></member>
      <member refid="class_axi_sym_model_1ac697c676c4cdf1a2f6fd9aaa0afc3cf1" prot="public" virt="non-virtual"><scope>HunterDisk</scope><name>gen_N</name></member>
      <member refid="class_axi_sym_model_1a274294584539a1bf61ddcb08d28385e4" prot="protected" virt="non-virtual"><scope>HunterDisk</scope><name>gen_orb</name></member>
      <member refid="class_axi_sym_model_1afbcda3ecaca7c554aac3e23b5d8bd034" prot="public" virt="virtual"><scope>HunterDisk</scope><name>gen_point</name></member>
      <member refid="class_axi_sym_model_1a4010d290667cb6801bbea09f0f16b859" prot="public" virt="virtual"><scope>HunterDisk</scope><name>gen_point</name></member>
      <member refid="class_axi_sym_model_1a04ba9defb0f892097b20c1d607682b8f" prot="public" virt="virtual"><scope>HunterDisk</scope><name>gen_point</name></member>
      <member refid="class_axi_sym_model_1a03d123dc090dced65bc8030b52b2ebd2" prot="public" virt="virtual"><scope>HunterDisk</scope><name>gen_point</name></member>
      <member refid="class_axi_sym_model_1ac64da4f6361794d206e732e83575cf8c" prot="protected" virt="non-virtual"><scope>HunterDisk</scope><name>gen_point_2d</name></member>
      <member refid="class_axi_sym_model_1ab04d3c270802af02c1f064cd57ebebb5" prot="protected" virt="non-virtual"><scope>HunterDisk</scope><name>gen_point_2d</name></member>
      <member refid="class_axi_sym_model_1adf35195ab29f8ea2a8e6d022cbcacd15" prot="protected" virt="non-virtual"><scope>HunterDisk</scope><name>gen_point_3d</name></member>
      <member refid="class_axi_sym_model_1ab90ef1ffa51a1edb48144df562301c9c" prot="protected" virt="non-virtual"><scope>HunterDisk</scope><name>gen_point_3d</name></member>
      <member refid="class_axi_sym_model_1a543cb620398d71ae92e0698a7cd898a3" prot="protected" virt="non-virtual"><scope>HunterDisk</scope><name>gen_point_3d</name></member>
      <member refid="class_axi_sym_model_1a6c94b5df1f02060d1520c7a6d7ec700e" prot="protected" virt="non-virtual"><scope>HunterDisk</scope><name>gen_point_3d_iso</name></member>
      <member refid="class_axi_sym_model_1a16d528b0b93c299c7c8654a563dff05e" prot="public" virt="virtual"><scope>HunterDisk</scope><name>gen_point_iso</name></member>
      <member refid="class_axi_sym_model_1a8a91e093089e9ef1933c39ee25a435e5" prot="public" virt="virtual"><scope>HunterDisk</scope><name>gen_point_jeans</name></member>
      <member refid="class_axi_sym_model_1a0d7184f359fe9e7de3cec0489b371195" prot="protected" virt="non-virtual"><scope>HunterDisk</scope><name>gen_point_jeans_3d</name></member>
      <member refid="class_axi_sym_model_1a35aead49704365788684b280e04c21f2" prot="protected" virt="non-virtual"><scope>HunterDisk</scope><name>gen_rloc</name></member>
      <member refid="class_axi_sym_model_1a0dd4a002aead3430280c95b84a33848c" prot="public" virt="non-virtual"><scope>HunterDisk</scope><name>gen_rmin</name></member>
      <member refid="class_axi_sym_model_1a8fd26f16e980f9ca09582c43d37d556b" prot="public" virt="non-virtual"><scope>HunterDisk</scope><name>gen_tolE</name></member>
      <member refid="class_axi_sym_model_1a34258a7b205c15211b94d68869ff481a" prot="public" virt="non-virtual"><scope>HunterDisk</scope><name>gen_tolK</name></member>
      <member refid="class_axi_sym_model_1abfbe9badff403eef8f7ae1601f734684" prot="public" virt="virtual"><scope>HunterDisk</scope><name>gen_velocity</name></member>
      <member refid="class_hunter_disk_1a42a9fa1f93af1ced9f80fa63c1f7bd15" prot="public" virt="virtual"><scope>HunterDisk</scope><name>get_density</name></member>
      <member refid="class_axi_sym_model_1ab7eaa6f141efb864c02c45ed602b8bcc" prot="public" virt="virtual" ambiguityscope="AxiSymModel::"><scope>HunterDisk</scope><name>get_density</name></member>
      <member refid="class_hunter_disk_1af99a03a59ba0b83966f467808ad2a27a" prot="public" virt="virtual"><scope>HunterDisk</scope><name>get_dpot</name></member>
      <member refid="class_hunter_disk_1ad9076b5c77a753e868411485681602a5" prot="public" virt="non-virtual"><scope>HunterDisk</scope><name>get_dpot</name></member>
      <member refid="class_hunter_disk_1a25b4689e9ac2cdef2c021ee18e0bafdb" prot="public" virt="virtual"><scope>HunterDisk</scope><name>get_dpot2</name></member>
      <member refid="class_hunter_disk_1a05ba212df8a443c0ea94a8d5a9f3446d" prot="public" virt="non-virtual"><scope>HunterDisk</scope><name>get_dpot2</name></member>
      <member refid="class_hunter_disk_1a54d5a3014d036e20d5379483e86fd316" prot="public" virt="virtual"><scope>HunterDisk</scope><name>get_mass</name></member>
      <member refid="class_axi_sym_model_1a0cf696274a70d513e020046e796b0787" prot="public" virt="virtual" ambiguityscope="AxiSymModel::"><scope>HunterDisk</scope><name>get_mass</name></member>
      <member refid="class_hunter_disk_1a3c62bdf7240114cd0b33299b8e6252c4" prot="public" virt="virtual"><scope>HunterDisk</scope><name>get_max_radius</name></member>
      <member refid="class_hunter_disk_1a2a2476206cb5f4e62a3ca2db46837a6b" prot="public" virt="virtual"><scope>HunterDisk</scope><name>get_min_radius</name></member>
      <member refid="class_hunter_disk_1a275d6e4c24f2f60a4dc8e245f53602fe" prot="public" virt="virtual"><scope>HunterDisk</scope><name>get_pot</name></member>
      <member refid="class_hunter_disk_1a9f2470c94a8ec620d96a7eea14f5732b" prot="public" virt="non-virtual"><scope>HunterDisk</scope><name>get_pot</name></member>
      <member refid="class_axi_sym_model_1a7494ef2d7e5cd796414c8a9a231bb3cc" prot="public" virt="virtual" ambiguityscope="AxiSymModel::"><scope>HunterDisk</scope><name>get_pot</name></member>
      <member refid="class_hunter_disk_1a289f52f9c77980fafde8fa76ebe9528b" prot="public" virt="virtual"><scope>HunterDisk</scope><name>get_pot_dpot</name></member>
      <member refid="class_hunter_disk_1a9388a8bdb5d0b369292193dae69aa84c" prot="public" virt="non-virtual"><scope>HunterDisk</scope><name>get_pot_dpot</name></member>
      <member refid="class_hunter_disk_1a363cd7b6341774439c02513885fb1e40" prot="private" virt="non-virtual"><scope>HunterDisk</scope><name>hankel_setup</name></member>
      <member refid="class_hunter_disk_1a1156f9f91f6db7bb82c76c392b92fe43" prot="public" virt="non-virtual"><scope>HunterDisk</scope><name>HunterDisk</name></member>
      <member refid="class_axi_sym_model_1a9e96775fb63f7ad15e20ed12ada30e66" prot="protected" virt="non-virtual"><scope>HunterDisk</scope><name>Jmax</name></member>
      <member refid="class_hunter_disk_1a47198276536f12718495b2547e045385" prot="private" virt="non-virtual"><scope>HunterDisk</scope><name>K</name></member>
      <member refid="class_hunter_disk_1a88454d3b998edb9c198abb3e16ac3e5e" prot="private" virt="non-virtual"><scope>HunterDisk</scope><name>kfac</name></member>
      <member refid="class_axi_sym_model_1a95335dec87e9759cfb620c1cafb10a83" prot="protected" virt="non-virtual"><scope>HunterDisk</scope><name>Kgrid</name></member>
      <member refid="class_hunter_disk_1a8c56957216bf9ca56efe91e375d1f2c1" prot="private" virt="non-virtual"><scope>HunterDisk</scope><name>kmax</name></member>
      <member refid="class_hunter_disk_1ad15ebfaf68f042d8af7f372b42821203" prot="private" virt="non-virtual"><scope>HunterDisk</scope><name>m_mass</name></member>
      <member refid="class_hunter_disk_1a70eb6b3d3d47eb2bbcaeffd2f0563489" prot="private" virt="non-virtual"><scope>HunterDisk</scope><name>mass</name></member>
      <member refid="class_hunter_disk_1aa8c7bd3888aaf6c8848490cd28a40b7f" prot="private" virt="non-virtual"><scope>HunterDisk</scope><name>mass_setup</name></member>
      <member refid="class_hunter_disk_1a1b362f6d37cb2738b508366161046af6" prot="private" virt="non-virtual"><scope>HunterDisk</scope><name>mgrid</name></member>
      <member refid="class_hunter_disk_1a24a0924957dad7e0c0f88c2f07d0895f" prot="private" virt="non-virtual"><scope>HunterDisk</scope><name>model_setup</name></member>
      <member refid="class_mass_model_1acf360c000464aca6299bc47894672d70" prot="public" virt="non-virtual"><scope>HunterDisk</scope><name>ModelID</name></member>
      <member refid="class_hunter_disk_1afff8fe078ebf1d8711614ec4f7ef0014" prot="private" virt="non-virtual"><scope>HunterDisk</scope><name>n</name></member>
      <member refid="class_hunter_disk_1a1980d397e8f328316e23d08e7348e212" prot="private" virt="non-virtual"><scope>HunterDisk</scope><name>nhank</name></member>
      <member refid="class_hunter_disk_1a3daf9fabb6eeb29fe19b441061b4f29e" prot="private" virt="non-virtual"><scope>HunterDisk</scope><name>nint</name></member>
      <member refid="class_axi_sym_model_1a793a2dff2246be92c1e4b2ff900087a1" prot="public" virt="non-virtual"><scope>HunterDisk</scope><name>numj</name></member>
      <member refid="class_axi_sym_model_1a0c33462222d9cb53229f9572b07cf792" prot="public" virt="non-virtual"><scope>HunterDisk</scope><name>numr</name></member>
      <member refid="class_hunter_disk_1aa5c2e4339ea330b5eb5be02f6c4693ae" prot="private" virt="non-virtual"><scope>HunterDisk</scope><name>offset_dp</name></member>
      <member refid="class_hunter_disk_1a03f1f7db82b82043935dc35dbbf05709" prot="private" virt="non-virtual"><scope>HunterDisk</scope><name>offset_dp2</name></member>
      <member refid="class_hunter_disk_1ab6161283ab6067e78523cb3ce45120d4" prot="private" virt="non-virtual"><scope>HunterDisk</scope><name>offset_p</name></member>
      <member refid="class_hunter_disk_1a38a02ba1ecec55948df5849f0ebade11" prot="private" virt="non-virtual"><scope>HunterDisk</scope><name>omfac</name></member>
      <member refid="class_hunter_disk_1a7a08c35750e9e390621f30ffe62c6ae8" prot="private" virt="non-virtual"><scope>HunterDisk</scope><name>pfac</name></member>
      <member refid="class_axi_sym_model_1ab579dcbdc54ec53ed9ddd1a1d5da7cd9" prot="public" virt="non-virtual"><scope>HunterDisk</scope><name>PSret</name></member>
      <member refid="class_hunter_disk_1a9a089c805396ceb5ea033aa11b59ce6a" prot="private" virt="non-virtual"><scope>HunterDisk</scope><name>r_mass</name></member>
      <member refid="class_hunter_disk_1abf01ce72bdade42bbe5eaee91d817d98" prot="private" virt="non-virtual"><scope>HunterDisk</scope><name>rcut</name></member>
      <member refid="class_axi_sym_model_1a1f18cc5ef08cdb02dcf6d794410c04f6" prot="protected" virt="non-virtual"><scope>HunterDisk</scope><name>Rgrid</name></member>
      <member refid="class_hunter_disk_1a6687d3c573a707f9b72cc97d4adac59d" prot="private" virt="non-virtual"><scope>HunterDisk</scope><name>rmax</name></member>
      <member refid="class_hunter_disk_1afac88f68933ae9bd48d5fb945c0c4949" prot="private" virt="non-virtual"><scope>HunterDisk</scope><name>S_K</name></member>
      <member refid="class_axi_sym_model_1acb659b6dc20ae1410997e69144677423" prot="public" virt="non-virtual"><scope>HunterDisk</scope><name>set_Ecut</name></member>
      <member refid="class_axi_sym_model_1a17660c094f1c143f779c7ce7e667de86" prot="public" virt="non-virtual"><scope>HunterDisk</scope><name>set_itmax</name></member>
      <member refid="class_hunter_disk_1a04e5d347ff8c031375f00846150a9fff" prot="public" virt="non-virtual"><scope>HunterDisk</scope><name>set_params</name></member>
      <member refid="class_hunter_disk_1afa468a36fe2362936e72ada1f4a729a9" prot="private" virt="non-virtual"><scope>HunterDisk</scope><name>setup_mass</name></member>
      <member refid="class_hunter_disk_1ae6d965d87d1cf5be7608fd66d9de3b41" prot="private" virt="non-virtual"><scope>HunterDisk</scope><name>setup_model</name></member>
      <member refid="class_hunter_disk_1a124bae6cdffff5bd40cc122d035d4e4c" prot="private" virt="non-virtual"><scope>HunterDisk</scope><name>sfac</name></member>
      <member refid="class_hunter_disk_1afbc512c906143b5cc020896188c6790e" prot="private" virt="non-virtual"><scope>HunterDisk</scope><name>tabulate_hankel</name></member>
      <member refid="class_axi_sym_model_1a4d9c94aa4ebf8308dbb660e9f53093e1" prot="protected" virt="non-virtual"><scope>HunterDisk</scope><name>Unit</name></member>
      <member refid="class_hunter_disk_1a5d9dc6c1a508e857e3b262fc96cb9878" prot="private" virt="non-virtual"><scope>HunterDisk</scope><name>vplgndr</name></member>
      <member refid="class_axi_sym_model_1a624c90f1d36963b7b023b9818a41b43b" prot="protected" virt="non-virtual"><scope>HunterDisk</scope><name>wrvector</name></member>
      <member refid="class_axi_sym_model_1ac9a6c290463cfe45d95656d37c0c45f8" prot="public" virt="virtual"><scope>HunterDisk</scope><name>~AxiSymModel</name></member>
      <member refid="class_mass_model_1a95c0338ca07d1b2ea284c3c2605dc9b8" prot="public" virt="virtual"><scope>HunterDisk</scope><name>~MassModel</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
