<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="_polar_basis_8_h" kind="file" language="C++">
    <compoundname>PolarBasis.H</compoundname>
    <includes local="no">memory</includes>
    <includes local="no">random</includes>
    <includes local="no">vector</includes>
    <includes local="no">string</includes>
    <includes local="no">set</includes>
    <includes refid="_axisymmetric_basis_8_h" local="no">AxisymmetricBasis.H</includes>
    <includes local="no">Coefficients.H</includes>
    <includes local="no">config_exp.h</includes>
    <includes refid="_n_v_t_x_8_h" local="no">NVTX.H</includes>
    <includes local="no">CoefContainer.H</includes>
    <includes refid="_biorth_cyl_8_h" local="no">BiorthCyl.H</includes>
    <includedby refid="_c_b_disk_8_h" local="no">/home/weinberg/Projects/EXP/src/CBDisk.H</includedby>
    <includedby refid="_flat_disk_8_h" local="no">/home/weinberg/Projects/EXP/src/FlatDisk.H</includedby>
    <incdepgraph>
      <node id="23">
        <label>BiorthCyl.H</label>
        <link refid="_biorth_cyl_8_h"/>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
      </node>
      <node id="40">
        <label>DiskWithHalo.H</label>
        <link refid="_disk_with_halo_8_h"/>
        <childnode refid="30" relation="include">
        </childnode>
      </node>
      <node id="49">
        <label>EXPmath.H</label>
        <link refid="_e_x_pmath_8_h"/>
      </node>
      <node id="45">
        <label>EmpCyl2d.H</label>
        <link refid="_emp_cyl2d_8_h"/>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
      </node>
      <node id="34">
        <label>MonotCubicInterpolator.H</label>
        <link refid="_monot_cubic_interpolator_8_h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="39">
        <label>QPDistF.H</label>
        <link refid="_q_p_dist_f_8_h"/>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>StringTok.H</label>
        <link refid="_string_tok_8_h"/>
      </node>
      <node id="17">
        <label>YamlCheck.H</label>
        <link refid="_yaml_check_8_h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="37">
        <label>gaussQ.H</label>
        <link refid="gauss_q_8_h"/>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="32">
        <label>interp.H</label>
        <link refid="interp_8_h"/>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>localmpi.H</label>
        <link refid="localmpi_8_h"/>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="30">
        <label>massmodel.H</label>
        <link refid="massmodel_8_h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
      </node>
      <node id="35">
        <label>orbit.H</label>
        <link refid="orbit_8_h"/>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>AxisymmetricBasis.H</label>
        <link refid="_axisymmetric_basis_8_h"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>Basis.H</label>
        <link refid="_basis_8_h"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>NVTX.H</label>
        <link refid="_n_v_t_x_8_h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>/home/weinberg/Projects/EXP/src/PolarBasis.H</label>
        <link refid="_polar_basis_8_h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>PotAccel.H</label>
        <link refid="_pot_accel_8_h"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>CoefContainer.H</label>
      </node>
      <node id="20">
        <label>Coefficients.H</label>
      </node>
      <node id="19">
        <label>Eigen/Eigen</label>
      </node>
      <node id="48">
        <label>Eigen/Eigenvalues</label>
      </node>
      <node id="15">
        <label>Particle.H</label>
      </node>
      <node id="46">
        <label>algorithm</label>
      </node>
      <node id="47">
        <label>array</label>
      </node>
      <node id="11">
        <label>chrono</label>
      </node>
      <node id="26">
        <label>cmath</label>
      </node>
      <node id="18">
        <label>config_exp.h</label>
      </node>
      <node id="10">
        <label>cstdlib</label>
      </node>
      <node id="33">
        <label>deque</label>
      </node>
      <node id="25">
        <label>fstream</label>
      </node>
      <node id="36">
        <label>functional</label>
      </node>
      <node id="44">
        <label>highfive/H5Attribute.hpp</label>
      </node>
      <node id="42">
        <label>highfive/H5DataSet.hpp</label>
      </node>
      <node id="43">
        <label>highfive/H5DataSpace.hpp</label>
      </node>
      <node id="41">
        <label>highfive/H5File.hpp</label>
      </node>
      <node id="51">
        <label>highfive/eigen.hpp</label>
      </node>
      <node id="50">
        <label>highfive/highfive.hpp</label>
      </node>
      <node id="29">
        <label>iomanip</label>
      </node>
      <node id="24">
        <label>iostream</label>
      </node>
      <node id="12">
        <label>list</label>
      </node>
      <node id="13">
        <label>map</label>
      </node>
      <node id="2">
        <label>memory</label>
      </node>
      <node id="27">
        <label>mpi.h</label>
      </node>
      <node id="3">
        <label>random</label>
      </node>
      <node id="6">
        <label>set</label>
      </node>
      <node id="38">
        <label>sstream</label>
      </node>
      <node id="5">
        <label>string</label>
      </node>
      <node id="31">
        <label>tuple</label>
      </node>
      <node id="4">
        <label>vector</label>
      </node>
      <node id="14">
        <label>yaml-cpp/yaml.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2">
        <label>/home/weinberg/Projects/EXP/src/CBDisk.H</label>
        <link refid="_c_b_disk_8_h"/>
      </node>
      <node id="3">
        <label>/home/weinberg/Projects/EXP/src/FlatDisk.H</label>
        <link refid="_flat_disk_8_h"/>
      </node>
      <node id="1">
        <label>/home/weinberg/Projects/EXP/src/PolarBasis.H</label>
        <link refid="_polar_basis_8_h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="struct_polar_basis_1_1_coef_matrix" prot="protected">PolarBasis::CoefMatrix</innerclass>
    <innerclass refid="struct_polar_basis_1_1_coef_vector" prot="protected">PolarBasis::CoefVector</innerclass>
    <innerclass refid="class_polar_basis" prot="public">PolarBasis</innerclass>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>_PolarBasis_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_PolarBasis_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;memory&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;random&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;set&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="_axisymmetric_basis_8_h" kindref="compound">AxisymmetricBasis.H</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;Coefficients.H&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;config_exp.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HAVE_LIBCUDA==1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cudaParticle.cuH&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cudaMappingConstants.cuH&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="_n_v_t_x_8_h" kindref="compound">NVTX.H</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;CoefContainer.H&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="_biorth_cyl_8_h" kindref="compound">BiorthCyl.H</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_mixture_basis" kindref="compound">MixtureBasis</ref>;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="47" refid="class_polar_basis" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_polar_basis" kindref="compound">PolarBasis</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_axisymmetric_basis" kindref="compound">AxisymmetricBasis</ref></highlight></codeline>
<codeline lineno="48"><highlight class="normal">{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="52" refid="class_polar_basis_1a6c81bee92bd8e92deb3ba4ff644c8054" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="class_polar_basis_1a6c81bee92bd8e92deb3ba4ff644c8054" kindref="member">VectorM</ref><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>std::vector&lt;Eigen::VectorXd&gt;;</highlight></codeline>
<codeline lineno="53" refid="class_polar_basis_1a091e218483e387313a642241e5f009da" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="class_polar_basis_1a091e218483e387313a642241e5f009da" kindref="member">MatrixM</ref><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>std::vector&lt;Eigen::MatrixXd&gt;;</highlight></codeline>
<codeline lineno="54" refid="class_polar_basis_1a371112797397668b15ab41e65386f738" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="class_polar_basis_1a371112797397668b15ab41e65386f738" kindref="member">ContribArray</ref><sp/>=<sp/>std::vector&lt;Eigen::VectorXd&gt;;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="59" refid="class_polar_basis_1a26ef5aaa37386ff156862a79b6c57b89" refkind="member"><highlight class="normal"><sp/><sp/>std::vector&lt;Eigen::VectorXd&gt;<sp/><ref refid="class_polar_basis_1a26ef5aaa37386ff156862a79b6c57b89" kindref="member">u</ref>;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="62" refid="class_polar_basis_1ab43c03641c12922e70c9942c3b09bcf1" refkind="member"><highlight class="normal"><sp/><sp/>std::vector&lt;Eigen::MatrixXd&gt;<sp/><ref refid="class_polar_basis_1ab43c03641c12922e70c9942c3b09bcf1" kindref="member">potd</ref>;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="65" refid="class_polar_basis_1a90e8f6bee803544cedde1c5334540808" refkind="member"><highlight class="normal"><sp/><sp/>std::vector&lt;Eigen::MatrixXd&gt;<sp/><ref refid="class_polar_basis_1a90e8f6bee803544cedde1c5334540808" kindref="member">dpotR</ref>,<sp/><ref refid="class_polar_basis_1ad1b9268b7f03dcbb53afb51d15595875" kindref="member">dpotZ</ref>;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69" refid="class_polar_basis_1aa515c0c713fdc70ba60210087b2519ec" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;Eigen::VectorXd&gt;<sp/><ref refid="class_polar_basis_1aa515c0c713fdc70ba60210087b2519ec" kindref="member">VectorXdP</ref>;</highlight></codeline>
<codeline lineno="70" refid="class_polar_basis_1a15d95a42911345cf8a447f8b87dc0db4" refkind="member"><highlight class="normal"><sp/><sp/>std::vector&lt;std::vector&lt;VectorXdP&gt;&gt;<sp/><ref refid="class_polar_basis_1a15d95a42911345cf8a447f8b87dc0db4" kindref="member">expcoef0</ref>;</highlight></codeline>
<codeline lineno="72"></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75" refid="class_polar_basis_1a06ce38624d1d138e765b626495040c46" refkind="member"><highlight class="normal"><sp/><sp/>vector&lt;double&gt;<sp/><ref refid="class_polar_basis_1a06ce38624d1d138e765b626495040c46" kindref="member">muse1</ref>;</highlight></codeline>
<codeline lineno="76" refid="class_polar_basis_1ad61c596489b46678f2e70e454921d0d3" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_polar_basis_1ad61c596489b46678f2e70e454921d0d3" kindref="member">muse0</ref>;</highlight></codeline>
<codeline lineno="78"></codeline>
<codeline lineno="80" refid="class_polar_basis_1aa1ff0872a9bb7ccd10df8883c302c8ff" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_polar_basis_1aa1ff0872a9bb7ccd10df8883c302c8ff" kindref="member">resetT</ref>;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="83" refid="class_polar_basis_1a476114987ab874ce8846014720e83746" refkind="member"><highlight class="normal"><sp/><sp/>std::vector&lt;Eigen::VectorXd&gt;<sp/><ref refid="class_polar_basis_1a476114987ab874ce8846014720e83746" kindref="member">cosm</ref>;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="86" refid="class_polar_basis_1a99d74d03e9d45b7bd2faded328ed5b42" refkind="member"><highlight class="normal"><sp/><sp/>std::vector&lt;Eigen::VectorXd&gt;<sp/><ref refid="class_polar_basis_1a99d74d03e9d45b7bd2faded328ed5b42" kindref="member">sinm</ref>;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="89" refid="class_polar_basis_1ae64bf3418e06d65505b66867521abb35" refkind="member"><highlight class="normal"><sp/><sp/>Eigen::MatrixXd<sp/><ref refid="class_polar_basis_1ae64bf3418e06d65505b66867521abb35" kindref="member">dend</ref>;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="92" refid="class_polar_basis_1a5b49aa8ebe308a9f089b52478ee4db11" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_polar_basis_1a5b49aa8ebe308a9f089b52478ee4db11" kindref="member">initialize</ref>();</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="95" refid="class_polar_basis_1ac71935d93632a102114d3f7d3cc52656" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_polar_basis_1ac71935d93632a102114d3f7d3cc52656" kindref="member">check_range</ref>();</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="99" refid="class_polar_basis_1a346801a54ca434a9f63809bfbbf53f82" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_polar_basis_1a346801a54ca434a9f63809bfbbf53f82" kindref="member">setup</ref>()<sp/>{}</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="102" refid="class_polar_basis_1a8c667278622aeb6f65dde13da207db7f" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_polar_basis_1a8c667278622aeb6f65dde13da207db7f" kindref="member">init_pca</ref>();</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="105" refid="class_polar_basis_1af82e9d72d652c4babad6846229afbbe4" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_polar_basis_1af82e9d72d652c4babad6846229afbbe4" kindref="member">setup_accumulation</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_pot_accel_1ad9ff6c9f431ad2f8ad2e5895c222ede8" kindref="member">mlevel</ref>);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="108" refid="class_polar_basis_1ae13b2d394784b9344d9ec473c5f2d781" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_polar_basis_1ae13b2d394784b9344d9ec473c5f2d781" kindref="member">get_pot_coefs</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>m,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::VectorXd&amp;<sp/>coef,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;<sp/>p,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;<sp/>dpr,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;<sp/>dprz);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="112" refid="class_polar_basis_1af5eabfde1ceca1aab0df39bf82bd99c3" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_polar_basis_1af5eabfde1ceca1aab0df39bf82bd99c3" kindref="member">get_pot_coefs_safe</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>m,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::VectorXd&amp;<sp/>coef,</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;<sp/>p,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;<sp/>dpr,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;<sp/>dprz,</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Eigen::MatrixXd&amp;<sp/>potd1,<sp/>Eigen::MatrixXd&amp;<sp/>dpotr1,<sp/>Eigen::MatrixXd&amp;<sp/>dpotz1);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="117" refid="class_polar_basis_1a4ccfeea60a5f68a4f7b3a5034f4e3d1d" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_polar_basis_1a4ccfeea60a5f68a4f7b3a5034f4e3d1d" kindref="member">get_dens_coefs</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>m,<sp/>Eigen::VectorXd&amp;<sp/>coef,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;<sp/>p);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="120" refid="class_polar_basis_1a06f152b6310fa7f859ca24ee5124cda5" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_polar_basis_1a06f152b6310fa7f859ca24ee5124cda5" kindref="member">is_flat</ref>;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="123" refid="class_polar_basis_1a95ad9c40d788c9819e49e82d608dbfe2" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_polar_basis_1a95ad9c40d788c9819e49e82d608dbfe2" kindref="member">firstime_coef</ref>;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="126" refid="class_polar_basis_1a085b545644798235160406c902100fa1" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_polar_basis_1a085b545644798235160406c902100fa1" kindref="member">firstime_accel</ref>;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="129" refid="class_polar_basis_1a45f4b62afcdfcfcefdfefdbcab34e754" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/><ref refid="class_polar_basis_1a45f4b62afcdfcfcefdfefdbcab34e754" kindref="member">determine_coefficients_thread</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>arg);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="132" refid="class_polar_basis_1a3433ec168c294734e038b126ef4be6f1" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_polar_basis_1a3433ec168c294734e038b126ef4be6f1" kindref="member">determine_coefficients_particles</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="135" refid="class_polar_basis_1a64b464f89b72cc7755f75e828a9a6a87" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_polar_basis_1a64b464f89b72cc7755f75e828a9a6a87" kindref="member">determine_coefficients_playback</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137" refid="class_polar_basis_1a9cd5f130653fbfbabc6c6b53afbe3808" refkind="member"><highlight class="normal"><sp/><sp/>std::vector&lt;std::vector&lt;unsigned&gt;&gt;<sp/><ref refid="class_polar_basis_1a9cd5f130653fbfbabc6c6b53afbe3808" kindref="member">howmany1</ref>;</highlight></codeline>
<codeline lineno="138" refid="class_polar_basis_1a193e8bdb15a1bee988c45b5a5d4cbb1b" refkind="member"><highlight class="normal"><sp/><sp/>std::vector&lt;unsigned&gt;<sp/><ref refid="class_polar_basis_1a193e8bdb15a1bee988c45b5a5d4cbb1b" kindref="member">howmany</ref>;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="157" refid="struct_polar_basis_1_1_coef_vector" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_polar_basis_1_1_coef_vector" kindref="compound">CoefVector</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>std::vector&lt;std::vector&lt;VectorM&gt;&gt;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="159" refid="struct_polar_basis_1_1_coef_vector_1a28a8d8a6cfca724246ccf7ae0ef66a0f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::VectorXd<sp/>&amp;<sp/><ref refid="struct_polar_basis_1_1_coef_vector_1a28a8d8a6cfca724246ccf7ae0ef66a0f" kindref="member">operator()</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>j,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>m)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>((*</highlight><highlight class="keyword">this</highlight><highlight class="normal">)[i][j][m]);<sp/>}</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162" refid="struct_polar_basis_1_1_coef_matrix" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_polar_basis_1_1_coef_matrix" kindref="compound">CoefMatrix</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>std::vector&lt;std::vector&lt;MatrixM&gt;&gt;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="164" refid="struct_polar_basis_1_1_coef_matrix_1a13eb0265c13ebbdc1a9e540bbaea8f31" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::MatrixXd<sp/>&amp;<sp/><ref refid="struct_polar_basis_1_1_coef_matrix_1a13eb0265c13ebbdc1a9e540bbaea8f31" kindref="member">operator()</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>j,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>m)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>((*</highlight><highlight class="keyword">this</highlight><highlight class="normal">)[i][j][m]);<sp/>}</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Test<sp/>for<sp/>eof<sp/>trim</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170" refid="class_polar_basis_1a35b9bc2b401b6ca50284052b22c16607" refkind="member"><highlight class="normal"><sp/><sp/>std::vector&lt;std::vector&lt;Eigen::MatrixXd&gt;&gt;<sp/><ref refid="class_polar_basis_1a35b9bc2b401b6ca50284052b22c16607" kindref="member">tvar</ref>;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Error<sp/>analysis</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173" refid="class_polar_basis_1acf405ea76324f560aa152c596de1228c" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="struct_polar_basis_1_1_coef_vector" kindref="compound">CoefVector</ref><sp/><sp/><ref refid="class_polar_basis_1acf405ea76324f560aa152c596de1228c" kindref="member">covV</ref>;</highlight></codeline>
<codeline lineno="174" refid="class_polar_basis_1af841dfe17fd179e7cad33616f9584a0c" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="struct_polar_basis_1_1_coef_matrix" kindref="compound">CoefMatrix</ref><sp/><sp/><ref refid="class_polar_basis_1af841dfe17fd179e7cad33616f9584a0c" kindref="member">covM</ref>;</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176" refid="class_polar_basis_1a3553fdf50173154f1854aed4be95253d" refkind="member"><highlight class="normal"><sp/><sp/>std::vector&lt;<sp/>std::vector&lt;unsigned&gt;<sp/><sp/>&gt;<sp/><ref refid="class_polar_basis_1a3553fdf50173154f1854aed4be95253d" kindref="member">numbT1</ref>;</highlight></codeline>
<codeline lineno="177" refid="class_polar_basis_1a92bf1bad9abede0a8634a3d9045c0dd2" refkind="member"><highlight class="normal"><sp/><sp/>std::vector&lt;<sp/>std::vector&lt;double&gt;<sp/><sp/>&gt;<sp/><ref refid="class_polar_basis_1a92bf1bad9abede0a8634a3d9045c0dd2" kindref="member">massT1</ref>;</highlight></codeline>
<codeline lineno="178" refid="class_polar_basis_1a118ccb84ebd70f359f9926d8f2829842" refkind="member"><highlight class="normal"><sp/><sp/>std::vector&lt;unsigned&gt;<sp/><ref refid="class_polar_basis_1a118ccb84ebd70f359f9926d8f2829842" kindref="member">numbT</ref>;</highlight></codeline>
<codeline lineno="179" refid="class_polar_basis_1ae8dfb1cfd65cd8f4d753c0255a6a7ef8" refkind="member"><highlight class="normal"><sp/><sp/>std::vector&lt;double&gt;<sp/><ref refid="class_polar_basis_1ae8dfb1cfd65cd8f4d753c0255a6a7ef8" kindref="member">massT</ref>;</highlight></codeline>
<codeline lineno="180" refid="class_polar_basis_1a24a24c5e0ab5d4a85ead71fea374f812" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><ref refid="class_polar_basis_1a3bd4a78d9444ffbbe83a56ae99bea773" kindref="member">sampT</ref>,<sp/><ref refid="class_polar_basis_1a24a24c5e0ab5d4a85ead71fea374f812" kindref="member">defSampT</ref>;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182" refid="class_polar_basis_1aeb57eed94e2c11e9a47ee9786b7c0b1a" refkind="member"><highlight class="normal"><sp/><sp/>std::vector&lt;double&gt;<sp/><ref refid="class_polar_basis_1aeb57eed94e2c11e9a47ee9786b7c0b1a" kindref="member">cylmass1</ref>;</highlight></codeline>
<codeline lineno="183" refid="class_polar_basis_1a08dfe64d5a1733ffe27bde9b1bf16d51" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_polar_basis_1a08dfe64d5a1733ffe27bde9b1bf16d51" kindref="member">cylmass</ref>;</highlight></codeline>
<codeline lineno="184" refid="class_polar_basis_1ace5aea039f333b325a02266bf91b518d" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_polar_basis_1a0ba528379df5a33db38b6d1463e53b4d" kindref="member">minSNR</ref>,<sp/><ref refid="class_polar_basis_1ace5aea039f333b325a02266bf91b518d" kindref="member">maxSNR</ref>;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186" refid="class_polar_basis_1a3197446ade65d9b4d17e381333aff246" refkind="member"><highlight class="normal"><sp/><sp/>std::vector&lt;Eigen::MatrixXd&gt;<sp/><ref refid="class_polar_basis_1a3197446ade65d9b4d17e381333aff246" kindref="member">vc</ref>,<sp/><ref refid="class_polar_basis_1a22efaf97472b275a5cffe707f31a49e7" kindref="member">vs</ref>;</highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="188" refid="class_polar_basis_1adacb1bb523e1ed452d7075cf6b97135f" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_polar_basis_1adacb1bb523e1ed452d7075cf6b97135f" kindref="member">get_pot</ref>(Eigen::MatrixXd&amp;<sp/>Vc,<sp/>Eigen::MatrixXd&amp;<sp/>Vs,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>r,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>z)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="191"></codeline>
<codeline lineno="192" refid="class_polar_basis_1a62f0e567cfac40ee6c955aa9b46b331c" refkind="member"><highlight class="normal"><sp/><sp/>std::vector&lt;<sp/>std::vector&lt;Eigen::MatrixXd&gt;<sp/>&gt;<sp/><ref refid="class_polar_basis_1a14b747134e7a5e92e73f2c6cb6570a14" kindref="member">differS1</ref>,<sp/><ref refid="class_polar_basis_1a62f0e567cfac40ee6c955aa9b46b331c" kindref="member">differC1</ref>;</highlight></codeline>
<codeline lineno="193" refid="class_polar_basis_1ad68931ee90a672f077a8ccaae1bc72df" refkind="member"><highlight class="normal"><sp/><sp/>std::vector&lt;double&gt;<sp/><ref refid="class_polar_basis_1a9807aaaf18f9e1a8c36babf586dae852" kindref="member">workC1</ref>,<sp/><ref refid="class_polar_basis_1ad68931ee90a672f077a8ccaae1bc72df" kindref="member">workC</ref>,<sp/><ref refid="class_polar_basis_1a9ca96eb5c70ca2b17032fe5a2c0f813c" kindref="member">workS1</ref>,<sp/><ref refid="class_polar_basis_1aa664182951b12af8a5bc377a8421f849" kindref="member">workS</ref>;</highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="198" refid="class_polar_basis_1adfeabbff17849499d42172409cde90ee" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_polar_basis_1adfeabbff17849499d42172409cde90ee" kindref="member">getRtable</ref>()<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="preprocessor">#if<sp/>HAVE_LIBCUDA==1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>determine_coefficients_cuda(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>compute_pca);</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>determine_acceleration_cuda();</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>multistep_update_cuda();</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/>thrust::host_vector&lt;cuFP_t&gt;<sp/>host_coefs,<sp/>host_massT;</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/>thrust::device_vector&lt;cuFP_t&gt;<sp/>dev_coefs;</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/>std::vector&lt;thrust::host_vector&lt;cuFP_t&gt;&gt;<sp/>host_coefsT,<sp/>host_covarT;</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/>cuFP_t<sp/>host_mass_tot;</highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>HtoD_coefs();</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>DtoH_coefs(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>coef_cuda_compare();</highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/>std::vector&lt;cudaArray_t&gt;<sp/>cuInterpArray;</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/>thrust::host_vector&lt;cudaTextureObject_t&gt;<sp/>tex;</highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="expand_8_h_1aabd39b8eecb8cb426592ccefd1e5e5b6" kindref="member">initialize_cuda</ref>()<sp/>{}</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>destroy_cuda();</highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>cudaMappingConstants<sp/>getCudaMappingConstants()</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/>cudaMappingConstants<sp/>ret;</highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/>ret.rscale<sp/>=<sp/>1.0;</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/>ret.hscale<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/>ret.xmin<sp/><sp/><sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/>ret.xmax<sp/><sp/><sp/>=<sp/>1.0;</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/>ret.ymin<sp/><sp/><sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/>ret.ymax<sp/><sp/><sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/>ret.numr<sp/><sp/><sp/>=<sp/>100;</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/>ret.numx<sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/>ret.numy<sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/>ret.dxi<sp/><sp/><sp/><sp/>=<sp/>1.0/(ret.numr-1);</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/>ret.dxi<sp/><sp/><sp/><sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/>ret.cmapR<sp/><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>initialize_mapping_constants();</highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>host_dev_force_compare();</highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/>thrust::device_vector&lt;cudaTextureObject_t&gt;<sp/>t_d;</highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">cudaStorage</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/>thrust::device_vector&lt;cuFP_t&gt;<sp/>dN_coef;</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/>thrust::device_vector&lt;cuFP_t&gt;<sp/>dc_coef;</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/>thrust::device_vector&lt;cuFP_t&gt;<sp/>dw_coef;</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/>thrust::device_vector&lt;cuFP_t&gt;<sp/>df_coef;</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/>thrust::device_vector&lt;cuFP_t&gt;<sp/>dN_tvar;</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/>thrust::device_vector&lt;cuFP_t&gt;<sp/>dW_tvar;</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/>thrust::device_vector&lt;cuFP_t&gt;<sp/>dc_tvar;</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/>thrust::device_vector&lt;cuFP_t&gt;<sp/>dw_tvar;</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/>thrust::device_vector&lt;cuFP_t&gt;<sp/>df_tvar;</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/>thrust::device_vector&lt;cuFP_t&gt;<sp/>m_d,<sp/>u_d,<sp/>X_d,<sp/>Y_d,<sp/>a_d,<sp/>p_d;</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/>thrust::device_vector&lt;int<sp/><sp/><sp/>&gt;<sp/>iX_d,<sp/>iY_d;</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;thrust::device_vector&lt;cuFP_t&gt;&gt;<sp/>T_covr;</highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>resize_coefs(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nmax,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Mmax,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>N,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>gridSize,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stride,</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sampT,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>pca,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>pcaeof,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>subsamp);</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>resize_acc<sp/><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Mmax,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Nthread);</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>get_coef(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>m,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>c)</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m<sp/>&gt;<sp/><sp/><ref refid="class_axisymmetric_basis_1a2307130cf92a81e6cfb6f69fb2279585" kindref="member">Mmax</ref>)</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;m&gt;mmax&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n<sp/>&gt;=<sp/><ref refid="class_axisymmetric_basis_1acee029d0e3afc656f5fb5d8f063a97d9" kindref="member">nmax</ref>)</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;n&gt;=nmax&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c<sp/>==<sp/></highlight><highlight class="charliteral">&apos;c&apos;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m==0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(*<ref refid="class_axisymmetric_basis_1afae69589bd4f7341ab42b8c48c22b707" kindref="member">expcoef</ref>[0])[n];</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(*<ref refid="class_axisymmetric_basis_1afae69589bd4f7341ab42b8c48c22b707" kindref="member">expcoef</ref>[2*m-1])[n];</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(*<ref refid="class_axisymmetric_basis_1afae69589bd4f7341ab42b8c48c22b707" kindref="member">expcoef</ref>[2*m])[n];</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;<sp/>set_coef(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_pot_accel_1ad9ff6c9f431ad2f8ad2e5895c222ede8" kindref="member">mlevel</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>m,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>c)</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m<sp/>&gt;<sp/><sp/><ref refid="class_axisymmetric_basis_1a2307130cf92a81e6cfb6f69fb2279585" kindref="member">Mmax</ref>)</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;m&gt;mmax&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n<sp/>&gt;=<sp/><ref refid="class_axisymmetric_basis_1acee029d0e3afc656f5fb5d8f063a97d9" kindref="member">nmax</ref>)</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;n&gt;=nmax&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c<sp/>==<sp/></highlight><highlight class="charliteral">&apos;c&apos;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m==0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(*<ref refid="class_polar_basis_1a15d95a42911345cf8a447f8b87dc0db4" kindref="member">expcoef0</ref>[0][0])[n];</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(*<ref refid="class_polar_basis_1a15d95a42911345cf8a447f8b87dc0db4" kindref="member">expcoef0</ref>[0][2*m-1])[n];</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(*<ref refid="class_polar_basis_1a15d95a42911345cf8a447f8b87dc0db4" kindref="member">expcoef0</ref>[0][2*m])[n];</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;<sp/>set_coefT(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>m,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n)</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m<sp/>&gt;<sp/><sp/><ref refid="class_axisymmetric_basis_1a2307130cf92a81e6cfb6f69fb2279585" kindref="member">Mmax</ref>)</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;m&gt;mmax&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n<sp/>&gt;=<sp/><ref refid="class_axisymmetric_basis_1acee029d0e3afc656f5fb5d8f063a97d9" kindref="member">nmax</ref>)</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;n&gt;=nmax&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(T<sp/>&gt;=<sp/><ref refid="class_polar_basis_1a3bd4a78d9444ffbbe83a56ae99bea773" kindref="member">sampT</ref>)<sp/>{</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::ostringstream<sp/>sout;</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;(T=&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>T<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;)&gt;=(sampT=&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="class_polar_basis_1a3bd4a78d9444ffbbe83a56ae99bea773" kindref="member">sampT</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;)&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(sout.str());</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(*<ref refid="class_axisymmetric_basis_1acd8494e7bb875fc2c8677ca92a0c6f01" kindref="member">expcoefT</ref>[T][m])[n];</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;<sp/>set_covrT(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>m,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>o)</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m<sp/>&gt;<sp/><sp/><ref refid="class_axisymmetric_basis_1a2307130cf92a81e6cfb6f69fb2279585" kindref="member">Mmax</ref>)</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;m&gt;mmax&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n<sp/>&gt;=<sp/><ref refid="class_axisymmetric_basis_1acee029d0e3afc656f5fb5d8f063a97d9" kindref="member">nmax</ref>)</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;n&gt;=nmax&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(o<sp/>&gt;=<sp/><ref refid="class_axisymmetric_basis_1acee029d0e3afc656f5fb5d8f063a97d9" kindref="member">nmax</ref>)</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;o&gt;=nmax&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(T<sp/>&gt;=<sp/><ref refid="class_polar_basis_1a3bd4a78d9444ffbbe83a56ae99bea773" kindref="member">sampT</ref>)<sp/>{</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::ostringstream<sp/>sout;</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;(T=&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>T<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;)&gt;=(sampT=&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="class_polar_basis_1a3bd4a78d9444ffbbe83a56ae99bea773" kindref="member">sampT</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;)&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(sout.str());</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(*<ref refid="class_axisymmetric_basis_1acc9740eafab3aa6d3b935bb310c568bd" kindref="member">expcoefM</ref>[T][m])(n,<sp/>o);</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;<sp/>set_tvar(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>m,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j)</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m<sp/>&gt;<sp/><sp/><ref refid="class_axisymmetric_basis_1a2307130cf92a81e6cfb6f69fb2279585" kindref="member">Mmax</ref>)</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;m&gt;mmax&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>&gt;=<sp/><ref refid="class_axisymmetric_basis_1acee029d0e3afc656f5fb5d8f063a97d9" kindref="member">nmax</ref><sp/>or<sp/>j<sp/>&gt;=<sp/><ref refid="class_axisymmetric_basis_1acee029d0e3afc656f5fb5d8f063a97d9" kindref="member">nmax</ref>)</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;n&gt;nmax&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="351"><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_polar_basis_1a35b9bc2b401b6ca50284052b22c16607" kindref="member">tvar</ref>[0][m](i,<sp/>j);</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="354"><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;<sp/>set_massT(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>T)</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(T<sp/>&gt;=<sp/><ref refid="class_polar_basis_1a3bd4a78d9444ffbbe83a56ae99bea773" kindref="member">sampT</ref>)<sp/>{</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::ostringstream<sp/>sout;</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;(T=&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>T<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;)&gt;=(sampT=&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="class_polar_basis_1a3bd4a78d9444ffbbe83a56ae99bea773" kindref="member">sampT</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;)&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(sout.str());</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="362"><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_polar_basis_1a92bf1bad9abede0a8634a3d9045c0dd2" kindref="member">massT1</ref>[0][T];</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="365"><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/>cudaStorage<sp/>cuS;</highlight></codeline>
<codeline lineno="368"><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>initialize_cuda_plr;</highlight></codeline>
<codeline lineno="371"><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>cuda_initialize();</highlight></codeline>
<codeline lineno="374"><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>cuda_zero_coefs();</highlight></codeline>
<codeline lineno="378"><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>std::tuple&lt;double,<sp/>double,<sp/>double&gt;</highlight></codeline>
<codeline lineno="383" refid="class_polar_basis_1a89ded72802c057e9900f24d493f9dce3" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="class_polar_basis_1a89ded72802c057e9900f24d493f9dce3" kindref="member">background</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>r,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>z)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>{0.0,<sp/>0.0,<sp/>0.0};<sp/>}</highlight></codeline>
<codeline lineno="384"><highlight class="normal"></highlight></codeline>
<codeline lineno="386" refid="class_polar_basis_1acaba49129ac6aeeb0d44e1ff25eb4e22" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/><ref refid="class_polar_basis_1acaba49129ac6aeeb0d44e1ff25eb4e22" kindref="member">determine_acceleration_and_potential_thread</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>arg);</highlight></codeline>
<codeline lineno="387"><highlight class="normal"></highlight></codeline>
<codeline lineno="389" refid="class_polar_basis_1a678a5f22d42f8456b994a51afd6ed765" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_polar_basis_1a678a5f22d42f8456b994a51afd6ed765" kindref="member">mlim</ref>;</highlight></codeline>
<codeline lineno="390"><highlight class="normal"></highlight></codeline>
<codeline lineno="392" refid="class_polar_basis_1a6e543f1d0becffd504e251422767d3fe" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_polar_basis_1a6e543f1d0becffd504e251422767d3fe" kindref="member">scale</ref>;</highlight></codeline>
<codeline lineno="393"><highlight class="normal"></highlight></codeline>
<codeline lineno="395" refid="class_polar_basis_1a3a0be17ee62bb4879aea655ae19edaa7" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_polar_basis_1a3a0be17ee62bb4879aea655ae19edaa7" kindref="member">rmin</ref>;</highlight></codeline>
<codeline lineno="396"><highlight class="normal"></highlight></codeline>
<codeline lineno="398" refid="class_polar_basis_1adb549c80cf4c39ca310bd9de22c04c07" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_polar_basis_1adb549c80cf4c39ca310bd9de22c04c07" kindref="member">rmax</ref>;</highlight></codeline>
<codeline lineno="399"><highlight class="normal"></highlight></codeline>
<codeline lineno="401" refid="class_polar_basis_1ad09ca298def19fc208e57ef144ce16f6" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_polar_basis_1ad09ca298def19fc208e57ef144ce16f6" kindref="member">self_consistent</ref>;</highlight></codeline>
<codeline lineno="402"><highlight class="normal"></highlight></codeline>
<codeline lineno="404" refid="class_polar_basis_1a915ee44780b239759e053a4fc36d8816" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_polar_basis_1a915ee44780b239759e053a4fc36d8816" kindref="member">NO_M0</ref>;</highlight></codeline>
<codeline lineno="405"><highlight class="normal"></highlight></codeline>
<codeline lineno="407" refid="class_polar_basis_1a3db7a5c1581abdbad2d411cef3337f05" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_polar_basis_1a3db7a5c1581abdbad2d411cef3337f05" kindref="member">NO_MONO</ref>;</highlight></codeline>
<codeline lineno="408"><highlight class="normal"></highlight></codeline>
<codeline lineno="410" refid="class_polar_basis_1a0bbb25e024f9e05ba4f0f09ddd29d38c" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_polar_basis_1a0bbb25e024f9e05ba4f0f09ddd29d38c" kindref="member">NO_M1</ref>;</highlight></codeline>
<codeline lineno="411"><highlight class="normal"></highlight></codeline>
<codeline lineno="413" refid="class_polar_basis_1a8296f5a47fc5b64f7ca3bd40629996af" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_polar_basis_1a8296f5a47fc5b64f7ca3bd40629996af" kindref="member">EVEN_M</ref>;</highlight></codeline>
<codeline lineno="414"><highlight class="normal"></highlight></codeline>
<codeline lineno="416" refid="class_polar_basis_1a816312706a8b38652b6969ecb540fb83" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_polar_basis_1a816312706a8b38652b6969ecb540fb83" kindref="member">M0_only</ref>;</highlight></codeline>
<codeline lineno="417"><highlight class="normal"></highlight></codeline>
<codeline lineno="419" refid="class_polar_basis_1a4ac3897f3193cce28ec862d51862549c" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_polar_basis_1a4ac3897f3193cce28ec862d51862549c" kindref="member">M0_back</ref>;</highlight></codeline>
<codeline lineno="420"><highlight class="normal"></highlight></codeline>
<codeline lineno="422" refid="class_polar_basis_1a3eea87c05c80ea26d61cf7fa851963b5" refkind="member"><highlight class="normal"><sp/><sp/>Eigen::VectorXd<sp/><ref refid="class_polar_basis_1a3eea87c05c80ea26d61cf7fa851963b5" kindref="member">meanC</ref>;</highlight></codeline>
<codeline lineno="423"><highlight class="normal"></highlight></codeline>
<codeline lineno="425" refid="class_polar_basis_1a2e121b84e9254efa5cbd308991c66e54" refkind="member"><highlight class="normal"><sp/><sp/>Eigen::MatrixXd<sp/><ref refid="class_polar_basis_1a2e121b84e9254efa5cbd308991c66e54" kindref="member">rmsC</ref>;</highlight></codeline>
<codeline lineno="426"><highlight class="normal"></highlight></codeline>
<codeline lineno="428"><highlight class="normal"></highlight></codeline>
<codeline lineno="429" refid="class_polar_basis_1a05fd3a74d0b2657ded0339a346cbf997" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_polar_basis_1a05fd3a74d0b2657ded0339a346cbf997" kindref="member">seedN</ref>;</highlight></codeline>
<codeline lineno="430" refid="class_polar_basis_1a6101c6d9456396713bd0c589c27f85c9" refkind="member"><highlight class="normal"><sp/><sp/>std::mt19937<sp/><ref refid="class_polar_basis_1a6101c6d9456396713bd0c589c27f85c9" kindref="member">rgen</ref>;</highlight></codeline>
<codeline lineno="431" refid="class_polar_basis_1a0068f61d14aec9c87ed6d9cc24e02b1d" refkind="member"><highlight class="normal"><sp/><sp/>std::normal_distribution&lt;&gt;<sp/><ref refid="class_polar_basis_1a0068f61d14aec9c87ed6d9cc24e02b1d" kindref="member">nrand</ref>;</highlight></codeline>
<codeline lineno="433"></codeline>
<codeline lineno="435" refid="class_polar_basis_1ab5d0ad742eec040c918d0a3398e0df5a" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_polar_basis_1ab5d0ad742eec040c918d0a3398e0df5a" kindref="member">ssfrac</ref>;</highlight></codeline>
<codeline lineno="436"><highlight class="normal"></highlight></codeline>
<codeline lineno="438" refid="class_polar_basis_1aade6058d4754068e3390aecc59241901" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_polar_basis_1aade6058d4754068e3390aecc59241901" kindref="member">subset</ref>;</highlight></codeline>
<codeline lineno="439"><highlight class="normal"></highlight></codeline>
<codeline lineno="444" refid="class_polar_basis_1ab837dfe291f4c04c498805ad3d7899a5" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_polar_basis_1ab837dfe291f4c04c498805ad3d7899a5" kindref="member">compute_multistep_coefficients</ref>();</highlight></codeline>
<codeline lineno="445"><highlight class="normal"></highlight></codeline>
<codeline lineno="447"></codeline>
<codeline lineno="448" refid="class_polar_basis_1afb8531a9c023e49bc2a2c112e47490eb" refkind="member"><highlight class="normal"><sp/><sp/>vector&lt;<sp/>vector&lt;Eigen::MatrixXd&gt;<sp/>&gt;<sp/><ref refid="class_polar_basis_1afb8531a9c023e49bc2a2c112e47490eb" kindref="member">differ1</ref>;</highlight></codeline>
<codeline lineno="449" refid="class_polar_basis_1a99c0c982b5199a2f2f637d929def3782" refkind="member"><highlight class="normal"><sp/><sp/>vector&lt;<sp/>double<sp/>&gt;<sp/><ref refid="class_polar_basis_1a99c0c982b5199a2f2f637d929def3782" kindref="member">pack</ref>,<sp/><ref refid="class_polar_basis_1abca00424b2046864e5d8242ab314d299" kindref="member">unpack</ref>;</highlight></codeline>
<codeline lineno="451"></codeline>
<codeline lineno="455" refid="class_polar_basis_1a2ab3b12283586fff2210ef28df12f834" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_polar_basis_1a2ab3b12283586fff2210ef28df12f834" kindref="member">dump_coefs_all</ref>(ostream<sp/>&amp;);</highlight></codeline>
<codeline lineno="456"><highlight class="normal"></highlight></codeline>
<codeline lineno="458" refid="class_polar_basis_1a88caee4e6225bee5a620dd123944641a" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_polar_basis_1a88caee4e6225bee5a620dd123944641a" kindref="member">cmagic</ref><sp/>=<sp/>0xc0a57a2;</highlight></codeline>
<codeline lineno="459"><highlight class="normal"></highlight></codeline>
<codeline lineno="461" refid="class_polar_basis_1a2751b7dbf6ebb3b067666e03470fcf58" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="class_mixture_basis" kindref="compound">MixtureBasis</ref><sp/>*<ref refid="class_polar_basis_1a2751b7dbf6ebb3b067666e03470fcf58" kindref="member">mix</ref>;</highlight></codeline>
<codeline lineno="462"><highlight class="normal"></highlight></codeline>
<codeline lineno="466" refid="class_polar_basis_1a4b5f9c6bef2c419f84b76fb396e82723" refkind="member"><highlight class="normal"><sp/><sp/>std::shared_ptr&lt;CoefClasses::CylCoefs&gt;<sp/><ref refid="class_polar_basis_1a4b5f9c6bef2c419f84b76fb396e82723" kindref="member">playback</ref>;</highlight></codeline>
<codeline lineno="467"><highlight class="normal"></highlight></codeline>
<codeline lineno="474" refid="class_polar_basis_1a41aced55714de2c225f7a2f19fe3b596" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_polar_basis_1a41aced55714de2c225f7a2f19fe3b596" kindref="member">coefMaster</ref>;</highlight></codeline>
<codeline lineno="475"><highlight class="normal"></highlight></codeline>
<codeline lineno="477" refid="class_polar_basis_1a7e1ac0795981fe6cd99dc0ef4553f3a1" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_polar_basis_1a7e1ac0795981fe6cd99dc0ef4553f3a1" kindref="member">lastPlayTime</ref>;</highlight></codeline>
<codeline lineno="478"><highlight class="normal"></highlight></codeline>
<codeline lineno="480" refid="class_polar_basis_1a79001ab9c1f4d7756828473039736910" refkind="member"><highlight class="normal"><sp/><sp/>CoefClasses::CylCoefs<sp/><ref refid="class_polar_basis_1a79001ab9c1f4d7756828473039736910" kindref="member">cylCoefs</ref>;</highlight></codeline>
<codeline lineno="481"><highlight class="normal"></highlight></codeline>
<codeline lineno="483" refid="class_polar_basis_1a80f934a93cbe526d28c6f8787b31b729" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::set&lt;std::string&gt;<sp/><ref refid="class_polar_basis_1a80f934a93cbe526d28c6f8787b31b729" kindref="member">valid_keys</ref>;</highlight></codeline>
<codeline lineno="484"><highlight class="normal"></highlight></codeline>
<codeline lineno="486"></codeline>
<codeline lineno="487" refid="class_polar_basis_1adfedd329d82bf29612dc7effb68d6527" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>pthread_mutex_t<sp/><ref refid="class_polar_basis_1a1e8407fa2d119488c94015b74b977e37" kindref="member">used_lock</ref>,<sp/><ref refid="class_polar_basis_1adfedd329d82bf29612dc7effb68d6527" kindref="member">cos_coef_lock</ref>,<sp/><ref refid="class_polar_basis_1a50c1a4d646f89ac3d9d07e9700a9ead1" kindref="member">sin_coef_lock</ref>;</highlight></codeline>
<codeline lineno="489"><highlight class="normal"></highlight></codeline>
<codeline lineno="490"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="491"><highlight class="normal"></highlight></codeline>
<codeline lineno="493" refid="class_polar_basis_1ae3e10d1d2db082490f8a28b32915def5" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_polar_basis_1ae3e10d1d2db082490f8a28b32915def5" kindref="member">NewCoefs</ref>;</highlight></codeline>
<codeline lineno="494"><highlight class="normal"></highlight></codeline>
<codeline lineno="496" refid="class_polar_basis_1a45940af63c3a13154e29504458495c9d" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="class_polar_basis_1a45940af63c3a13154e29504458495c9d" kindref="member">PolarBasis</ref>(<ref refid="class_component" kindref="compound">Component</ref>*<sp/>c0,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>YAML::Node&amp;<sp/><ref refid="class_pot_accel_1ab682d4480d7d2946a7bef7f93ac0c6a0" kindref="member">conf</ref>,<sp/><ref refid="class_mixture_basis" kindref="compound">MixtureBasis</ref><sp/>*m=0);</highlight></codeline>
<codeline lineno="497"><highlight class="normal"></highlight></codeline>
<codeline lineno="499" refid="class_polar_basis_1aaa494cc1d1daa18fc49e97afc5921df0" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="class_polar_basis_1aaa494cc1d1daa18fc49e97afc5921df0" kindref="member">PolarBasis</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_polar_basis" kindref="compound">PolarBasis</ref>&amp;<sp/>p);</highlight></codeline>
<codeline lineno="500"><highlight class="normal"></highlight></codeline>
<codeline lineno="502" refid="class_polar_basis_1aea22978a077e0f22f369e48e96ef6af1" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="class_polar_basis_1aea22978a077e0f22f369e48e96ef6af1" kindref="member">~PolarBasis</ref>();</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="505"><highlight class="normal"></highlight></codeline>
<codeline lineno="506" refid="class_polar_basis_1af3ccc880f0cc299abc8c603c7e9778e9" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_polar_basis_1af3ccc880f0cc299abc8c603c7e9778e9" kindref="member">get_acceleration_and_potential</ref>(<ref refid="class_component" kindref="compound">Component</ref>*<sp/><ref refid="class_pot_accel_1afa2cd3b0bf51e23d8bfc54aac73ef010" kindref="member">cC</ref>);</highlight></codeline>
<codeline lineno="507"><highlight class="normal"></highlight></codeline>
<codeline lineno="509"><highlight class="normal"></highlight></codeline>
<codeline lineno="510" refid="class_polar_basis_1ad124f3ba09e1b792053c736294f6ddb7" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_polar_basis_1ad124f3ba09e1b792053c736294f6ddb7" kindref="member">determine_coefficients</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="511"><highlight class="normal"></highlight></codeline>
<codeline lineno="513" refid="class_polar_basis_1a6e26e359a05e6860626196e156475b6b" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_polar_basis_1a6e26e359a05e6860626196e156475b6b" kindref="member">determine_coefficients</ref>(<ref refid="class_component" kindref="compound">Component</ref><sp/>*c)<sp/></highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/>{<sp/><ref refid="class_pot_accel_1afa2cd3b0bf51e23d8bfc54aac73ef010" kindref="member">cC</ref><sp/>=<sp/>c;<sp/><ref refid="class_polar_basis_1ad124f3ba09e1b792053c736294f6ddb7" kindref="member">determine_coefficients</ref>();<sp/>}</highlight></codeline>
<codeline lineno="515"><highlight class="normal"></highlight></codeline>
<codeline lineno="517"><highlight class="normal"></highlight></codeline>
<codeline lineno="518" refid="class_polar_basis_1acb8cf13811dc3e6d8556b70d00a4d8c6" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_polar_basis_1acb8cf13811dc3e6d8556b70d00a4d8c6" kindref="member">determine_acceleration_and_potential</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="519"><highlight class="normal"></highlight></codeline>
<codeline lineno="525" refid="class_polar_basis_1a176f79dfddda7dae31a595259abf797b" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_polar_basis_1a176f79dfddda7dae31a595259abf797b" kindref="member">multistep_reset</ref>();</highlight></codeline>
<codeline lineno="526" refid="class_polar_basis_1ad8614d1a76923db9331a1080fdc7cf2b" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_polar_basis_1ad8614d1a76923db9331a1080fdc7cf2b" kindref="member">multistep_update_begin</ref>();</highlight></codeline>
<codeline lineno="527" refid="class_polar_basis_1abd587da712635ad6b559671f10fa5b32" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_polar_basis_1abd587da712635ad6b559671f10fa5b32" kindref="member">multistep_update</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cur,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>next,<sp/><ref refid="class_component" kindref="compound">Component</ref>*<sp/>c,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="528" refid="class_polar_basis_1aea28de3f69eb403dab0bd5049e71d04e" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_polar_basis_1aea28de3f69eb403dab0bd5049e71d04e" kindref="member">multistep_update_finish</ref>();</highlight></codeline>
<codeline lineno="530"></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="544" refid="class_polar_basis_1a35dcc79a47abe1c6de84dbdb9203896d" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_polar_basis_1a35dcc79a47abe1c6de84dbdb9203896d" kindref="member">get_dpotl</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>r,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>z,<sp/>Eigen::MatrixXd&amp;<sp/>p,</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Eigen::MatrixXd&amp;<sp/>dpr,<sp/>Eigen::MatrixXd&amp;<sp/>dpz,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tid)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="546"><highlight class="normal"></highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="556" refid="class_polar_basis_1a5bd90a17ffb1b1f7e06fdb9a9861b9e9" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_polar_basis_1a5bd90a17ffb1b1f7e06fdb9a9861b9e9" kindref="member">get_potl</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>r,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>z,<sp/>Eigen::MatrixXd&amp;<sp/>p,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tid)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="557"><highlight class="normal"></highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="567" refid="class_polar_basis_1a7e4f51d9a6cb765a29e4a90c6020b3fe" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_polar_basis_1a7e4f51d9a6cb765a29e4a90c6020b3fe" kindref="member">get_dens</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>r,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>z,<sp/>Eigen::MatrixXd&amp;<sp/>d,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tid)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="568"><highlight class="normal"></highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="579" refid="class_polar_basis_1ae897c7f6610ad01ab9c69d47e836d3dd" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_polar_basis_1ae897c7f6610ad01ab9c69d47e836d3dd" kindref="member">get_potl_dens</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>r,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>z,</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Eigen::MatrixXd&amp;<sp/>p,<sp/>Eigen::MatrixXd&amp;<sp/>d,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tid)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="581"><highlight class="normal"></highlight></codeline>
<codeline lineno="583" refid="class_polar_basis_1a05e6a24b91fd7c8239bffa2df1bb9004" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><ref refid="class_polar_basis_1a05e6a24b91fd7c8239bffa2df1bb9004" kindref="member">determine_fields_at_point</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>y,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>z,</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*tdens0,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*tpotl0,<sp/></highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*tdens,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*tpotl,<sp/></highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*tpotx,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*tpoty,<sp/></highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*tpotz);</highlight></codeline>
<codeline lineno="588"><highlight class="normal"></highlight></codeline>
<codeline lineno="590" refid="class_polar_basis_1a4d396e0af9e54f2f09009f05a5d95672" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_polar_basis_1a4d396e0af9e54f2f09009f05a5d95672" kindref="member">determine_fields_at_point_sph</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>r,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>theta,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>phi,</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*tdens0,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*tpotl0,<sp/></highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*tdens,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*tpotl,<sp/></highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*tpotr,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*tpott,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*tpotp);</highlight></codeline>
<codeline lineno="594"><highlight class="normal"></highlight></codeline>
<codeline lineno="595"><highlight class="normal"></highlight></codeline>
<codeline lineno="597" refid="class_polar_basis_1aeef7e49e923b2a7bd510c99f10cdb19e" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_polar_basis_1aeef7e49e923b2a7bd510c99f10cdb19e" kindref="member">determine_fields_at_point_cyl</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>r,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>z,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>phi,</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*tdens0,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*tpotl0,<sp/></highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*tdens,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*tpotl,<sp/></highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*tpotr,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*tpotz,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*tpotp);</highlight></codeline>
<codeline lineno="601"><highlight class="normal"></highlight></codeline>
<codeline lineno="603" refid="class_polar_basis_1a74b322e6f5894af06076c62f7a3e9a87" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_polar_basis_1a74b322e6f5894af06076c62f7a3e9a87" kindref="member">knl</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1.0;<sp/>}</highlight></codeline>
<codeline lineno="604"><highlight class="normal"></highlight></codeline>
<codeline lineno="606" refid="class_polar_basis_1a4326226fbd3814c1b159c9a8d1714dc9" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_polar_basis_1a4326226fbd3814c1b159c9a8d1714dc9" kindref="member">dump_coefs</ref>(ostream<sp/>&amp;);</highlight></codeline>
<codeline lineno="607"><highlight class="normal"></highlight></codeline>
<codeline lineno="609" refid="class_polar_basis_1aa99664ea268f363763f3577416ae367c" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_polar_basis_1aa99664ea268f363763f3577416ae367c" kindref="member">dump_coefs_h5</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/><ref refid="model3d_8_h_1ab6fca3418c4b6179d83a8991a8b2f63cab4e367fba14b5eae38519a2823aca793" kindref="member">file</ref>);</highlight></codeline>
<codeline lineno="610"><highlight class="normal">};</highlight></codeline>
<codeline lineno="611"><highlight class="normal"></highlight></codeline>
<codeline lineno="612"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/weinberg/Projects/EXP/src/PolarBasis.H"/>
  </compounddef>
</doxygen>
