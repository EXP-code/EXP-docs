<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="class_s_l_grid_sph" kind="class" language="C++" prot="public">
    <compoundname>SLGridSph</compoundname>
    <includes refid="_s_l_grid_m_p2_8_h" local="no">SLGridMP2.H</includes>
    <sectiondef kind="private-type">
      <memberdef kind="typedef" id="class_s_l_grid_sph_1a2cd7f22c9725b46cc111468c8cc0e54b" prot="private" static="no">
        <type>std::shared_ptr&lt; <ref refid="class_table_sph" kindref="compound">TableSph</ref>[]&gt;</type>
        <definition>using SLGridSph::table_ptr_1D =  std::shared_ptr&lt;TableSph[]&gt;</definition>
        <argsstring></argsstring>
        <name>table_ptr_1D</name>
        <qualifiedname>SLGridSph::table_ptr_1D</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/SLGridMP2.H" line="47" column="3" bodyfile="/home/weinberg/Projects/EXP/include/SLGridMP2.H" bodystart="47" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_s_l_grid_sph_1ad8ae914daf3e01a12f79a8c0e65d71df" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool SLGridSph::cache</definition>
        <argsstring></argsstring>
        <name>cache</name>
        <qualifiedname>SLGridSph::cache</qualifiedname>
        <briefdescription>
<para>Use basis cache. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/SLGridMP2.H" line="71" column="8" bodyfile="/home/weinberg/Projects/EXP/include/SLGridMP2.H" bodystart="71" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_s_l_grid_sph_1a3648c40afe4fa6c3771327496f7e7378" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int SLGridSph::cmap</definition>
        <argsstring></argsstring>
        <name>cmap</name>
        <qualifiedname>SLGridSph::cmap</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/SLGridMP2.H" line="36" column="7" bodyfile="/home/weinberg/Projects/EXP/include/SLGridMP2.H" bodystart="36" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_s_l_grid_sph_1a6b1dfc6e83f3f9181275a91013b6d2c2" prot="private" static="no" mutable="no">
        <type>Eigen::VectorXd</type>
        <definition>Eigen::VectorXd SLGridSph::d0</definition>
        <argsstring></argsstring>
        <name>d0</name>
        <qualifiedname>SLGridSph::d0</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/SLGridMP2.H" line="44" column="19" bodyfile="/home/weinberg/Projects/EXP/include/SLGridMP2.H" bodystart="44" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_s_l_grid_sph_1ae699f8de2cd4982887712cc8797b2f56" prot="private" static="no" mutable="no">
        <type>const std::string</type>
        <definition>const std::string SLGridSph::default_cache</definition>
        <argsstring></argsstring>
        <name>default_cache</name>
        <qualifiedname>SLGridSph::default_cache</qualifiedname>
        <initializer>= &quot;.slgrid_sph_cache&quot;</initializer>
        <briefdescription>
<para>Default cache file name. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/SLGridMP2.H" line="80" column="21" bodyfile="/home/weinberg/Projects/EXP/include/SLGridMP2.H" bodystart="80" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_s_l_grid_sph_1a54572f3f82e4145cadb176a4da4dc1cd" prot="private" static="no" mutable="no">
        <type>const std::string</type>
        <definition>const std::string SLGridSph::default_model</definition>
        <argsstring></argsstring>
        <name>default_model</name>
        <qualifiedname>SLGridSph::default_model</qualifiedname>
        <initializer>= &quot;SLGridSph.model&quot;</initializer>
        <briefdescription>
<para>Default model file name. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/SLGridMP2.H" line="77" column="21" bodyfile="/home/weinberg/Projects/EXP/include/SLGridMP2.H" bodystart="77" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_s_l_grid_sph_1a187de697240f6e2ebf0c5fe89eda6deb" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double SLGridSph::dfac</definition>
        <argsstring></argsstring>
        <name>dfac</name>
        <qualifiedname>SLGridSph::dfac</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/SLGridMP2.H" line="37" column="15" bodyfile="/home/weinberg/Projects/EXP/include/SLGridMP2.H" bodystart="37" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_s_l_grid_sph_1acd74b97ab84a983a9a32b9fc87aea8e7" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int SLGridSph::diverge</definition>
        <argsstring></argsstring>
        <name>diverge</name>
        <qualifiedname>SLGridSph::diverge</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/SLGridMP2.H" line="36" column="12" bodyfile="/home/weinberg/Projects/EXP/include/SLGridMP2.H" bodystart="36" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_s_l_grid_sph_1a9d95ca862e68606aa3ae5dbc11a15511" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double SLGridSph::dxi</definition>
        <argsstring></argsstring>
        <name>dxi</name>
        <qualifiedname>SLGridSph::dxi</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/SLGridMP2.H" line="39" column="20" bodyfile="/home/weinberg/Projects/EXP/include/SLGridMP2.H" bodystart="39" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_s_l_grid_sph_1a98f33cee4a3a93be7209e4b26f16b0d3" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int SLGridSph::lmax</definition>
        <argsstring></argsstring>
        <name>lmax</name>
        <qualifiedname>SLGridSph::lmax</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/SLGridMP2.H" line="33" column="7" bodyfile="/home/weinberg/Projects/EXP/include/SLGridMP2.H" bodystart="33" bodyend="-1"/>
        <referencedby refid="class_s_l_grid_sph_1a76d7cc921a09b190519bf76cad5b1798" compoundref="_s_l_grid_m_p2_8_h" startline="225" endline="225">getLmax</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_s_l_grid_sph_1a7936821e8dd19b7806d574a74ce3fdcc" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string SLGridSph::model_file_name</definition>
        <argsstring></argsstring>
        <name>model_file_name</name>
        <qualifiedname>SLGridSph::model_file_name</qualifiedname>
        <briefdescription>
<para>Model file name. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/SLGridMP2.H" line="83" column="15" bodyfile="/home/weinberg/Projects/EXP/include/SLGridMP2.H" bodystart="83" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_s_l_grid_sph_1a02f9febe228b8ab460b308aa8c5f3b33" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; char[]&gt;</type>
        <definition>std::shared_ptr&lt;char []&gt; SLGridSph::mpi_buf</definition>
        <argsstring></argsstring>
        <name>mpi_buf</name>
        <qualifiedname>SLGridSph::mpi_buf</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/SLGridMP2.H" line="66" column="19" bodyfile="/home/weinberg/Projects/EXP/include/SLGridMP2.H" bodystart="66" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_s_l_grid_sph_1a1d02e85ec936ec5bfb3a53aee3fbbf8e" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int SLGridSph::mpi_bufsz</definition>
        <argsstring></argsstring>
        <name>mpi_bufsz</name>
        <qualifiedname>SLGridSph::mpi_bufsz</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/SLGridMP2.H" line="65" column="7" bodyfile="/home/weinberg/Projects/EXP/include/SLGridMP2.H" bodystart="65" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_s_l_grid_sph_1a91105146d8a0da9dd88ca1ef3cbfbba4" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int SLGridSph::mpi_myid</definition>
        <argsstring></argsstring>
        <name>mpi_myid</name>
        <qualifiedname>SLGridSph::mpi_myid</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/SLGridMP2.H" line="64" column="7" bodyfile="/home/weinberg/Projects/EXP/include/SLGridMP2.H" bodystart="64" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_s_l_grid_sph_1a2ce45d787ce5d7d38b45b758ff1d2ac8" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int SLGridSph::mpi_numprocs</definition>
        <argsstring></argsstring>
        <name>mpi_numprocs</name>
        <qualifiedname>SLGridSph::mpi_numprocs</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/SLGridMP2.H" line="64" column="16" bodyfile="/home/weinberg/Projects/EXP/include/SLGridMP2.H" bodystart="64" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_s_l_grid_sph_1a821c02701e9a8e31b47af2d3eccf27b8" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int SLGridSph::nmax</definition>
        <argsstring></argsstring>
        <name>nmax</name>
        <qualifiedname>SLGridSph::nmax</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/SLGridMP2.H" line="33" column="12" bodyfile="/home/weinberg/Projects/EXP/include/SLGridMP2.H" bodystart="33" bodyend="-1"/>
        <referencedby refid="class_s_l_grid_sph_1a510786e220835eb653d7c2c6a531feb5" compoundref="_s_l_grid_m_p2_8_h" startline="226" endline="226">getNmax</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_s_l_grid_sph_1a360e31f364063db2236bb554a7b49939" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int SLGridSph::numr</definition>
        <argsstring></argsstring>
        <name>numr</name>
        <qualifiedname>SLGridSph::numr</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/SLGridMP2.H" line="33" column="17" bodyfile="/home/weinberg/Projects/EXP/include/SLGridMP2.H" bodystart="33" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_s_l_grid_sph_1a2ac57c8cff2acf0552982fd814489b96" prot="private" static="no" mutable="no">
        <type>Eigen::VectorXd</type>
        <definition>Eigen::VectorXd SLGridSph::p0</definition>
        <argsstring></argsstring>
        <name>p0</name>
        <qualifiedname>SLGridSph::p0</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/SLGridMP2.H" line="43" column="19" bodyfile="/home/weinberg/Projects/EXP/include/SLGridMP2.H" bodystart="43" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_s_l_grid_sph_1ae84ca6d8e6621023939681b7dad5e769" prot="private" static="no" mutable="no">
        <type>Eigen::VectorXd</type>
        <definition>Eigen::VectorXd SLGridSph::r</definition>
        <argsstring></argsstring>
        <name>r</name>
        <qualifiedname>SLGridSph::r</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/SLGridMP2.H" line="41" column="19" bodyfile="/home/weinberg/Projects/EXP/include/SLGridMP2.H" bodystart="41" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_s_l_grid_sph_1a139f50426e685e271c7fac4dc2e6165a" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double SLGridSph::rmap</definition>
        <argsstring></argsstring>
        <name>rmap</name>
        <qualifiedname>SLGridSph::rmap</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/SLGridMP2.H" line="37" column="10" bodyfile="/home/weinberg/Projects/EXP/include/SLGridMP2.H" bodystart="37" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_s_l_grid_sph_1a04985be5f03154610e1936eb535a0ec4" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double SLGridSph::rmax</definition>
        <argsstring></argsstring>
        <name>rmax</name>
        <qualifiedname>SLGridSph::rmax</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/SLGridMP2.H" line="34" column="15" bodyfile="/home/weinberg/Projects/EXP/include/SLGridMP2.H" bodystart="34" bodyend="-1"/>
        <referencedby refid="class_s_l_grid_sph_1afe90870e2518f304449f805815c86432" compoundref="_s_l_grid_m_p2_8_h" startline="220" endline="220">getRmax</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_s_l_grid_sph_1aae736cf4583b1f351dccf33cfb2760c8" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double SLGridSph::rmin</definition>
        <argsstring></argsstring>
        <name>rmin</name>
        <qualifiedname>SLGridSph::rmin</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/SLGridMP2.H" line="34" column="10" bodyfile="/home/weinberg/Projects/EXP/include/SLGridMP2.H" bodystart="34" bodyend="-1"/>
        <referencedby refid="class_s_l_grid_sph_1a8e6d4ecf525a519593b74105fb6e6e09" compoundref="_s_l_grid_m_p2_8_h" startline="219" endline="219">getRmin</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_s_l_grid_sph_1a9989c0fc0f39b8834319582435aacb5a" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string SLGridSph::sph_cache_name</definition>
        <argsstring></argsstring>
        <name>sph_cache_name</name>
        <qualifiedname>SLGridSph::sph_cache_name</qualifiedname>
        <briefdescription>
<para>Cache file name. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/SLGridMP2.H" line="86" column="15" bodyfile="/home/weinberg/Projects/EXP/include/SLGridMP2.H" bodystart="86" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_s_l_grid_sph_1af9ef477ea505753f1186beb8985c92fc" prot="private" static="no" mutable="no">
        <type><ref refid="class_s_l_grid_sph_1a2cd7f22c9725b46cc111468c8cc0e54b" kindref="member">table_ptr_1D</ref></type>
        <definition>table_ptr_1D SLGridSph::table</definition>
        <argsstring></argsstring>
        <name>table</name>
        <qualifiedname>SLGridSph::table</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/SLGridMP2.H" line="48" column="16" bodyfile="/home/weinberg/Projects/EXP/include/SLGridMP2.H" bodystart="48" bodyend="-1"/>
        <referencedby refid="class_s_l_grid_sph_1a9aebc866a79fdb771d76c0c843649b32" compoundref="_s_l_grid_m_p2_8_h" startline="132" endline="132">eigenvalue</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_s_l_grid_sph_1a348a4860961f860e95289c1003fa09f2" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool SLGridSph::tbdbg</definition>
        <argsstring></argsstring>
        <name>tbdbg</name>
        <qualifiedname>SLGridSph::tbdbg</qualifiedname>
        <briefdescription>
<para>For deep debugging. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/SLGridMP2.H" line="74" column="8" bodyfile="/home/weinberg/Projects/EXP/include/SLGridMP2.H" bodystart="74" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_s_l_grid_sph_1a13cdd52f3df7160a06e49fbb92c90d33" prot="private" static="no" mutable="no">
        <type>Eigen::VectorXd</type>
        <definition>Eigen::VectorXd SLGridSph::xi</definition>
        <argsstring></argsstring>
        <name>xi</name>
        <qualifiedname>SLGridSph::xi</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/SLGridMP2.H" line="42" column="19" bodyfile="/home/weinberg/Projects/EXP/include/SLGridMP2.H" bodystart="42" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_s_l_grid_sph_1a3ea5affe28f119b873476f7546f6e21f" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double SLGridSph::xmax</definition>
        <argsstring></argsstring>
        <name>xmax</name>
        <qualifiedname>SLGridSph::xmax</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/SLGridMP2.H" line="39" column="15" bodyfile="/home/weinberg/Projects/EXP/include/SLGridMP2.H" bodystart="39" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_s_l_grid_sph_1a3011eca1c0c798506f69ae81d5d74e22" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double SLGridSph::xmin</definition>
        <argsstring></argsstring>
        <name>xmin</name>
        <qualifiedname>SLGridSph::xmin</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/SLGridMP2.H" line="39" column="10" bodyfile="/home/weinberg/Projects/EXP/include/SLGridMP2.H" bodystart="39" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="class_s_l_grid_sph_1ae482fb3249a70db4b09bb599fd8e2d14" prot="private" static="yes" mutable="no">
        <type>const std::string</type>
        <definition>const std::string SLGridSph::Version</definition>
        <argsstring></argsstring>
        <name>Version</name>
        <qualifiedname>SLGridSph::Version</qualifiedname>
        <initializer>= &quot;1.0&quot;</initializer>
        <briefdescription>
<para>Cache versioning. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/SLGridMP2.H" line="95" column="35" bodyfile="/home/weinberg/Projects/EXP/include/SLGridMP2.H" bodystart="95" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="class_s_l_grid_sph_1a88680088d03b1513cd6b41d7fde37fed" prot="public" static="yes" mutable="no">
        <type>int</type>
        <definition>int SLGridSph::mpi</definition>
        <argsstring></argsstring>
        <name>mpi</name>
        <qualifiedname>SLGridSph::mpi</qualifiedname>
        <briefdescription>
<para>Flag for MPI enabled (default: 0=off) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/SLGridMP2.H" line="100" column="14" bodyfile="/home/weinberg/Projects/EXP/include/SLGridMP2.H" bodystart="100" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-func">
      <memberdef kind="function" id="class_s_l_grid_sph_1ae31a5a0d0286e82a2897962f2be9f05f" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SLGridSph::bomb</definition>
        <argsstring>(string oops)</argsstring>
        <name>bomb</name>
        <qualifiedname>SLGridSph::bomb</qualifiedname>
        <param>
          <type>string</type>
          <declname>oops</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/SLGridMP2.H" line="68" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_s_l_grid_sph_1adc69631b7180c1696cfa4889a866ffcb" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SLGridSph::compute_table</definition>
        <argsstring>(TableSph *table, int L)</argsstring>
        <name>compute_table</name>
        <qualifiedname>SLGridSph::compute_table</qualifiedname>
        <param>
          <type><ref refid="class_table_sph" kindref="compound">TableSph</ref> *</type>
          <declname>table</declname>
        </param>
        <param>
          <type>int</type>
          <declname>L</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/SLGridMP2.H" line="55" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_s_l_grid_sph_1ad1a0965f57c08b748f27ac6edf9963ff" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SLGridSph::compute_table_worker</definition>
        <argsstring>(void)</argsstring>
        <name>compute_table_worker</name>
        <qualifiedname>SLGridSph::compute_table_worker</qualifiedname>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/SLGridMP2.H" line="56" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_s_l_grid_sph_1a53064ba83592997af7ef9db2b4c3a168" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SLGridSph::init_table</definition>
        <argsstring>(void)</argsstring>
        <name>init_table</name>
        <qualifiedname>SLGridSph::init_table</qualifiedname>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/SLGridMP2.H" line="54" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_s_l_grid_sph_1ae86ad2c7a2f0aaca24c340654fe7905f" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SLGridSph::initialize</definition>
        <argsstring>(int LMAX, int NMAX, int NUMR, double RMIN, double RMAX, bool CACHE, int CMAP, double RMAP)</argsstring>
        <name>initialize</name>
        <qualifiedname>SLGridSph::initialize</qualifiedname>
        <param>
          <type>int</type>
          <declname>LMAX</declname>
        </param>
        <param>
          <type>int</type>
          <declname>NMAX</declname>
        </param>
        <param>
          <type>int</type>
          <declname>NUMR</declname>
        </param>
        <param>
          <type>double</type>
          <declname>RMIN</declname>
        </param>
        <param>
          <type>double</type>
          <declname>RMAX</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>CACHE</declname>
        </param>
        <param>
          <type>int</type>
          <declname>CMAP</declname>
        </param>
        <param>
          <type>double</type>
          <declname>RMAP</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/SLGridMP2.H" line="50" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_s_l_grid_sph_1a77fa9c94eee0db659571fb651d648cfd" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int SLGridSph::mpi_pack_table</definition>
        <argsstring>(TableSph *table, int l)</argsstring>
        <name>mpi_pack_table</name>
        <qualifiedname>SLGridSph::mpi_pack_table</qualifiedname>
        <param>
          <type><ref refid="class_table_sph" kindref="compound">TableSph</ref> *</type>
          <declname>table</declname>
        </param>
        <param>
          <type>int</type>
          <declname>l</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/SLGridMP2.H" line="62" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_s_l_grid_sph_1a5ccb33849b3ad7c1b3b9e0f3b543749e" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SLGridSph::mpi_setup</definition>
        <argsstring>(void)</argsstring>
        <name>mpi_setup</name>
        <qualifiedname>SLGridSph::mpi_setup</qualifiedname>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/SLGridMP2.H" line="60" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_s_l_grid_sph_1a44b73c659f6150712bedd4c65bd73ad9" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SLGridSph::mpi_unpack_table</definition>
        <argsstring>(void)</argsstring>
        <name>mpi_unpack_table</name>
        <qualifiedname>SLGridSph::mpi_unpack_table</qualifiedname>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/SLGridMP2.H" line="61" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_s_l_grid_sph_1a8129e8ca1aecf9408f58d4f612524f4b" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool SLGridSph::ReadH5Cache</definition>
        <argsstring>()</argsstring>
        <name>ReadH5Cache</name>
        <qualifiedname>SLGridSph::ReadH5Cache</qualifiedname>
        <briefdescription>
<para>Read HDF5 cache. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/SLGridMP2.H" line="92" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_s_l_grid_sph_1aac80af79ab59895fb9e889270408da3a" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SLGridSph::WriteH5Cache</definition>
        <argsstring>()</argsstring>
        <name>WriteH5Cache</name>
        <qualifiedname>SLGridSph::WriteH5Cache</qualifiedname>
        <briefdescription>
<para>Write HDF5 cache. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/SLGridMP2.H" line="89" column="8"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_s_l_grid_sph_1a3453326410450ada459541e2fa27653a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double SLGridSph::d_xi_to_r</definition>
        <argsstring>(double x)</argsstring>
        <name>d_xi_to_r</name>
        <qualifiedname>SLGridSph::d_xi_to_r</qualifiedname>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
<para>Jacobian of nondimensional coordinate mapping. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/SLGridMP2.H" line="141" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_s_l_grid_sph_1a9aebc866a79fdb771d76c0c843649b32" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double SLGridSph::eigenvalue</definition>
        <argsstring>(int l, int n)</argsstring>
        <name>eigenvalue</name>
        <qualifiedname>SLGridSph::eigenvalue</qualifiedname>
        <param>
          <type>int</type>
          <declname>l</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para>Eigenvalue for index and harmonic order l. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/SLGridMP2.H" line="132" column="10" bodyfile="/home/weinberg/Projects/EXP/include/SLGridMP2.H" bodystart="132" bodyend="132"/>
        <references refid="class_s_l_grid_sph_1af9ef477ea505753f1186beb8985c92fc" compoundref="_s_l_grid_m_p2_8_h" startline="48">table</references>
      </memberdef>
      <memberdef kind="function" id="class_s_l_grid_sph_1ae78ffa77c2d3a979c6b495e86bcaea08" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double SLGridSph::get_dens</definition>
        <argsstring>(double x, int l, int n, int which=1)</argsstring>
        <name>get_dens</name>
        <qualifiedname>SLGridSph::get_dens</qualifiedname>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>l</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <param>
          <type>int</type>
          <declname>which</declname>
          <defval>1</defval>
        </param>
        <briefdescription>
<para>Get density for dimensionless coord with harmonic order l and radial orer n <linebreak/>
 </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/SLGridMP2.H" line="148" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_s_l_grid_sph_1afbf0043312e5c39d6ce2f634662e65d6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SLGridSph::get_dens</definition>
        <argsstring>(Eigen::MatrixXd &amp;tab, double x, int which=1)</argsstring>
        <name>get_dens</name>
        <qualifiedname>SLGridSph::get_dens</qualifiedname>
        <param>
          <type>Eigen::MatrixXd &amp;</type>
          <declname>tab</declname>
        </param>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>which</declname>
          <defval>1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get density for dimensionless coord with harmonic order l and radial order n Return Matrix with first dim harmonic order and second dim radial order </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/SLGridMP2.H" line="210" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_s_l_grid_sph_1ac0a42f88f11bcf873f22f872713d4403" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SLGridSph::get_dens</definition>
        <argsstring>(Eigen::VectorXd &amp;vec, double x, int l, int which=1)</argsstring>
        <name>get_dens</name>
        <qualifiedname>SLGridSph::get_dens</qualifiedname>
        <param>
          <type>Eigen::VectorXd &amp;</type>
          <declname>vec</declname>
        </param>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>l</declname>
        </param>
        <param>
          <type>int</type>
          <declname>which</declname>
          <defval>1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/SLGridMP2.H" line="196" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_s_l_grid_sph_1a7f52a541599980c1b6b1510c031ba94f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double SLGridSph::get_force</definition>
        <argsstring>(double x, int l, int n, int which=1)</argsstring>
        <name>get_force</name>
        <qualifiedname>SLGridSph::get_force</qualifiedname>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>l</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <param>
          <type>int</type>
          <declname>which</declname>
          <defval>1</defval>
        </param>
        <briefdescription>
<para>Get force for dimensionless coord with harmonic order l and radial orer n. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/SLGridMP2.H" line="151" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_s_l_grid_sph_1a80b386ffdf810dab68fde482b5d69672" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SLGridSph::get_force</definition>
        <argsstring>(Eigen::MatrixXd &amp;tab, double x, int which=1)</argsstring>
        <name>get_force</name>
        <qualifiedname>SLGridSph::get_force</qualifiedname>
        <param>
          <type>Eigen::MatrixXd &amp;</type>
          <declname>tab</declname>
        </param>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>which</declname>
          <defval>1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get force for dimensionless coord with harmonic order l and radial order n Return Matrix with first dim harmonic order and second dim radial order </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/SLGridMP2.H" line="215" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_s_l_grid_sph_1a8b7e66262789b194108d9201658a0d18" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SLGridSph::get_force</definition>
        <argsstring>(Eigen::VectorXd &amp;vec, double x, int l, int which=1)</argsstring>
        <name>get_force</name>
        <qualifiedname>SLGridSph::get_force</qualifiedname>
        <param>
          <type>Eigen::VectorXd &amp;</type>
          <declname>vec</declname>
        </param>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>l</declname>
        </param>
        <param>
          <type>int</type>
          <declname>which</declname>
          <defval>1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get force for dimensionless coord with harmonic order l and radial orer n Return all radial order values in Vector </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/SLGridMP2.H" line="200" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_s_l_grid_sph_1a9aae31bb1274acf5d3f75f4e55b9bc47" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double SLGridSph::get_pot</definition>
        <argsstring>(double x, int l, int n, int which=1)</argsstring>
        <name>get_pot</name>
        <qualifiedname>SLGridSph::get_pot</qualifiedname>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>l</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <param>
          <type>int</type>
          <declname>which</declname>
          <defval>1</defval>
        </param>
        <briefdescription>
<para>Get potential for dimensionless coord with harmonic order l and radial orer n. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/SLGridMP2.H" line="145" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_s_l_grid_sph_1aa7c51d6c6cb365ccec7a593c3fda299b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SLGridSph::get_pot</definition>
        <argsstring>(Eigen::MatrixXd &amp;tab, double x, int which=1)</argsstring>
        <name>get_pot</name>
        <qualifiedname>SLGridSph::get_pot</qualifiedname>
        <param>
          <type>Eigen::MatrixXd &amp;</type>
          <declname>tab</declname>
        </param>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>which</declname>
          <defval>1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get potential for dimensionless coord with harmonic order l and radial order n Return Matrix with first dim harmonic order and second dim radial order </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/SLGridMP2.H" line="205" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_s_l_grid_sph_1a3c349d263e7fc0a82e11fcdebd5bf727" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SLGridSph::get_pot</definition>
        <argsstring>(Eigen::VectorXd &amp;vec, double x, int l, int which=1)</argsstring>
        <name>get_pot</name>
        <qualifiedname>SLGridSph::get_pot</qualifiedname>
        <param>
          <type>Eigen::VectorXd &amp;</type>
          <declname>vec</declname>
        </param>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>l</declname>
        </param>
        <param>
          <type>int</type>
          <declname>which</declname>
          <defval>1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get potential for dimensionless coord with harmonic order l and radial orer n Return all radial order values in Vector </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/SLGridMP2.H" line="156" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_s_l_grid_sph_1a76d7cc921a09b190519bf76cad5b1798" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int SLGridSph::getLmax</definition>
        <argsstring>()</argsstring>
        <name>getLmax</name>
        <qualifiedname>SLGridSph::getLmax</qualifiedname>
        <briefdescription>
<para>Get expansion limits. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/SLGridMP2.H" line="225" column="7" bodyfile="/home/weinberg/Projects/EXP/include/SLGridMP2.H" bodystart="225" bodyend="225"/>
        <references refid="class_s_l_grid_sph_1a98f33cee4a3a93be7209e4b26f16b0d3" compoundref="_s_l_grid_m_p2_8_h" startline="33">lmax</references>
      </memberdef>
      <memberdef kind="function" id="class_s_l_grid_sph_1a510786e220835eb653d7c2c6a531feb5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int SLGridSph::getNmax</definition>
        <argsstring>()</argsstring>
        <name>getNmax</name>
        <qualifiedname>SLGridSph::getNmax</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/SLGridMP2.H" line="226" column="7" bodyfile="/home/weinberg/Projects/EXP/include/SLGridMP2.H" bodystart="226" bodyend="226"/>
        <references refid="class_s_l_grid_sph_1a821c02701e9a8e31b47af2d3eccf27b8" compoundref="_s_l_grid_m_p2_8_h" startline="33">nmax</references>
      </memberdef>
      <memberdef kind="function" id="class_s_l_grid_sph_1afe90870e2518f304449f805815c86432" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double SLGridSph::getRmax</definition>
        <argsstring>()</argsstring>
        <name>getRmax</name>
        <qualifiedname>SLGridSph::getRmax</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/SLGridMP2.H" line="220" column="10" bodyfile="/home/weinberg/Projects/EXP/include/SLGridMP2.H" bodystart="220" bodyend="220"/>
        <references refid="class_s_l_grid_sph_1a04985be5f03154610e1936eb535a0ec4" compoundref="_s_l_grid_m_p2_8_h" startline="34">rmax</references>
      </memberdef>
      <memberdef kind="function" id="class_s_l_grid_sph_1a8e6d4ecf525a519593b74105fb6e6e09" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double SLGridSph::getRmin</definition>
        <argsstring>()</argsstring>
        <name>getRmin</name>
        <qualifiedname>SLGridSph::getRmin</qualifiedname>
        <briefdescription>
<para>Get the current minimum and maximum radii for the expansion. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/SLGridMP2.H" line="219" column="10" bodyfile="/home/weinberg/Projects/EXP/include/SLGridMP2.H" bodystart="219" bodyend="219"/>
        <references refid="class_s_l_grid_sph_1aae736cf4583b1f351dccf33cfb2760c8" compoundref="_s_l_grid_m_p2_8_h" startline="34">rmin</references>
      </memberdef>
      <memberdef kind="function" id="class_s_l_grid_sph_1a6ee9d9a7235b0729623c24a3a36a3ec3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; Eigen::MatrixXd &gt;</type>
        <definition>std::vector&lt; Eigen::MatrixXd &gt; SLGridSph::orthoCheck</definition>
        <argsstring>(int knots=40)</argsstring>
        <name>orthoCheck</name>
        <qualifiedname>SLGridSph::orthoCheck</qualifiedname>
        <param>
          <type>int</type>
          <declname>knots</declname>
          <defval>40</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Compute the orthogonality of the basis by returning inner produce matrices </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/SLGridMP2.H" line="168" column="15"/>
      </memberdef>
      <memberdef kind="function" id="class_s_l_grid_sph_1abd551a1660dd7f05b08729c2f177c9a5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double SLGridSph::r_to_xi</definition>
        <argsstring>(double r)</argsstring>
        <name>r_to_xi</name>
        <qualifiedname>SLGridSph::r_to_xi</qualifiedname>
        <param>
          <type>double</type>
          <declname>r</declname>
        </param>
        <briefdescription>
<para>Map radial coordinate to nondimensional coordinate. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/SLGridMP2.H" line="135" column="10"/>
        <referencedby refid="class_sphere_s_l_1a490f65d960649770981d83d66d958435" compoundref="sphere_s_l_8_h" startline="62" endline="62">SphereSL::rb_max</referencedby>
        <referencedby refid="class_sphere_s_l_1a6f8a05e49cc970cbf590cd237ca3cd25" compoundref="sphere_s_l_8_h" startline="61" endline="61">SphereSL::rb_min</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_s_l_grid_sph_1a79f8158e72bc4b09de2ab9d52274eb2e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>SLGridSph::SLGridSph</definition>
        <argsstring>(std::shared_ptr&lt; SphericalModelTable &gt; mod, int lmax, int nmax, int numr, double rmin, double rmax, bool cache, int Cmap, double RMAP, std::string cachename=&quot;.slgrid_sph_cache&quot;, bool Verbose=false)</argsstring>
        <name>SLGridSph</name>
        <qualifiedname>SLGridSph::SLGridSph</qualifiedname>
        <param>
          <type>std::shared_ptr&lt; <ref refid="class_spherical_model_table" kindref="compound">SphericalModelTable</ref> &gt;</type>
          <declname>mod</declname>
        </param>
        <param>
          <type>int</type>
          <declname>lmax</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nmax</declname>
        </param>
        <param>
          <type>int</type>
          <declname>numr</declname>
        </param>
        <param>
          <type>double</type>
          <declname>rmin</declname>
        </param>
        <param>
          <type>double</type>
          <declname>rmax</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>cache</declname>
        </param>
        <param>
          <type>int</type>
          <declname>Cmap</declname>
        </param>
        <param>
          <type>double</type>
          <declname>RMAP</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>cachename</declname>
          <defval>&quot;.slgrid_sph_cache&quot;</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>Verbose</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Constructor with model table. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/SLGridMP2.H" line="105" column="3"/>
      </memberdef>
      <memberdef kind="function" id="class_s_l_grid_sph_1a8b4dd986c690720af87899c958a01f74" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>SLGridSph::SLGridSph</definition>
        <argsstring>(std::string cachename)</argsstring>
        <name>SLGridSph</name>
        <qualifiedname>SLGridSph::SLGridSph</qualifiedname>
        <param>
          <type>std::string</type>
          <declname>cachename</declname>
        </param>
        <briefdescription>
<para>Constructor (from cache file) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/SLGridMP2.H" line="120" column="3"/>
      </memberdef>
      <memberdef kind="function" id="class_s_l_grid_sph_1acd989ab899fd4a3cae0842a7b645506e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>SLGridSph::SLGridSph</definition>
        <argsstring>(std::string modelname, int lmax, int nmax, int numr, double rmin, double rmax, bool cache, int Cmap, double RMAP, int DIVERGE, double DFAC, std::string cachename=&quot;.slgrid_sph_cache&quot;, bool Verbose=false)</argsstring>
        <name>SLGridSph</name>
        <qualifiedname>SLGridSph::SLGridSph</qualifiedname>
        <param>
          <type>std::string</type>
          <declname>modelname</declname>
        </param>
        <param>
          <type>int</type>
          <declname>lmax</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nmax</declname>
        </param>
        <param>
          <type>int</type>
          <declname>numr</declname>
        </param>
        <param>
          <type>double</type>
          <declname>rmin</declname>
        </param>
        <param>
          <type>double</type>
          <declname>rmax</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>cache</declname>
        </param>
        <param>
          <type>int</type>
          <declname>Cmap</declname>
        </param>
        <param>
          <type>double</type>
          <declname>RMAP</declname>
        </param>
        <param>
          <type>int</type>
          <declname>DIVERGE</declname>
        </param>
        <param>
          <type>double</type>
          <declname>DFAC</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>cachename</declname>
          <defval>&quot;.slgrid_sph_cache&quot;</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>Verbose</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Constructor (uses file <emphasis>model_file_name</emphasis> for file) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/SLGridMP2.H" line="112" column="3"/>
      </memberdef>
      <memberdef kind="function" id="class_s_l_grid_sph_1a6faeba3e71cfc3f8995fbebdedce438f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double SLGridSph::xi_to_r</definition>
        <argsstring>(double x)</argsstring>
        <name>xi_to_r</name>
        <qualifiedname>SLGridSph::xi_to_r</qualifiedname>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
<para>Map nondimensional coordinate to radial coordinate. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/SLGridMP2.H" line="138" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_s_l_grid_sph_1a0447ca0bd5ccf6f1af8f34198a312ca1" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual SLGridSph::~SLGridSph</definition>
        <argsstring>()</argsstring>
        <name>~SLGridSph</name>
        <qualifiedname>SLGridSph::~SLGridSph</qualifiedname>
        <briefdescription>
<para>Destructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/SLGridMP2.H" line="124" column="11"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_s_l_grid_sph_1a0a2d442ec88e96e720b03d2d74626232" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::map&lt; std::string, std::string &gt;</type>
        <definition>static std::map&lt; std::string, std::string &gt; SLGridSph::cacheInfo</definition>
        <argsstring>(const std::string &amp;cachefile, bool verbose=true)</argsstring>
        <name>cacheInfo</name>
        <qualifiedname>SLGridSph::cacheInfo</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>cachefile</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>verbose</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get density for dimensionless coord with harmonic order l and radial orer n Return all radial order values in Vector Read and print the cache and return the header parameters as a map/dictionary </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/SLGridMP2.H" line="164" column="3"/>
      </memberdef>
      <memberdef kind="function" id="class_s_l_grid_sph_1a29d45462f080477ea497df50d5a25f9f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>YAML::Node</type>
        <definition>static YAML::Node SLGridSph::getHeader</definition>
        <argsstring>(const std::string &amp;cachefile)</argsstring>
        <name>getHeader</name>
        <qualifiedname>SLGridSph::getHeader</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>cachefile</declname>
        </param>
        <briefdescription>
<para>Read the cache and report parameters. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/SLGridMP2.H" line="127" column="21"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>! Spherical SL grid class </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/weinberg/Projects/EXP/include/SLGridMP2.H" line="28" column="1" bodyfile="/home/weinberg/Projects/EXP/include/SLGridMP2.H" bodystart="29" bodyend="228"/>
    <listofallmembers>
      <member refid="class_s_l_grid_sph_1ae31a5a0d0286e82a2897962f2be9f05f" prot="private" virt="non-virtual"><scope>SLGridSph</scope><name>bomb</name></member>
      <member refid="class_s_l_grid_sph_1ad8ae914daf3e01a12f79a8c0e65d71df" prot="private" virt="non-virtual"><scope>SLGridSph</scope><name>cache</name></member>
      <member refid="class_s_l_grid_sph_1a0a2d442ec88e96e720b03d2d74626232" prot="public" virt="non-virtual"><scope>SLGridSph</scope><name>cacheInfo</name></member>
      <member refid="class_s_l_grid_sph_1a3648c40afe4fa6c3771327496f7e7378" prot="private" virt="non-virtual"><scope>SLGridSph</scope><name>cmap</name></member>
      <member refid="class_s_l_grid_sph_1adc69631b7180c1696cfa4889a866ffcb" prot="private" virt="non-virtual"><scope>SLGridSph</scope><name>compute_table</name></member>
      <member refid="class_s_l_grid_sph_1ad1a0965f57c08b748f27ac6edf9963ff" prot="private" virt="non-virtual"><scope>SLGridSph</scope><name>compute_table_worker</name></member>
      <member refid="class_s_l_grid_sph_1a6b1dfc6e83f3f9181275a91013b6d2c2" prot="private" virt="non-virtual"><scope>SLGridSph</scope><name>d0</name></member>
      <member refid="class_s_l_grid_sph_1a3453326410450ada459541e2fa27653a" prot="public" virt="non-virtual"><scope>SLGridSph</scope><name>d_xi_to_r</name></member>
      <member refid="class_s_l_grid_sph_1ae699f8de2cd4982887712cc8797b2f56" prot="private" virt="non-virtual"><scope>SLGridSph</scope><name>default_cache</name></member>
      <member refid="class_s_l_grid_sph_1a54572f3f82e4145cadb176a4da4dc1cd" prot="private" virt="non-virtual"><scope>SLGridSph</scope><name>default_model</name></member>
      <member refid="class_s_l_grid_sph_1a187de697240f6e2ebf0c5fe89eda6deb" prot="private" virt="non-virtual"><scope>SLGridSph</scope><name>dfac</name></member>
      <member refid="class_s_l_grid_sph_1acd74b97ab84a983a9a32b9fc87aea8e7" prot="private" virt="non-virtual"><scope>SLGridSph</scope><name>diverge</name></member>
      <member refid="class_s_l_grid_sph_1a9d95ca862e68606aa3ae5dbc11a15511" prot="private" virt="non-virtual"><scope>SLGridSph</scope><name>dxi</name></member>
      <member refid="class_s_l_grid_sph_1a9aebc866a79fdb771d76c0c843649b32" prot="public" virt="non-virtual"><scope>SLGridSph</scope><name>eigenvalue</name></member>
      <member refid="class_s_l_grid_sph_1ae78ffa77c2d3a979c6b495e86bcaea08" prot="public" virt="non-virtual"><scope>SLGridSph</scope><name>get_dens</name></member>
      <member refid="class_s_l_grid_sph_1ac0a42f88f11bcf873f22f872713d4403" prot="public" virt="non-virtual"><scope>SLGridSph</scope><name>get_dens</name></member>
      <member refid="class_s_l_grid_sph_1afbf0043312e5c39d6ce2f634662e65d6" prot="public" virt="non-virtual"><scope>SLGridSph</scope><name>get_dens</name></member>
      <member refid="class_s_l_grid_sph_1a7f52a541599980c1b6b1510c031ba94f" prot="public" virt="non-virtual"><scope>SLGridSph</scope><name>get_force</name></member>
      <member refid="class_s_l_grid_sph_1a8b7e66262789b194108d9201658a0d18" prot="public" virt="non-virtual"><scope>SLGridSph</scope><name>get_force</name></member>
      <member refid="class_s_l_grid_sph_1a80b386ffdf810dab68fde482b5d69672" prot="public" virt="non-virtual"><scope>SLGridSph</scope><name>get_force</name></member>
      <member refid="class_s_l_grid_sph_1a9aae31bb1274acf5d3f75f4e55b9bc47" prot="public" virt="non-virtual"><scope>SLGridSph</scope><name>get_pot</name></member>
      <member refid="class_s_l_grid_sph_1a3c349d263e7fc0a82e11fcdebd5bf727" prot="public" virt="non-virtual"><scope>SLGridSph</scope><name>get_pot</name></member>
      <member refid="class_s_l_grid_sph_1aa7c51d6c6cb365ccec7a593c3fda299b" prot="public" virt="non-virtual"><scope>SLGridSph</scope><name>get_pot</name></member>
      <member refid="class_s_l_grid_sph_1a29d45462f080477ea497df50d5a25f9f" prot="public" virt="non-virtual"><scope>SLGridSph</scope><name>getHeader</name></member>
      <member refid="class_s_l_grid_sph_1a76d7cc921a09b190519bf76cad5b1798" prot="public" virt="non-virtual"><scope>SLGridSph</scope><name>getLmax</name></member>
      <member refid="class_s_l_grid_sph_1a510786e220835eb653d7c2c6a531feb5" prot="public" virt="non-virtual"><scope>SLGridSph</scope><name>getNmax</name></member>
      <member refid="class_s_l_grid_sph_1afe90870e2518f304449f805815c86432" prot="public" virt="non-virtual"><scope>SLGridSph</scope><name>getRmax</name></member>
      <member refid="class_s_l_grid_sph_1a8e6d4ecf525a519593b74105fb6e6e09" prot="public" virt="non-virtual"><scope>SLGridSph</scope><name>getRmin</name></member>
      <member refid="class_s_l_grid_sph_1a53064ba83592997af7ef9db2b4c3a168" prot="private" virt="non-virtual"><scope>SLGridSph</scope><name>init_table</name></member>
      <member refid="class_s_l_grid_sph_1ae86ad2c7a2f0aaca24c340654fe7905f" prot="private" virt="non-virtual"><scope>SLGridSph</scope><name>initialize</name></member>
      <member refid="class_s_l_grid_sph_1a98f33cee4a3a93be7209e4b26f16b0d3" prot="private" virt="non-virtual"><scope>SLGridSph</scope><name>lmax</name></member>
      <member refid="class_s_l_grid_sph_1a7936821e8dd19b7806d574a74ce3fdcc" prot="private" virt="non-virtual"><scope>SLGridSph</scope><name>model_file_name</name></member>
      <member refid="class_s_l_grid_sph_1a88680088d03b1513cd6b41d7fde37fed" prot="public" virt="non-virtual"><scope>SLGridSph</scope><name>mpi</name></member>
      <member refid="class_s_l_grid_sph_1a02f9febe228b8ab460b308aa8c5f3b33" prot="private" virt="non-virtual"><scope>SLGridSph</scope><name>mpi_buf</name></member>
      <member refid="class_s_l_grid_sph_1a1d02e85ec936ec5bfb3a53aee3fbbf8e" prot="private" virt="non-virtual"><scope>SLGridSph</scope><name>mpi_bufsz</name></member>
      <member refid="class_s_l_grid_sph_1a91105146d8a0da9dd88ca1ef3cbfbba4" prot="private" virt="non-virtual"><scope>SLGridSph</scope><name>mpi_myid</name></member>
      <member refid="class_s_l_grid_sph_1a2ce45d787ce5d7d38b45b758ff1d2ac8" prot="private" virt="non-virtual"><scope>SLGridSph</scope><name>mpi_numprocs</name></member>
      <member refid="class_s_l_grid_sph_1a77fa9c94eee0db659571fb651d648cfd" prot="private" virt="non-virtual"><scope>SLGridSph</scope><name>mpi_pack_table</name></member>
      <member refid="class_s_l_grid_sph_1a5ccb33849b3ad7c1b3b9e0f3b543749e" prot="private" virt="non-virtual"><scope>SLGridSph</scope><name>mpi_setup</name></member>
      <member refid="class_s_l_grid_sph_1a44b73c659f6150712bedd4c65bd73ad9" prot="private" virt="non-virtual"><scope>SLGridSph</scope><name>mpi_unpack_table</name></member>
      <member refid="class_s_l_grid_sph_1a821c02701e9a8e31b47af2d3eccf27b8" prot="private" virt="non-virtual"><scope>SLGridSph</scope><name>nmax</name></member>
      <member refid="class_s_l_grid_sph_1a360e31f364063db2236bb554a7b49939" prot="private" virt="non-virtual"><scope>SLGridSph</scope><name>numr</name></member>
      <member refid="class_s_l_grid_sph_1a6ee9d9a7235b0729623c24a3a36a3ec3" prot="public" virt="non-virtual"><scope>SLGridSph</scope><name>orthoCheck</name></member>
      <member refid="class_s_l_grid_sph_1a2ac57c8cff2acf0552982fd814489b96" prot="private" virt="non-virtual"><scope>SLGridSph</scope><name>p0</name></member>
      <member refid="class_s_l_grid_sph_1ae84ca6d8e6621023939681b7dad5e769" prot="private" virt="non-virtual"><scope>SLGridSph</scope><name>r</name></member>
      <member refid="class_s_l_grid_sph_1abd551a1660dd7f05b08729c2f177c9a5" prot="public" virt="non-virtual"><scope>SLGridSph</scope><name>r_to_xi</name></member>
      <member refid="class_s_l_grid_sph_1a8129e8ca1aecf9408f58d4f612524f4b" prot="private" virt="non-virtual"><scope>SLGridSph</scope><name>ReadH5Cache</name></member>
      <member refid="class_s_l_grid_sph_1a139f50426e685e271c7fac4dc2e6165a" prot="private" virt="non-virtual"><scope>SLGridSph</scope><name>rmap</name></member>
      <member refid="class_s_l_grid_sph_1a04985be5f03154610e1936eb535a0ec4" prot="private" virt="non-virtual"><scope>SLGridSph</scope><name>rmax</name></member>
      <member refid="class_s_l_grid_sph_1aae736cf4583b1f351dccf33cfb2760c8" prot="private" virt="non-virtual"><scope>SLGridSph</scope><name>rmin</name></member>
      <member refid="class_s_l_grid_sph_1a79f8158e72bc4b09de2ab9d52274eb2e" prot="public" virt="non-virtual"><scope>SLGridSph</scope><name>SLGridSph</name></member>
      <member refid="class_s_l_grid_sph_1acd989ab899fd4a3cae0842a7b645506e" prot="public" virt="non-virtual"><scope>SLGridSph</scope><name>SLGridSph</name></member>
      <member refid="class_s_l_grid_sph_1a8b4dd986c690720af87899c958a01f74" prot="public" virt="non-virtual"><scope>SLGridSph</scope><name>SLGridSph</name></member>
      <member refid="class_s_l_grid_sph_1a9989c0fc0f39b8834319582435aacb5a" prot="private" virt="non-virtual"><scope>SLGridSph</scope><name>sph_cache_name</name></member>
      <member refid="class_s_l_grid_sph_1af9ef477ea505753f1186beb8985c92fc" prot="private" virt="non-virtual"><scope>SLGridSph</scope><name>table</name></member>
      <member refid="class_s_l_grid_sph_1a2cd7f22c9725b46cc111468c8cc0e54b" prot="private" virt="non-virtual"><scope>SLGridSph</scope><name>table_ptr_1D</name></member>
      <member refid="class_s_l_grid_sph_1a348a4860961f860e95289c1003fa09f2" prot="private" virt="non-virtual"><scope>SLGridSph</scope><name>tbdbg</name></member>
      <member refid="class_s_l_grid_sph_1ae482fb3249a70db4b09bb599fd8e2d14" prot="private" virt="non-virtual"><scope>SLGridSph</scope><name>Version</name></member>
      <member refid="class_s_l_grid_sph_1aac80af79ab59895fb9e889270408da3a" prot="private" virt="non-virtual"><scope>SLGridSph</scope><name>WriteH5Cache</name></member>
      <member refid="class_s_l_grid_sph_1a13cdd52f3df7160a06e49fbb92c90d33" prot="private" virt="non-virtual"><scope>SLGridSph</scope><name>xi</name></member>
      <member refid="class_s_l_grid_sph_1a6faeba3e71cfc3f8995fbebdedce438f" prot="public" virt="non-virtual"><scope>SLGridSph</scope><name>xi_to_r</name></member>
      <member refid="class_s_l_grid_sph_1a3ea5affe28f119b873476f7546f6e21f" prot="private" virt="non-virtual"><scope>SLGridSph</scope><name>xmax</name></member>
      <member refid="class_s_l_grid_sph_1a3011eca1c0c798506f69ae81d5d74e22" prot="private" virt="non-virtual"><scope>SLGridSph</scope><name>xmin</name></member>
      <member refid="class_s_l_grid_sph_1a0447ca0bd5ccf6f1af8f34198a312ca1" prot="public" virt="virtual"><scope>SLGridSph</scope><name>~SLGridSph</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
