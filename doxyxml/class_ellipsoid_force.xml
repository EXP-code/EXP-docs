<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="class_ellipsoid_force" kind="class" language="C++" prot="public">
    <compoundname>EllipsoidForce</compoundname>
    <includes refid="_ellipsoid_force_8_h" local="no">EllipsoidForce.H</includes>
    <sectiondef kind="public-type">
      <memberdef kind="enum" id="class_ellipsoid_force_1a85cb3c851611f9a5dadbfcfa3a44e33c" prot="public" static="no" strong="no">
        <type></type>
        <name>BarType</name>
        <qualifiedname>EllipsoidForce::BarType</qualifiedname>
        <enumvalue id="class_ellipsoid_force_1a85cb3c851611f9a5dadbfcfa3a44e33ca84e8fea4a2ad4b12273a99a4583de446" prot="public">
          <name>powerlaw</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_ellipsoid_force_1a85cb3c851611f9a5dadbfcfa3a44e33caa6dfce566592264a9db6887e5b172566" prot="public">
          <name>ferrers</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_ellipsoid_force_1a85cb3c851611f9a5dadbfcfa3a44e33cac2e7417e5d2f67e5705fa4410bbce4d4" prot="public">
          <name>expon</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/utils/ICs/EllipsoidForce.H" line="50" column="3" bodyfile="/home/weinberg/Projects/EXP/utils/ICs/EllipsoidForce.H" bodystart="50" bodyend="50"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_ellipsoid_force_1aa08c9a1ab8f936a3b1f6a84a7272ac32" prot="private" static="no" mutable="no">
        <type>vector&lt; double &gt;</type>
        <definition>vector&lt;double&gt; EllipsoidForce::a</definition>
        <argsstring></argsstring>
        <name>a</name>
        <qualifiedname>EllipsoidForce::a</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/utils/ICs/EllipsoidForce.H" line="54" column="10" bodyfile="/home/weinberg/Projects/EXP/utils/ICs/EllipsoidForce.H" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_ellipsoid_force_1a36df456e74b9790499745d649c4b8c1d" prot="private" static="no" mutable="no">
        <type><ref refid="class_ellipsoid_force_1a85cb3c851611f9a5dadbfcfa3a44e33c" kindref="member">BarType</ref></type>
        <definition>BarType EllipsoidForce::bartype</definition>
        <argsstring></argsstring>
        <name>bartype</name>
        <qualifiedname>EllipsoidForce::bartype</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/utils/ICs/EllipsoidForce.H" line="56" column="11" bodyfile="/home/weinberg/Projects/EXP/utils/ICs/EllipsoidForce.H" bodystart="56" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_ellipsoid_force_1a81272de8e016f2f2be2b0bcfc874c223" prot="private" static="no" mutable="no">
        <type>vector&lt; double &gt;</type>
        <definition>vector&lt;double&gt; EllipsoidForce::dX</definition>
        <argsstring></argsstring>
        <name>dX</name>
        <qualifiedname>EllipsoidForce::dX</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/utils/ICs/EllipsoidForce.H" line="68" column="10" bodyfile="/home/weinberg/Projects/EXP/utils/ICs/EllipsoidForce.H" bodystart="68" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_ellipsoid_force_1a23972693c77d7108c28d7453a46f31ac" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="class_lege_quad" kindref="compound">LegeQuad</ref> &gt;</type>
        <definition>std::shared_ptr&lt;LegeQuad&gt; EllipsoidForce::gq</definition>
        <argsstring></argsstring>
        <name>gq</name>
        <qualifiedname>EllipsoidForce::gq</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/utils/ICs/EllipsoidForce.H" line="58" column="19" bodyfile="/home/weinberg/Projects/EXP/utils/ICs/EllipsoidForce.H" bodystart="58" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_ellipsoid_force_1accd0c55a8cb132fd1adc35d5681c4fd7" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="class_lege_quad" kindref="compound">LegeQuad</ref> &gt;</type>
        <definition>std::shared_ptr&lt;LegeQuad&gt; EllipsoidForce::gt</definition>
        <argsstring></argsstring>
        <name>gt</name>
        <qualifiedname>EllipsoidForce::gt</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/utils/ICs/EllipsoidForce.H" line="58" column="25" bodyfile="/home/weinberg/Projects/EXP/utils/ICs/EllipsoidForce.H" bodystart="58" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_ellipsoid_force_1a2ad1c934f94eb4ab1e5fb423be989393" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="class_lege_quad" kindref="compound">LegeQuad</ref> &gt;</type>
        <definition>std::shared_ptr&lt;LegeQuad&gt; EllipsoidForce::gz</definition>
        <argsstring></argsstring>
        <name>gz</name>
        <qualifiedname>EllipsoidForce::gz</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/utils/ICs/EllipsoidForce.H" line="58" column="22" bodyfile="/home/weinberg/Projects/EXP/utils/ICs/EllipsoidForce.H" bodystart="58" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_ellipsoid_force_1a0eba638deb6df34b1373545a8663e313" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double EllipsoidForce::ldr</definition>
        <argsstring></argsstring>
        <name>ldr</name>
        <qualifiedname>EllipsoidForce::ldr</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/utils/ICs/EllipsoidForce.H" line="63" column="22" bodyfile="/home/weinberg/Projects/EXP/utils/ICs/EllipsoidForce.H" bodystart="63" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_ellipsoid_force_1a6d1c8139fa11ddbd42f7f88da690698c" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double EllipsoidForce::lrmax</definition>
        <argsstring></argsstring>
        <name>lrmax</name>
        <qualifiedname>EllipsoidForce::lrmax</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/utils/ICs/EllipsoidForce.H" line="63" column="16" bodyfile="/home/weinberg/Projects/EXP/utils/ICs/EllipsoidForce.H" bodystart="63" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_ellipsoid_force_1a4567e38d084ab6ec22a051a3e22aaed9" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double EllipsoidForce::lrmin</definition>
        <argsstring></argsstring>
        <name>lrmin</name>
        <qualifiedname>EllipsoidForce::lrmin</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/utils/ICs/EllipsoidForce.H" line="63" column="10" bodyfile="/home/weinberg/Projects/EXP/utils/ICs/EllipsoidForce.H" bodystart="63" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_ellipsoid_force_1a689411849d9f025f586d9f06c0b220dd" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double EllipsoidForce::mass</definition>
        <argsstring></argsstring>
        <name>mass</name>
        <qualifiedname>EllipsoidForce::mass</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/utils/ICs/EllipsoidForce.H" line="55" column="10" bodyfile="/home/weinberg/Projects/EXP/utils/ICs/EllipsoidForce.H" bodystart="55" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_ellipsoid_force_1a718e3a7cf7980f0cb764ab12616f96a4" prot="private" static="no" mutable="no">
        <type>vector&lt; double &gt;</type>
        <definition>vector&lt;double&gt; EllipsoidForce::mm</definition>
        <argsstring></argsstring>
        <name>mm</name>
        <qualifiedname>EllipsoidForce::mm</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/utils/ICs/EllipsoidForce.H" line="62" column="13" bodyfile="/home/weinberg/Projects/EXP/utils/ICs/EllipsoidForce.H" bodystart="62" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_ellipsoid_force_1afd80d8b372cdae25498bb011846371f1" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int EllipsoidForce::N</definition>
        <argsstring></argsstring>
        <name>N</name>
        <qualifiedname>EllipsoidForce::N</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/utils/ICs/EllipsoidForce.H" line="60" column="16" bodyfile="/home/weinberg/Projects/EXP/utils/ICs/EllipsoidForce.H" bodystart="60" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_ellipsoid_force_1ad9d58ce422aa5faf1e3dd3efcb245ab7" prot="private" static="no" mutable="no">
        <type>vector&lt; int &gt;</type>
        <definition>vector&lt;int&gt; EllipsoidForce::ntab</definition>
        <argsstring></argsstring>
        <name>ntab</name>
        <qualifiedname>EllipsoidForce::ntab</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/utils/ICs/EllipsoidForce.H" line="67" column="10" bodyfile="/home/weinberg/Projects/EXP/utils/ICs/EllipsoidForce.H" bodystart="67" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_ellipsoid_force_1aa8fa477ca941c463835d5d29d8641fa3" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int EllipsoidForce::num</definition>
        <argsstring></argsstring>
        <name>num</name>
        <qualifiedname>EllipsoidForce::num</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/utils/ICs/EllipsoidForce.H" line="60" column="7" bodyfile="/home/weinberg/Projects/EXP/utils/ICs/EllipsoidForce.H" bodystart="60" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_ellipsoid_force_1ac090ea97bcb5b27be3fc0dfcee12c93e" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int EllipsoidForce::numr</definition>
        <argsstring></argsstring>
        <name>numr</name>
        <qualifiedname>EllipsoidForce::numr</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/utils/ICs/EllipsoidForce.H" line="60" column="11" bodyfile="/home/weinberg/Projects/EXP/utils/ICs/EllipsoidForce.H" bodystart="60" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_ellipsoid_force_1accbdb1be0c8442d1f6aaed133fb4856f" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double EllipsoidForce::param</definition>
        <argsstring></argsstring>
        <name>param</name>
        <qualifiedname>EllipsoidForce::param</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/utils/ICs/EllipsoidForce.H" line="55" column="15" bodyfile="/home/weinberg/Projects/EXP/utils/ICs/EllipsoidForce.H" bodystart="55" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_ellipsoid_force_1a3a42ee569536aef17aa2204c883f6beb" prot="private" static="no" mutable="no">
        <type>vector&lt; double &gt;</type>
        <definition>vector&lt;double&gt; EllipsoidForce::pp</definition>
        <argsstring></argsstring>
        <name>pp</name>
        <qualifiedname>EllipsoidForce::pp</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/utils/ICs/EllipsoidForce.H" line="62" column="16" bodyfile="/home/weinberg/Projects/EXP/utils/ICs/EllipsoidForce.H" bodystart="62" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_ellipsoid_force_1a3e4dbe4b126d907ee37dde4d7a4a2051" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool EllipsoidForce::quadr</definition>
        <argsstring></argsstring>
        <name>quadr</name>
        <qualifiedname>EllipsoidForce::quadr</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/utils/ICs/EllipsoidForce.H" line="70" column="8" bodyfile="/home/weinberg/Projects/EXP/utils/ICs/EllipsoidForce.H" bodystart="70" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_ellipsoid_force_1a47dc093c9a6f0b656ea28b8e094feb48" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double EllipsoidForce::rho0</definition>
        <argsstring></argsstring>
        <name>rho0</name>
        <qualifiedname>EllipsoidForce::rho0</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/utils/ICs/EllipsoidForce.H" line="55" column="21" bodyfile="/home/weinberg/Projects/EXP/utils/ICs/EllipsoidForce.H" bodystart="55" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_ellipsoid_force_1a525a4f889a4aabbcceca35d8b780efef" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double EllipsoidForce::rmax</definition>
        <argsstring></argsstring>
        <name>rmax</name>
        <qualifiedname>EllipsoidForce::rmax</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/utils/ICs/EllipsoidForce.H" line="55" column="31" bodyfile="/home/weinberg/Projects/EXP/utils/ICs/EllipsoidForce.H" bodystart="55" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_ellipsoid_force_1aff5954ab3dc083491905305605e6faa4" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double EllipsoidForce::rmin</definition>
        <argsstring></argsstring>
        <name>rmin</name>
        <qualifiedname>EllipsoidForce::rmin</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/utils/ICs/EllipsoidForce.H" line="55" column="26" bodyfile="/home/weinberg/Projects/EXP/utils/ICs/EllipsoidForce.H" bodystart="55" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_ellipsoid_force_1aff7af98e24b0b60c2355f4abb33f1732" prot="private" static="no" mutable="no">
        <type>vector&lt; double &gt;</type>
        <definition>vector&lt;double&gt; EllipsoidForce::rr</definition>
        <argsstring></argsstring>
        <name>rr</name>
        <qualifiedname>EllipsoidForce::rr</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/utils/ICs/EllipsoidForce.H" line="62" column="10" bodyfile="/home/weinberg/Projects/EXP/utils/ICs/EllipsoidForce.H" bodystart="62" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_ellipsoid_force_1adf42fdda12ee0c8ed288b9c30f032512" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double EllipsoidForce::rtmax</definition>
        <argsstring></argsstring>
        <name>rtmax</name>
        <qualifiedname>EllipsoidForce::rtmax</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/utils/ICs/EllipsoidForce.H" line="69" column="16" bodyfile="/home/weinberg/Projects/EXP/utils/ICs/EllipsoidForce.H" bodystart="69" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_ellipsoid_force_1ae07060728b825fe672bb2269a4ec1691" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double EllipsoidForce::rtmin</definition>
        <argsstring></argsstring>
        <name>rtmin</name>
        <qualifiedname>EllipsoidForce::rtmin</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/utils/ICs/EllipsoidForce.H" line="69" column="10" bodyfile="/home/weinberg/Projects/EXP/utils/ICs/EllipsoidForce.H" bodystart="69" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_ellipsoid_force_1a5190bd267391b0fcd1b8d2248651a03b" prot="private" static="no" mutable="no">
        <type>vector&lt; double &gt;</type>
        <definition>vector&lt;double&gt; EllipsoidForce::table</definition>
        <argsstring></argsstring>
        <name>table</name>
        <qualifiedname>EllipsoidForce::table</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/utils/ICs/EllipsoidForce.H" line="68" column="13" bodyfile="/home/weinberg/Projects/EXP/utils/ICs/EllipsoidForce.H" bodystart="68" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_ellipsoid_force_1aa1e7a78ae0b203ff8565ce5ddd8979b0" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool EllipsoidForce::tlog</definition>
        <argsstring></argsstring>
        <name>tlog</name>
        <qualifiedname>EllipsoidForce::tlog</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/utils/ICs/EllipsoidForce.H" line="70" column="20" bodyfile="/home/weinberg/Projects/EXP/utils/ICs/EllipsoidForce.H" bodystart="70" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_ellipsoid_force_1a44c1dc0cb03fc9815e471f7b7c6cc2ec" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool EllipsoidForce::tmade</definition>
        <argsstring></argsstring>
        <name>tmade</name>
        <qualifiedname>EllipsoidForce::tmade</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/utils/ICs/EllipsoidForce.H" line="70" column="14" bodyfile="/home/weinberg/Projects/EXP/utils/ICs/EllipsoidForce.H" bodystart="70" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_ellipsoid_force_1a414904096eebce2d3025f7886d7650dd" prot="private" static="no" mutable="no">
        <type>vector&lt; double &gt;</type>
        <definition>vector&lt;double&gt; EllipsoidForce::uu</definition>
        <argsstring></argsstring>
        <name>uu</name>
        <qualifiedname>EllipsoidForce::uu</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/utils/ICs/EllipsoidForce.H" line="62" column="19" bodyfile="/home/weinberg/Projects/EXP/utils/ICs/EllipsoidForce.H" bodystart="62" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="class_ellipsoid_force_1a0c0c92aa3e2020e84827ed87f329b76e" prot="public" static="yes" mutable="no">
        <type>string</type>
        <definition>string EllipsoidForce::cache_file</definition>
        <argsstring></argsstring>
        <name>cache_file</name>
        <qualifiedname>EllipsoidForce::cache_file</qualifiedname>
        <briefdescription>
<para>Interpolation grid cache name. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/utils/ICs/EllipsoidForce.H" line="85" column="17" bodyfile="/home/weinberg/Projects/EXP/utils/ICs/EllipsoidForce.H" bodystart="85" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_ellipsoid_force_1abf8cfe8d2e32db0761bd80e9f5427fa1" prot="public" static="yes" mutable="no">
        <type>double</type>
        <definition>double EllipsoidForce::dfrac</definition>
        <argsstring></argsstring>
        <name>dfrac</name>
        <qualifiedname>EllipsoidForce::dfrac</qualifiedname>
        <briefdescription>
<para>Fraction of grid step for numerical derivatives. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/utils/ICs/EllipsoidForce.H" line="82" column="17" bodyfile="/home/weinberg/Projects/EXP/utils/ICs/EllipsoidForce.H" bodystart="82" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_ellipsoid_force_1a455ba8fcaa1b3a8e95a31c2757a07abf" prot="public" static="yes" mutable="no">
        <type>int</type>
        <definition>int EllipsoidForce::n</definition>
        <argsstring></argsstring>
        <name>n</name>
        <qualifiedname>EllipsoidForce::n</qualifiedname>
        <briefdescription>
<para>Number of points for the monopole/quadrupole computation. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/utils/ICs/EllipsoidForce.H" line="79" column="14" bodyfile="/home/weinberg/Projects/EXP/utils/ICs/EllipsoidForce.H" bodystart="79" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-func">
      <memberdef kind="function" id="class_ellipsoid_force_1a29b6c722d878a52fe531e25276c3ef9c" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool EllipsoidForce::nindx</definition>
        <argsstring>(Eigen::Vector3d &amp;x, Eigen::Vector3i &amp;n)</argsstring>
        <name>nindx</name>
        <qualifiedname>EllipsoidForce::nindx</qualifiedname>
        <param>
          <type>Eigen::Vector3d &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>Eigen::Vector3i &amp;</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/utils/ICs/EllipsoidForce.H" line="71" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_ellipsoid_force_1a887b34511d45251c665526504913c981" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool EllipsoidForce::read_cache</definition>
        <argsstring>()</argsstring>
        <name>read_cache</name>
        <qualifiedname>EllipsoidForce::read_cache</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/utils/ICs/EllipsoidForce.H" line="74" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_ellipsoid_force_1a854dc7fcdf30ecab642b919edc74bd74" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double EllipsoidForce::solve</definition>
        <argsstring>(vector&lt; double &gt; x, double m2)</argsstring>
        <name>solve</name>
        <qualifiedname>EllipsoidForce::solve</qualifiedname>
        <param>
          <type>vector&lt; double &gt;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>double</type>
          <declname>m2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/utils/ICs/EllipsoidForce.H" line="65" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_ellipsoid_force_1a583ee6f260aa6b1c31c911786b7114b4" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void EllipsoidForce::write_cache</definition>
        <argsstring>()</argsstring>
        <name>write_cache</name>
        <qualifiedname>EllipsoidForce::write_cache</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/utils/ICs/EllipsoidForce.H" line="73" column="8"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_ellipsoid_force_1ab1dbb7ca5e59031860b5c91e24ef2f64" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>EllipsoidForce::EllipsoidForce</definition>
        <argsstring>(double a, double b, double c, double mass, double rmin, double rmax, BarType bartype, bool quad, double param=0.0, int num=100, int numr=100)</argsstring>
        <name>EllipsoidForce</name>
        <qualifiedname>EllipsoidForce::EllipsoidForce</qualifiedname>
        <param>
          <type>double</type>
          <declname>a</declname>
        </param>
        <param>
          <type>double</type>
          <declname>b</declname>
        </param>
        <param>
          <type>double</type>
          <declname>c</declname>
        </param>
        <param>
          <type>double</type>
          <declname>mass</declname>
        </param>
        <param>
          <type>double</type>
          <declname>rmin</declname>
        </param>
        <param>
          <type>double</type>
          <declname>rmax</declname>
        </param>
        <param>
          <type><ref refid="class_ellipsoid_force_1a85cb3c851611f9a5dadbfcfa3a44e33c" kindref="member">BarType</ref></type>
          <declname>bartype</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>quad</declname>
        </param>
        <param>
          <type>double</type>
          <declname>param</declname>
          <defval>0.0</defval>
        </param>
        <param>
          <type>int</type>
          <declname>num</declname>
          <defval>100</defval>
        </param>
        <param>
          <type>int</type>
          <declname>numr</declname>
          <defval>100</defval>
        </param>
        <briefdescription>
<para>Constructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/utils/ICs/EllipsoidForce.H" line="88" column="3"/>
      </memberdef>
      <memberdef kind="function" id="class_ellipsoid_force_1ad874304164b322fe14b3e4493f256b1b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double EllipsoidForce::getDens</definition>
        <argsstring>(vector&lt; double &gt; x)</argsstring>
        <name>getDens</name>
        <qualifiedname>EllipsoidForce::getDens</qualifiedname>
        <param>
          <type>vector&lt; double &gt;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
<para>Returns the density at position x. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/utils/ICs/EllipsoidForce.H" line="105" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_ellipsoid_force_1ab578edab3c3c4dbafdb2ccfd2f5285eb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double EllipsoidForce::getPotl</definition>
        <argsstring>(double r)</argsstring>
        <name>getPotl</name>
        <qualifiedname>EllipsoidForce::getPotl</qualifiedname>
        <param>
          <type>double</type>
          <declname>r</declname>
        </param>
        <briefdescription>
<para>Returns the radial part of quadrupole potential. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/utils/ICs/EllipsoidForce.H" line="102" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_ellipsoid_force_1a9253e11731aa1384877d61f795bf2870" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double EllipsoidForce::getPotl</definition>
        <argsstring>(vector&lt; double &gt; x)</argsstring>
        <name>getPotl</name>
        <qualifiedname>EllipsoidForce::getPotl</qualifiedname>
        <param>
          <type>vector&lt; double &gt;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
<para>Returns the potential at position x. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/utils/ICs/EllipsoidForce.H" line="99" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_ellipsoid_force_1acc1c5319988e189de2b06d05ca788a42" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double EllipsoidForce::getSurfDens</definition>
        <argsstring>(double r)</argsstring>
        <name>getSurfDens</name>
        <qualifiedname>EllipsoidForce::getSurfDens</qualifiedname>
        <param>
          <type>double</type>
          <declname>r</declname>
        </param>
        <briefdescription>
<para>Compute the surface density along the major axis. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/utils/ICs/EllipsoidForce.H" line="108" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_ellipsoid_force_1a26363e415fec56f09cfaecf8fd035263" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void EllipsoidForce::MakeTable</definition>
        <argsstring>(int n1, int n2, int n3)</argsstring>
        <name>MakeTable</name>
        <qualifiedname>EllipsoidForce::MakeTable</qualifiedname>
        <param>
          <type>int</type>
          <declname>n1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n2</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n3</declname>
        </param>
        <briefdescription>
<para>Tabulate the potential and force. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/utils/ICs/EllipsoidForce.H" line="120" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_ellipsoid_force_1aa42079cab4f8cd532947ac1ac3804fa2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void EllipsoidForce::MassInertia</definition>
        <argsstring>(double &amp;M, vector&lt; double &gt; &amp;I)</argsstring>
        <name>MassInertia</name>
        <qualifiedname>EllipsoidForce::MassInertia</qualifiedname>
        <param>
          <type>double &amp;</type>
          <declname>M</declname>
        </param>
        <param>
          <type>vector&lt; double &gt; &amp;</type>
          <declname>I</declname>
        </param>
        <briefdescription>
<para>Returns the total mass and moment of inertia vector. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/utils/ICs/EllipsoidForce.H" line="96" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_ellipsoid_force_1acef730680da86abf64b745775abd293f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool EllipsoidForce::quadpot</definition>
        <argsstring>(double r, double &amp;f, double &amp;fr, double &amp;M)</argsstring>
        <name>quadpot</name>
        <qualifiedname>EllipsoidForce::quadpot</qualifiedname>
        <param>
          <type>double</type>
          <declname>r</declname>
        </param>
        <param>
          <type>double &amp;</type>
          <declname>f</declname>
        </param>
        <param>
          <type>double &amp;</type>
          <declname>fr</declname>
        </param>
        <param>
          <type>double &amp;</type>
          <declname>M</declname>
        </param>
        <briefdescription>
<para>Get the quadrupole components at the radius r. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/utils/ICs/EllipsoidForce.H" line="117" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_ellipsoid_force_1a0439ca49090c9610d5c33840a54cf4cb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double EllipsoidForce::RhoBar</definition>
        <argsstring>(double r)</argsstring>
        <name>RhoBar</name>
        <qualifiedname>EllipsoidForce::RhoBar</qualifiedname>
        <param>
          <type>double</type>
          <declname>r</declname>
        </param>
        <briefdescription>
<para>Quadrupole bar density for radius r. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/utils/ICs/EllipsoidForce.H" line="111" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_ellipsoid_force_1a66357eba0662d46d5ce1f4f016e2cd77" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void EllipsoidForce::TableEval</definition>
        <argsstring>(vector&lt; double &gt; x, vector&lt; double &gt; &amp;forcepot)</argsstring>
        <name>TableEval</name>
        <qualifiedname>EllipsoidForce::TableEval</qualifiedname>
        <param>
          <type>vector&lt; double &gt;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>vector&lt; double &gt; &amp;</type>
          <declname>forcepot</declname>
        </param>
        <briefdescription>
<para>Evaluate the force (indices 0,1,2) potential (index 3) on the table. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/utils/ICs/EllipsoidForce.H" line="123" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_ellipsoid_force_1a9437c95881b78c60412c6b42c4fc1aca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double EllipsoidForce::U22</definition>
        <argsstring>(double r)</argsstring>
        <name>U22</name>
        <qualifiedname>EllipsoidForce::U22</qualifiedname>
        <param>
          <type>double</type>
          <declname>r</declname>
        </param>
        <briefdescription>
<para>Quadrupole potential term for radius r. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/utils/ICs/EllipsoidForce.H" line="114" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_ellipsoid_force_1a120074a67c9ab1b47c6a05f1cd93c450" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>EllipsoidForce::~EllipsoidForce</definition>
        <argsstring>()</argsstring>
        <name>~EllipsoidForce</name>
        <qualifiedname>EllipsoidForce::~EllipsoidForce</qualifiedname>
        <briefdescription>
<para>Destructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/utils/ICs/EllipsoidForce.H" line="93" column="3"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Defines potential and force for ellipsoid models</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>a</parametername>
</parameternamelist>
<parameterdescription>
<para>is the major axis </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>b</parametername>
</parameternamelist>
<parameterdescription>
<para>is the submajor (middle) axis </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>c</parametername>
</parameternamelist>
<parameterdescription>
<para>is the minor axis </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mass</parametername>
</parameternamelist>
<parameterdescription>
<para>is the total mass for the ellipsoid </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>num</parametername>
</parameternamelist>
<parameterdescription>
<para>is the number of integration knots </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>numr</parametername>
</parameternamelist>
<parameterdescription>
<para>is the number of grid points in the radial table</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>{Mathematics}</para>
</simplesect>
Internal potential has the form (Chandra pg. 52, eqn. 93)  <formula id="101">\[
V = \pi G a_1 a_2 a_3 \int^\infty_0\frac{du}{\Delta}
\left[\Psi(1) - \Psi(m^2(u))\right]
\]</formula> where  <formula id="102">\[
m^2(u) = \sum_{i=1}^3\frac{x_i^2}{a_i^2 + u}
\]</formula> and  <formula id="103">\[
\Psi(m^2) = \int_1^{m^2} dm^2\,\rho(m^2).
\]</formula></para>
<para>The external potential has the form (Cha ndra pg. 51, eqn. 89)  <formula id="104">\[
V = \pi G a_1 a_2 a_3 \int^\infty_\lambda\frac{du}{\Delta}
\left[\Psi(1) - \Psi(m^2(u))\right].
\]</formula> </para>
    </detaileddescription>
    <location file="/home/weinberg/Projects/EXP/utils/ICs/EllipsoidForce.H" line="46" column="1" bodyfile="/home/weinberg/Projects/EXP/utils/ICs/EllipsoidForce.H" bodystart="47" bodyend="124"/>
    <listofallmembers>
      <member refid="class_ellipsoid_force_1aa08c9a1ab8f936a3b1f6a84a7272ac32" prot="private" virt="non-virtual"><scope>EllipsoidForce</scope><name>a</name></member>
      <member refid="class_ellipsoid_force_1a85cb3c851611f9a5dadbfcfa3a44e33c" prot="public" virt="non-virtual"><scope>EllipsoidForce</scope><name>BarType</name></member>
      <member refid="class_ellipsoid_force_1a36df456e74b9790499745d649c4b8c1d" prot="private" virt="non-virtual"><scope>EllipsoidForce</scope><name>bartype</name></member>
      <member refid="class_ellipsoid_force_1a0c0c92aa3e2020e84827ed87f329b76e" prot="public" virt="non-virtual"><scope>EllipsoidForce</scope><name>cache_file</name></member>
      <member refid="class_ellipsoid_force_1abf8cfe8d2e32db0761bd80e9f5427fa1" prot="public" virt="non-virtual"><scope>EllipsoidForce</scope><name>dfrac</name></member>
      <member refid="class_ellipsoid_force_1a81272de8e016f2f2be2b0bcfc874c223" prot="private" virt="non-virtual"><scope>EllipsoidForce</scope><name>dX</name></member>
      <member refid="class_ellipsoid_force_1ab1dbb7ca5e59031860b5c91e24ef2f64" prot="public" virt="non-virtual"><scope>EllipsoidForce</scope><name>EllipsoidForce</name></member>
      <member refid="class_ellipsoid_force_1a85cb3c851611f9a5dadbfcfa3a44e33cac2e7417e5d2f67e5705fa4410bbce4d4" prot="public" virt="non-virtual"><scope>EllipsoidForce</scope><name>expon</name></member>
      <member refid="class_ellipsoid_force_1a85cb3c851611f9a5dadbfcfa3a44e33caa6dfce566592264a9db6887e5b172566" prot="public" virt="non-virtual"><scope>EllipsoidForce</scope><name>ferrers</name></member>
      <member refid="class_ellipsoid_force_1ad874304164b322fe14b3e4493f256b1b" prot="public" virt="non-virtual"><scope>EllipsoidForce</scope><name>getDens</name></member>
      <member refid="class_ellipsoid_force_1a9253e11731aa1384877d61f795bf2870" prot="public" virt="non-virtual"><scope>EllipsoidForce</scope><name>getPotl</name></member>
      <member refid="class_ellipsoid_force_1ab578edab3c3c4dbafdb2ccfd2f5285eb" prot="public" virt="non-virtual"><scope>EllipsoidForce</scope><name>getPotl</name></member>
      <member refid="class_ellipsoid_force_1acc1c5319988e189de2b06d05ca788a42" prot="public" virt="non-virtual"><scope>EllipsoidForce</scope><name>getSurfDens</name></member>
      <member refid="class_ellipsoid_force_1a23972693c77d7108c28d7453a46f31ac" prot="private" virt="non-virtual"><scope>EllipsoidForce</scope><name>gq</name></member>
      <member refid="class_ellipsoid_force_1accd0c55a8cb132fd1adc35d5681c4fd7" prot="private" virt="non-virtual"><scope>EllipsoidForce</scope><name>gt</name></member>
      <member refid="class_ellipsoid_force_1a2ad1c934f94eb4ab1e5fb423be989393" prot="private" virt="non-virtual"><scope>EllipsoidForce</scope><name>gz</name></member>
      <member refid="class_ellipsoid_force_1a0eba638deb6df34b1373545a8663e313" prot="private" virt="non-virtual"><scope>EllipsoidForce</scope><name>ldr</name></member>
      <member refid="class_ellipsoid_force_1a6d1c8139fa11ddbd42f7f88da690698c" prot="private" virt="non-virtual"><scope>EllipsoidForce</scope><name>lrmax</name></member>
      <member refid="class_ellipsoid_force_1a4567e38d084ab6ec22a051a3e22aaed9" prot="private" virt="non-virtual"><scope>EllipsoidForce</scope><name>lrmin</name></member>
      <member refid="class_ellipsoid_force_1a26363e415fec56f09cfaecf8fd035263" prot="public" virt="non-virtual"><scope>EllipsoidForce</scope><name>MakeTable</name></member>
      <member refid="class_ellipsoid_force_1a689411849d9f025f586d9f06c0b220dd" prot="private" virt="non-virtual"><scope>EllipsoidForce</scope><name>mass</name></member>
      <member refid="class_ellipsoid_force_1aa42079cab4f8cd532947ac1ac3804fa2" prot="public" virt="non-virtual"><scope>EllipsoidForce</scope><name>MassInertia</name></member>
      <member refid="class_ellipsoid_force_1a718e3a7cf7980f0cb764ab12616f96a4" prot="private" virt="non-virtual"><scope>EllipsoidForce</scope><name>mm</name></member>
      <member refid="class_ellipsoid_force_1afd80d8b372cdae25498bb011846371f1" prot="private" virt="non-virtual"><scope>EllipsoidForce</scope><name>N</name></member>
      <member refid="class_ellipsoid_force_1a455ba8fcaa1b3a8e95a31c2757a07abf" prot="public" virt="non-virtual"><scope>EllipsoidForce</scope><name>n</name></member>
      <member refid="class_ellipsoid_force_1a29b6c722d878a52fe531e25276c3ef9c" prot="private" virt="non-virtual"><scope>EllipsoidForce</scope><name>nindx</name></member>
      <member refid="class_ellipsoid_force_1ad9d58ce422aa5faf1e3dd3efcb245ab7" prot="private" virt="non-virtual"><scope>EllipsoidForce</scope><name>ntab</name></member>
      <member refid="class_ellipsoid_force_1aa8fa477ca941c463835d5d29d8641fa3" prot="private" virt="non-virtual"><scope>EllipsoidForce</scope><name>num</name></member>
      <member refid="class_ellipsoid_force_1ac090ea97bcb5b27be3fc0dfcee12c93e" prot="private" virt="non-virtual"><scope>EllipsoidForce</scope><name>numr</name></member>
      <member refid="class_ellipsoid_force_1accbdb1be0c8442d1f6aaed133fb4856f" prot="private" virt="non-virtual"><scope>EllipsoidForce</scope><name>param</name></member>
      <member refid="class_ellipsoid_force_1a85cb3c851611f9a5dadbfcfa3a44e33ca84e8fea4a2ad4b12273a99a4583de446" prot="public" virt="non-virtual"><scope>EllipsoidForce</scope><name>powerlaw</name></member>
      <member refid="class_ellipsoid_force_1a3a42ee569536aef17aa2204c883f6beb" prot="private" virt="non-virtual"><scope>EllipsoidForce</scope><name>pp</name></member>
      <member refid="class_ellipsoid_force_1acef730680da86abf64b745775abd293f" prot="public" virt="non-virtual"><scope>EllipsoidForce</scope><name>quadpot</name></member>
      <member refid="class_ellipsoid_force_1a3e4dbe4b126d907ee37dde4d7a4a2051" prot="private" virt="non-virtual"><scope>EllipsoidForce</scope><name>quadr</name></member>
      <member refid="class_ellipsoid_force_1a887b34511d45251c665526504913c981" prot="private" virt="non-virtual"><scope>EllipsoidForce</scope><name>read_cache</name></member>
      <member refid="class_ellipsoid_force_1a47dc093c9a6f0b656ea28b8e094feb48" prot="private" virt="non-virtual"><scope>EllipsoidForce</scope><name>rho0</name></member>
      <member refid="class_ellipsoid_force_1a0439ca49090c9610d5c33840a54cf4cb" prot="public" virt="non-virtual"><scope>EllipsoidForce</scope><name>RhoBar</name></member>
      <member refid="class_ellipsoid_force_1a525a4f889a4aabbcceca35d8b780efef" prot="private" virt="non-virtual"><scope>EllipsoidForce</scope><name>rmax</name></member>
      <member refid="class_ellipsoid_force_1aff5954ab3dc083491905305605e6faa4" prot="private" virt="non-virtual"><scope>EllipsoidForce</scope><name>rmin</name></member>
      <member refid="class_ellipsoid_force_1aff7af98e24b0b60c2355f4abb33f1732" prot="private" virt="non-virtual"><scope>EllipsoidForce</scope><name>rr</name></member>
      <member refid="class_ellipsoid_force_1adf42fdda12ee0c8ed288b9c30f032512" prot="private" virt="non-virtual"><scope>EllipsoidForce</scope><name>rtmax</name></member>
      <member refid="class_ellipsoid_force_1ae07060728b825fe672bb2269a4ec1691" prot="private" virt="non-virtual"><scope>EllipsoidForce</scope><name>rtmin</name></member>
      <member refid="class_ellipsoid_force_1a854dc7fcdf30ecab642b919edc74bd74" prot="private" virt="non-virtual"><scope>EllipsoidForce</scope><name>solve</name></member>
      <member refid="class_ellipsoid_force_1a5190bd267391b0fcd1b8d2248651a03b" prot="private" virt="non-virtual"><scope>EllipsoidForce</scope><name>table</name></member>
      <member refid="class_ellipsoid_force_1a66357eba0662d46d5ce1f4f016e2cd77" prot="public" virt="non-virtual"><scope>EllipsoidForce</scope><name>TableEval</name></member>
      <member refid="class_ellipsoid_force_1aa1e7a78ae0b203ff8565ce5ddd8979b0" prot="private" virt="non-virtual"><scope>EllipsoidForce</scope><name>tlog</name></member>
      <member refid="class_ellipsoid_force_1a44c1dc0cb03fc9815e471f7b7c6cc2ec" prot="private" virt="non-virtual"><scope>EllipsoidForce</scope><name>tmade</name></member>
      <member refid="class_ellipsoid_force_1a9437c95881b78c60412c6b42c4fc1aca" prot="public" virt="non-virtual"><scope>EllipsoidForce</scope><name>U22</name></member>
      <member refid="class_ellipsoid_force_1a414904096eebce2d3025f7886d7650dd" prot="private" virt="non-virtual"><scope>EllipsoidForce</scope><name>uu</name></member>
      <member refid="class_ellipsoid_force_1a583ee6f260aa6b1c31c911786b7114b4" prot="private" virt="non-virtual"><scope>EllipsoidForce</scope><name>write_cache</name></member>
      <member refid="class_ellipsoid_force_1a120074a67c9ab1b47c6a05f1cd93c450" prot="public" virt="non-virtual"><scope>EllipsoidForce</scope><name>~EllipsoidForce</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
