<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="class_emp_cyl_s_l_1_1_axi_disk" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>EmpCylSL::AxiDisk</compoundname>
    <derivedcompoundref refid="class_double_exponential" prot="public" virt="non-virtual">DoubleExponential</derivedcompoundref>
    <derivedcompoundref refid="class_exponential" prot="public" virt="non-virtual">Exponential</derivedcompoundref>
    <derivedcompoundref refid="class_f_e_e_d" prot="public" virt="non-virtual">FEED</derivedcompoundref>
    <derivedcompoundref refid="class_ferrers" prot="public" virt="non-virtual">Ferrers</derivedcompoundref>
    <derivedcompoundref refid="class_m_ndisk" prot="public" virt="non-virtual">MNdisk</derivedcompoundref>
    <derivedcompoundref refid="class_py_model" prot="public" virt="non-virtual">PyModel</derivedcompoundref>
    <derivedcompoundref refid="class_truncated" prot="public" virt="non-virtual">Truncated</derivedcompoundref>
    <derivedcompoundref refid="classdiskbulge" prot="public" virt="non-virtual">diskbulge</derivedcompoundref>
    <includes refid="_emp_cyl_s_l_8_h" local="no">EmpCylSL.H</includes>
    <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="class_emp_cyl_s_l_1_1_axi_disk_1a9f5ac6ec69ca06b68d48b23b6c8c034f" prot="protected" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string EmpCylSL::AxiDisk::ID</definition>
        <argsstring></argsstring>
        <name>ID</name>
        <qualifiedname>EmpCylSL::AxiDisk::ID</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/EmpCylSL.H" line="366" column="17" bodyfile="/home/weinberg/Projects/EXP/include/EmpCylSL.H" bodystart="366" bodyend="-1"/>
        <referencedby refid="class_emp_cyl_s_l_1_1_axi_disk_1ab1aa18251d8ad3196952f490dde2b6cb" compoundref="_emp_cyl_s_l_8_h" startline="379" endline="379">getID</referencedby>
        <referencedby refid="class_truncated_1af66d8a73dd37e3a7b951c484146f12f0" compoundref="_disk_models_8_h" startline="211" endline="217">Truncated::Truncated</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_emp_cyl_s_l_1_1_axi_disk_1ad8a0011315ce0798c2426813c29cf2ed" prot="protected" static="no" mutable="no">
        <type>double</type>
        <definition>double EmpCylSL::AxiDisk::M</definition>
        <argsstring></argsstring>
        <name>M</name>
        <qualifiedname>EmpCylSL::AxiDisk::M</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/EmpCylSL.H" line="368" column="12" bodyfile="/home/weinberg/Projects/EXP/include/EmpCylSL.H" bodystart="368" bodyend="-1"/>
        <referencedby refid="class_emp_cyl_s_l_1_1_axi_disk_1af9114d56b03e52a9a939b091d44f191f" compoundref="_emp_cyl_s_l_8_h" startline="382" endline="382">getMass</referencedby>
        <referencedby refid="class_f_e_e_d_1a4cdb62eae2ff9a16050f089835666e99" compoundref="_disk_models_8_h" startline="43" endline="73">FEED::operator()</referencedby>
        <referencedby refid="class_exponential_1a9d5b044bf0435207b4cde747a62663de" compoundref="_disk_models_8_h" startline="134" endline="138">Exponential::operator()</referencedby>
        <referencedby refid="class_double_exponential_1af349fa39100fae66fe0a70f8df8f1ce8" compoundref="_disk_models_8_h" startline="160" endline="169">DoubleExponential::operator()</referencedby>
        <referencedby refid="class_m_ndisk_1ae3af9cb061a40b31dec7486ca24c3fbe" compoundref="_disk_models_8_h" startline="190" endline="196">MNdisk::operator()</referencedby>
        <referencedby refid="classdiskbulge_1afbaa683e3b914246ebf78aa03cfc9fdc" compoundref="_disk_models_8_h" startline="244" endline="254">diskbulge::operator()</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_emp_cyl_s_l_1_1_axi_disk_1ae117d1cc1fbe5e503b751accd64c3d1e" prot="protected" static="no" mutable="no">
        <type>std::vector&lt; double &gt;</type>
        <definition>std::vector&lt;double&gt; EmpCylSL::AxiDisk::params</definition>
        <argsstring></argsstring>
        <name>params</name>
        <qualifiedname>EmpCylSL::AxiDisk::params</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/EmpCylSL.H" line="367" column="17" bodyfile="/home/weinberg/Projects/EXP/include/EmpCylSL.H" bodystart="367" bodyend="-1"/>
        <referencedby refid="classdiskbulge_1a4ed5451ebb1a5251ddd071a0ef2a80c4" compoundref="_disk_models_8_h" startline="235" endline="242">diskbulge::diskbulge</referencedby>
        <referencedby refid="class_double_exponential_1a71e0a47f9c67a92c51dcefaeafab33a8" compoundref="_disk_models_8_h" startline="150" endline="158">DoubleExponential::DoubleExponential</referencedby>
        <referencedby refid="class_exponential_1af4ced1db8ef741a0ad657bbbd86f847f" compoundref="_disk_models_8_h" startline="127" endline="132">Exponential::Exponential</referencedby>
        <referencedby refid="class_f_e_e_d_1a665cdaf1a2e9f4df26004b4b8b80c1e6" compoundref="_disk_models_8_h" startline="32" endline="41">FEED::FEED</referencedby>
        <referencedby refid="class_ferrers_1a42af48bbff4161ced7cc5c7e7be8729b" compoundref="_disk_models_8_h" startline="87" endline="93">Ferrers::Ferrers</referencedby>
        <referencedby refid="class_emp_cyl_s_l_1_1_axi_disk_1a15ec720689676ef218d343bffdc86c2a" compoundref="_emp_cyl_s_l_8_h" startline="385" endline="385">getParams</referencedby>
        <referencedby refid="class_m_ndisk_1a4a9fb4f3d860c03e500f35a4979d6179" compoundref="_disk_models_8_h" startline="183" endline="188">MNdisk::MNdisk</referencedby>
        <referencedby refid="class_truncated_1af66d8a73dd37e3a7b951c484146f12f0" compoundref="_disk_models_8_h" startline="211" endline="217">Truncated::Truncated</referencedby>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_emp_cyl_s_l_1_1_axi_disk_1a47284137e24ca113e6250992a26d5920" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>EmpCylSL::AxiDisk::AxiDisk</definition>
        <argsstring>(double M=1, std::string id=&quot;AxiDisk&quot;)</argsstring>
        <name>AxiDisk</name>
        <qualifiedname>EmpCylSL::AxiDisk::AxiDisk</qualifiedname>
        <param>
          <type>double</type>
          <declname>M</declname>
          <defval>1</defval>
        </param>
        <param>
          <type>std::string</type>
          <declname>id</declname>
          <defval>&quot;AxiDisk&quot;</defval>
        </param>
        <briefdescription>
<para>Constructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/EmpCylSL.H" line="373" column="5" bodyfile="/home/weinberg/Projects/EXP/include/EmpCylSL.H" bodystart="373" bodyend="373"/>
      </memberdef>
      <memberdef kind="function" id="class_emp_cyl_s_l_1_1_axi_disk_1ab1aa18251d8ad3196952f490dde2b6cb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string EmpCylSL::AxiDisk::getID</definition>
        <argsstring>()</argsstring>
        <name>getID</name>
        <qualifiedname>EmpCylSL::AxiDisk::getID</qualifiedname>
        <briefdescription>
<para>Get ID. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/EmpCylSL.H" line="379" column="17" bodyfile="/home/weinberg/Projects/EXP/include/EmpCylSL.H" bodystart="379" bodyend="379"/>
        <references refid="class_emp_cyl_s_l_1_1_axi_disk_1a9f5ac6ec69ca06b68d48b23b6c8c034f" compoundref="_emp_cyl_s_l_8_h" startline="366">ID</references>
      </memberdef>
      <memberdef kind="function" id="class_emp_cyl_s_l_1_1_axi_disk_1af9114d56b03e52a9a939b091d44f191f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int EmpCylSL::AxiDisk::getMass</definition>
        <argsstring>()</argsstring>
        <name>getMass</name>
        <qualifiedname>EmpCylSL::AxiDisk::getMass</qualifiedname>
        <briefdescription>
<para>Get Mass. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/EmpCylSL.H" line="382" column="9" bodyfile="/home/weinberg/Projects/EXP/include/EmpCylSL.H" bodystart="382" bodyend="382"/>
        <references refid="class_emp_cyl_s_l_1_1_axi_disk_1ad8a0011315ce0798c2426813c29cf2ed" compoundref="_emp_cyl_s_l_8_h" startline="368">M</references>
      </memberdef>
      <memberdef kind="function" id="class_emp_cyl_s_l_1_1_axi_disk_1a15ec720689676ef218d343bffdc86c2a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::vector&lt; double &gt;</type>
        <definition>std::vector&lt; double &gt; EmpCylSL::AxiDisk::getParams</definition>
        <argsstring>()</argsstring>
        <name>getParams</name>
        <qualifiedname>EmpCylSL::AxiDisk::getParams</qualifiedname>
        <briefdescription>
<para>Get parameters. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/EmpCylSL.H" line="385" column="17" bodyfile="/home/weinberg/Projects/EXP/include/EmpCylSL.H" bodystart="385" bodyend="385"/>
        <references refid="class_emp_cyl_s_l_1_1_axi_disk_1ae117d1cc1fbe5e503b751accd64c3d1e" compoundref="_emp_cyl_s_l_8_h" startline="367">params</references>
      </memberdef>
      <memberdef kind="function" id="class_emp_cyl_s_l_1_1_axi_disk_1a1ed84b13e59c6571fd49aeb90c452675" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>double</type>
        <definition>virtual double EmpCylSL::AxiDisk::operator()</definition>
        <argsstring>(double R, double z, double phi=0.)=0</argsstring>
        <name>operator()</name>
        <qualifiedname>EmpCylSL::AxiDisk::operator()</qualifiedname>
        <reimplementedby refid="class_f_e_e_d_1a4cdb62eae2ff9a16050f089835666e99">operator()</reimplementedby>
        <reimplementedby refid="class_ferrers_1a5fd4901f5cf39ea89b0b1dead97d998f">operator()</reimplementedby>
        <reimplementedby refid="class_exponential_1a9d5b044bf0435207b4cde747a62663de">operator()</reimplementedby>
        <reimplementedby refid="class_double_exponential_1af349fa39100fae66fe0a70f8df8f1ce8">operator()</reimplementedby>
        <reimplementedby refid="class_m_ndisk_1ae3af9cb061a40b31dec7486ca24c3fbe">operator()</reimplementedby>
        <reimplementedby refid="class_truncated_1aaf3541affbceec441a258be79354963b">operator()</reimplementedby>
        <reimplementedby refid="classdiskbulge_1afbaa683e3b914246ebf78aa03cfc9fdc">operator()</reimplementedby>
        <reimplementedby refid="class_py_model_1a565a4d630b7c6bab5f5c2e1de9b46959">operator()</reimplementedby>
        <param>
          <type>double</type>
          <declname>R</declname>
        </param>
        <param>
          <type>double</type>
          <declname>z</declname>
        </param>
        <param>
          <type>double</type>
          <declname>phi</declname>
          <defval>0.</defval>
        </param>
        <briefdescription>
<para>Density function. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/EmpCylSL.H" line="376" column="20"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Axisymmetric disk density function for deprojection. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>DoubleExponential</label>
        <link refid="class_double_exponential"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>EmpCylSL::AxiDisk</label>
        <link refid="class_emp_cyl_s_l_1_1_axi_disk"/>
      </node>
      <node id="3">
        <label>Exponential</label>
        <link refid="class_exponential"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>FEED</label>
        <link refid="class_f_e_e_d"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>Ferrers</label>
        <link refid="class_ferrers"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>MNdisk</label>
        <link refid="class_m_ndisk"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7">
        <label>PyModel</label>
        <link refid="class_py_model"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8">
        <label>Truncated</label>
        <link refid="class_truncated"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="9">
        <label>diskbulge</label>
        <link refid="classdiskbulge"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <location file="/home/weinberg/Projects/EXP/include/EmpCylSL.H" line="363" column="3" bodyfile="/home/weinberg/Projects/EXP/include/EmpCylSL.H" bodystart="364" bodyend="386"/>
    <listofallmembers>
      <member refid="class_emp_cyl_s_l_1_1_axi_disk_1a47284137e24ca113e6250992a26d5920" prot="public" virt="non-virtual"><scope>EmpCylSL::AxiDisk</scope><name>AxiDisk</name></member>
      <member refid="class_emp_cyl_s_l_1_1_axi_disk_1ab1aa18251d8ad3196952f490dde2b6cb" prot="public" virt="non-virtual"><scope>EmpCylSL::AxiDisk</scope><name>getID</name></member>
      <member refid="class_emp_cyl_s_l_1_1_axi_disk_1af9114d56b03e52a9a939b091d44f191f" prot="public" virt="non-virtual"><scope>EmpCylSL::AxiDisk</scope><name>getMass</name></member>
      <member refid="class_emp_cyl_s_l_1_1_axi_disk_1a15ec720689676ef218d343bffdc86c2a" prot="public" virt="non-virtual"><scope>EmpCylSL::AxiDisk</scope><name>getParams</name></member>
      <member refid="class_emp_cyl_s_l_1_1_axi_disk_1a9f5ac6ec69ca06b68d48b23b6c8c034f" prot="protected" virt="non-virtual"><scope>EmpCylSL::AxiDisk</scope><name>ID</name></member>
      <member refid="class_emp_cyl_s_l_1_1_axi_disk_1ad8a0011315ce0798c2426813c29cf2ed" prot="protected" virt="non-virtual"><scope>EmpCylSL::AxiDisk</scope><name>M</name></member>
      <member refid="class_emp_cyl_s_l_1_1_axi_disk_1a1ed84b13e59c6571fd49aeb90c452675" prot="public" virt="pure-virtual"><scope>EmpCylSL::AxiDisk</scope><name>operator()</name></member>
      <member refid="class_emp_cyl_s_l_1_1_axi_disk_1ae117d1cc1fbe5e503b751accd64c3d1e" prot="protected" virt="non-virtual"><scope>EmpCylSL::AxiDisk</scope><name>params</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
