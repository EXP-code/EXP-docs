<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="_yaml_config_8_h" kind="file" language="C++">
    <compoundname>YamlConfig.H</compoundname>
    <includes local="no">typeinfo</includes>
    <includes local="no">iostream</includes>
    <includes local="no">iomanip</includes>
    <includes local="no">fstream</includes>
    <includes local="no">sstream</includes>
    <includes local="no">cstring</includes>
    <includes local="no">yaml-cpp/yaml.h</includes>
    <includes refid="cxxopts_8_h" local="no">cxxopts.H</includes>
    <incdepgraph>
      <node id="1">
        <label>/home/weinberg/Projects/EXP/include/YamlConfig.H</label>
        <link refid="_yaml_config_8_h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>cxxopts.H</label>
        <link refid="cxxopts_8_h"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>algorithm</label>
      </node>
      <node id="10">
        <label>cctype</label>
      </node>
      <node id="7">
        <label>cstring</label>
      </node>
      <node id="11">
        <label>exception</label>
      </node>
      <node id="5">
        <label>fstream</label>
      </node>
      <node id="4">
        <label>iomanip</label>
      </node>
      <node id="3">
        <label>iostream</label>
      </node>
      <node id="12">
        <label>limits</label>
      </node>
      <node id="13">
        <label>list</label>
      </node>
      <node id="14">
        <label>map</label>
      </node>
      <node id="15">
        <label>memory</label>
      </node>
      <node id="22">
        <label>regex</label>
      </node>
      <node id="6">
        <label>sstream</label>
      </node>
      <node id="16">
        <label>string</label>
      </node>
      <node id="2">
        <label>typeinfo</label>
      </node>
      <node id="17">
        <label>unordered_map</label>
      </node>
      <node id="18">
        <label>unordered_set</label>
      </node>
      <node id="19">
        <label>utility</label>
      </node>
      <node id="20">
        <label>vector</label>
      </node>
      <node id="8">
        <label>yaml-cpp/yaml.h</label>
      </node>
    </incdepgraph>
    <sectiondef kind="func">
      <memberdef kind="function" id="_yaml_config_8_h_1a4b6bc508ca919bbf0106b9e052494e7d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classcxxopts_1_1_parse_result" kindref="compound">cxxopts::ParseResult</ref></type>
        <definition>cxxopts::ParseResult LoadConfig</definition>
        <argsstring>(cxxopts::Options &amp;options, const std::string &amp;config)</argsstring>
        <name>LoadConfig</name>
        <param>
          <type><ref refid="classcxxopts_1_1_options" kindref="compound">cxxopts::Options</ref> &amp;</type>
          <declname>options</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Read the YAML parameter config file and load the cxxopts database with parameters </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/YamlConfig.H" line="32" column="22" bodyfile="/home/weinberg/Projects/EXP/include/EXPini.H" bodystart="85" bodyend="137" declfile="/home/weinberg/Projects/EXP/include/YamlConfig.H" declline="32" declcolumn="22"/>
        <references refid="classcxxopts_1_1_options_1a3e740564cc4c991078f1451e1fcd082b" compoundref="cxxopts_8_h" startline="2288" endline="2293">cxxopts::Options::parse</references>
      </memberdef>
      <memberdef kind="function" id="_yaml_config_8_h_1a1190b0cc579cdc4da84460ace376bad8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SaveConfig</definition>
        <argsstring>(const cxxopts::ParseResult &amp;vm, const cxxopts::Options &amp;options, const std::string &amp;config, const std::vector&lt; std::string &gt; groups={&quot;&quot;}, const std::vector&lt; std::string &gt; exclude={&quot;help&quot;, &quot;template&quot;, &quot;expert&quot;, &quot;config&quot;})</argsstring>
        <name>SaveConfig</name>
        <param>
          <type>const <ref refid="classcxxopts_1_1_parse_result" kindref="compound">cxxopts::ParseResult</ref> &amp;</type>
          <declname>vm</declname>
        </param>
        <param>
          <type>const <ref refid="classcxxopts_1_1_options" kindref="compound">cxxopts::Options</ref> &amp;</type>
          <declname>options</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>const std::vector&lt; std::string &gt;</type>
          <declname>groups</declname>
          <defval>{&quot;&quot;}</defval>
        </param>
        <param>
          <type>const std::vector&lt; std::string &gt;</type>
          <declname>exclude</declname>
          <defval>{&quot;help&quot;, &quot;template&quot;, &quot;expert&quot;, &quot;config&quot;}</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Saves the current command-line cxxopts database in YAML format for user configuration. For ease, the current convention is that all vector-values options will be stored as strings, and converted by the calling program to the correct value internally. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/YamlConfig.H" line="19" column="6" bodyfile="/home/weinberg/Projects/EXP/include/EXPini.H" bodystart="20" bodyend="80" declfile="/home/weinberg/Projects/EXP/include/YamlConfig.H" declline="19" declcolumn="6"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>_Config_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_Config_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;typeinfo&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iomanip&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;fstream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sstream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstring&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;yaml-cpp/yaml.h&gt;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>YAML<sp/>support</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="cxxopts_8_h" kindref="compound">cxxopts.H</ref>&gt;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Option<sp/>parser</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_yaml_config_8_h_1a1190b0cc579cdc4da84460ace376bad8" kindref="member">SaveConfig</ref>(<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Parsed<sp/>options</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classcxxopts_1_1_parse_result" kindref="compound">cxxopts::ParseResult</ref>&amp;<sp/>vm,</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Default<sp/>options</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classcxxopts_1_1_options" kindref="compound">cxxopts::Options</ref>&amp;<sp/>options,</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Save<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>config,</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Option<sp/>groups<sp/>to<sp/>save,<sp/>default<sp/>by<sp/>default</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;std::string&gt;<sp/>groups={</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">},</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Parameters<sp/>to<sp/>exclude</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;std::string&gt;<sp/>exclude={</highlight><highlight class="stringliteral">&quot;help&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;template&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;expert&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;config&quot;</highlight><highlight class="normal">});</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><ref refid="classcxxopts_1_1_parse_result" kindref="compound">cxxopts::ParseResult</ref><sp/><ref refid="_yaml_config_8_h_1a4b6bc508ca919bbf0106b9e052494e7d" kindref="member">LoadConfig</ref>(<ref refid="classcxxopts_1_1_options" kindref="compound">cxxopts::Options</ref>&amp;<sp/>options,</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>config);</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/weinberg/Projects/EXP/include/YamlConfig.H"/>
  </compounddef>
</doxygen>
