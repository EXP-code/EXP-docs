<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="class_polar_basis" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>PolarBasis</compoundname>
    <basecompoundref refid="class_axisymmetric_basis" prot="public" virt="non-virtual">AxisymmetricBasis</basecompoundref>
    <derivedcompoundref refid="class_c_b_disk" prot="public" virt="non-virtual">CBDisk</derivedcompoundref>
    <derivedcompoundref refid="class_flat_disk" prot="public" virt="non-virtual">FlatDisk</derivedcompoundref>
    <includes refid="_polar_basis_8_h" local="no">PolarBasis.H</includes>
    <innerclass refid="struct_polar_basis_1_1_coef_matrix" prot="protected">PolarBasis::CoefMatrix</innerclass>
    <innerclass refid="struct_polar_basis_1_1_coef_vector" prot="protected">PolarBasis::CoefVector</innerclass>
    <sectiondef kind="public-type">
      <memberdef kind="typedef" id="class_polar_basis_1a371112797397668b15ab41e65386f738" prot="public" static="no">
        <type>std::vector&lt; Eigen::VectorXd &gt;</type>
        <definition>using PolarBasis::ContribArray =  std::vector&lt;Eigen::VectorXd&gt;</definition>
        <argsstring></argsstring>
        <name>ContribArray</name>
        <qualifiedname>PolarBasis::ContribArray</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/PolarBasis.H" line="54" column="3" bodyfile="/home/weinberg/Projects/EXP/src/PolarBasis.H" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_polar_basis_1a091e218483e387313a642241e5f009da" prot="public" static="no">
        <type>std::vector&lt; Eigen::MatrixXd &gt;</type>
        <definition>using PolarBasis::MatrixM =  std::vector&lt;Eigen::MatrixXd&gt;</definition>
        <argsstring></argsstring>
        <name>MatrixM</name>
        <qualifiedname>PolarBasis::MatrixM</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/PolarBasis.H" line="53" column="3" bodyfile="/home/weinberg/Projects/EXP/src/PolarBasis.H" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_polar_basis_1a6c81bee92bd8e92deb3ba4ff644c8054" prot="public" static="no">
        <type>std::vector&lt; Eigen::VectorXd &gt;</type>
        <definition>using PolarBasis::VectorM =  std::vector&lt;Eigen::VectorXd&gt;</definition>
        <argsstring></argsstring>
        <name>VectorM</name>
        <qualifiedname>PolarBasis::VectorM</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/PolarBasis.H" line="52" column="3" bodyfile="/home/weinberg/Projects/EXP/src/PolarBasis.H" bodystart="52" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="protected-type">
      <memberdef kind="typedef" id="class_polar_basis_1aa515c0c713fdc70ba60210087b2519ec" prot="protected" static="no">
        <type>std::shared_ptr&lt; Eigen::VectorXd &gt;</type>
        <definition>typedef std::shared_ptr&lt;Eigen::VectorXd&gt; PolarBasis::VectorXdP</definition>
        <argsstring></argsstring>
        <name>VectorXdP</name>
        <qualifiedname>PolarBasis::VectorXdP</qualifiedname>
        <briefdescription>
<para>Matrices per thread for obtaining expansion coefficients. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/PolarBasis.H" line="69" column="27" bodyfile="/home/weinberg/Projects/EXP/src/PolarBasis.H" bodystart="69" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="class_polar_basis_1a88caee4e6225bee5a620dd123944641a" prot="protected" static="no" mutable="no">
        <type>const unsigned int</type>
        <definition>const unsigned int PolarBasis::cmagic</definition>
        <argsstring></argsstring>
        <name>cmagic</name>
        <qualifiedname>PolarBasis::cmagic</qualifiedname>
        <initializer>= 0xc0a57a2</initializer>
        <briefdescription>
<para>Coefficient magic number. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/PolarBasis.H" line="458" column="22" bodyfile="/home/weinberg/Projects/EXP/src/PolarBasis.H" bodystart="458" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_polar_basis_1a41aced55714de2c225f7a2f19fe3b596" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool PolarBasis::coefMaster</definition>
        <argsstring></argsstring>
        <name>coefMaster</name>
        <qualifiedname>PolarBasis::coefMaster</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Master node ships coefficients to hosts. True (default) implies that only the master node caches the coefficients for playback to save core memory. This is set in the config input using the &apos;coefMaster: bool&apos; parameter. Once I am sure that there are no algorithmic issues, I will remove this as an option. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/PolarBasis.H" line="474" column="8" bodyfile="/home/weinberg/Projects/EXP/src/PolarBasis.H" bodystart="474" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_polar_basis_1a476114987ab874ce8846014720e83746" prot="protected" static="no" mutable="no">
        <type>std::vector&lt; Eigen::VectorXd &gt;</type>
        <definition>std::vector&lt;Eigen::VectorXd&gt; PolarBasis::cosm</definition>
        <argsstring></argsstring>
        <name>cosm</name>
        <qualifiedname>PolarBasis::cosm</qualifiedname>
        <briefdescription>
<para>Work vectors for cosines for all values <computeroutput>m</computeroutput> </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/PolarBasis.H" line="83" column="15" bodyfile="/home/weinberg/Projects/EXP/src/PolarBasis.H" bodystart="83" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_polar_basis_1af841dfe17fd179e7cad33616f9584a0c" prot="protected" static="no" mutable="no">
        <type><ref refid="struct_polar_basis_1_1_coef_matrix" kindref="compound">CoefMatrix</ref></type>
        <definition>CoefMatrix PolarBasis::covM</definition>
        <argsstring></argsstring>
        <name>covM</name>
        <qualifiedname>PolarBasis::covM</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/PolarBasis.H" line="174" column="15" bodyfile="/home/weinberg/Projects/EXP/src/PolarBasis.H" bodystart="174" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_polar_basis_1acf405ea76324f560aa152c596de1228c" prot="protected" static="no" mutable="no">
        <type><ref refid="struct_polar_basis_1_1_coef_vector" kindref="compound">CoefVector</ref></type>
        <definition>CoefVector PolarBasis::covV</definition>
        <argsstring></argsstring>
        <name>covV</name>
        <qualifiedname>PolarBasis::covV</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/PolarBasis.H" line="173" column="15" bodyfile="/home/weinberg/Projects/EXP/src/PolarBasis.H" bodystart="173" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_polar_basis_1a79001ab9c1f4d7756828473039736910" prot="protected" static="no" mutable="no">
        <type>CoefClasses::CylCoefs</type>
        <definition>CoefClasses::CylCoefs PolarBasis::cylCoefs</definition>
        <argsstring></argsstring>
        <name>cylCoefs</name>
        <qualifiedname>PolarBasis::cylCoefs</qualifiedname>
        <briefdescription>
<para>Coefficient container instance for writing HDF5. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/PolarBasis.H" line="480" column="25" bodyfile="/home/weinberg/Projects/EXP/src/PolarBasis.H" bodystart="480" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_polar_basis_1a08dfe64d5a1733ffe27bde9b1bf16d51" prot="protected" static="no" mutable="no">
        <type>double</type>
        <definition>double PolarBasis::cylmass</definition>
        <argsstring></argsstring>
        <name>cylmass</name>
        <qualifiedname>PolarBasis::cylmass</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/PolarBasis.H" line="183" column="10" bodyfile="/home/weinberg/Projects/EXP/src/PolarBasis.H" bodystart="183" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_polar_basis_1aeb57eed94e2c11e9a47ee9786b7c0b1a" prot="protected" static="no" mutable="no">
        <type>std::vector&lt; double &gt;</type>
        <definition>std::vector&lt;double&gt; PolarBasis::cylmass1</definition>
        <argsstring></argsstring>
        <name>cylmass1</name>
        <qualifiedname>PolarBasis::cylmass1</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/PolarBasis.H" line="182" column="15" bodyfile="/home/weinberg/Projects/EXP/src/PolarBasis.H" bodystart="182" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_polar_basis_1a24a24c5e0ab5d4a85ead71fea374f812" prot="protected" static="no" mutable="no">
        <type>unsigned</type>
        <definition>unsigned PolarBasis::defSampT</definition>
        <argsstring></argsstring>
        <name>defSampT</name>
        <qualifiedname>PolarBasis::defSampT</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/PolarBasis.H" line="180" column="18" bodyfile="/home/weinberg/Projects/EXP/src/PolarBasis.H" bodystart="180" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_polar_basis_1ae64bf3418e06d65505b66867521abb35" prot="protected" static="no" mutable="no">
        <type>Eigen::MatrixXd</type>
        <definition>Eigen::MatrixXd PolarBasis::dend</definition>
        <argsstring></argsstring>
        <name>dend</name>
        <qualifiedname>PolarBasis::dend</qualifiedname>
        <briefdescription>
<para>Work matrix. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/PolarBasis.H" line="89" column="19" bodyfile="/home/weinberg/Projects/EXP/src/PolarBasis.H" bodystart="89" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_polar_basis_1afb8531a9c023e49bc2a2c112e47490eb" prot="protected" static="no" mutable="no">
        <type>vector&lt; vector&lt; Eigen::MatrixXd &gt; &gt;</type>
        <definition>vector&lt; vector&lt;Eigen::MatrixXd&gt; &gt; PolarBasis::differ1</definition>
        <argsstring></argsstring>
        <name>differ1</name>
        <qualifiedname>PolarBasis::differ1</qualifiedname>
        <briefdescription>
<para>For updating levels. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/PolarBasis.H" line="448" column="10" bodyfile="/home/weinberg/Projects/EXP/src/PolarBasis.H" bodystart="448" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_polar_basis_1a62f0e567cfac40ee6c955aa9b46b331c" prot="protected" static="no" mutable="no">
        <type>std::vector&lt; std::vector&lt; Eigen::MatrixXd &gt; &gt;</type>
        <definition>std::vector&lt; std::vector&lt;Eigen::MatrixXd&gt; &gt; PolarBasis::differC1</definition>
        <argsstring></argsstring>
        <name>differC1</name>
        <qualifiedname>PolarBasis::differC1</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/PolarBasis.H" line="192" column="24" bodyfile="/home/weinberg/Projects/EXP/src/PolarBasis.H" bodystart="192" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_polar_basis_1a14b747134e7a5e92e73f2c6cb6570a14" prot="protected" static="no" mutable="no">
        <type>std::vector&lt; std::vector&lt; Eigen::MatrixXd &gt; &gt;</type>
        <definition>std::vector&lt; std::vector&lt;Eigen::MatrixXd&gt; &gt; PolarBasis::differS1</definition>
        <argsstring></argsstring>
        <name>differS1</name>
        <qualifiedname>PolarBasis::differS1</qualifiedname>
        <briefdescription>
<para>For updating levels. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/PolarBasis.H" line="192" column="15" bodyfile="/home/weinberg/Projects/EXP/src/PolarBasis.H" bodystart="192" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_polar_basis_1a90e8f6bee803544cedde1c5334540808" prot="protected" static="no" mutable="no">
        <type>std::vector&lt; Eigen::MatrixXd &gt;</type>
        <definition>std::vector&lt;Eigen::MatrixXd&gt; PolarBasis::dpotR</definition>
        <argsstring></argsstring>
        <name>dpotR</name>
        <qualifiedname>PolarBasis::dpotR</qualifiedname>
        <briefdescription>
<para>Matrices per thread for obtaining derivative of potential field. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/PolarBasis.H" line="65" column="15" bodyfile="/home/weinberg/Projects/EXP/src/PolarBasis.H" bodystart="65" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_polar_basis_1ad1b9268b7f03dcbb53afb51d15595875" prot="protected" static="no" mutable="no">
        <type>std::vector&lt; Eigen::MatrixXd &gt;</type>
        <definition>std::vector&lt;Eigen::MatrixXd&gt; PolarBasis::dpotZ</definition>
        <argsstring></argsstring>
        <name>dpotZ</name>
        <qualifiedname>PolarBasis::dpotZ</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/PolarBasis.H" line="65" column="21" bodyfile="/home/weinberg/Projects/EXP/src/PolarBasis.H" bodystart="65" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_polar_basis_1a8296f5a47fc5b64f7ca3bd40629996af" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool PolarBasis::EVEN_M</definition>
        <argsstring></argsstring>
        <name>EVEN_M</name>
        <qualifiedname>PolarBasis::EVEN_M</qualifiedname>
        <briefdescription>
<para>Flag use of even m harmonics only. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/PolarBasis.H" line="413" column="8" bodyfile="/home/weinberg/Projects/EXP/src/PolarBasis.H" bodystart="413" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_polar_basis_1a15d95a42911345cf8a447f8b87dc0db4" prot="protected" static="no" mutable="no">
        <type>std::vector&lt; std::vector&lt; <ref refid="class_polar_basis_1aa515c0c713fdc70ba60210087b2519ec" kindref="member">VectorXdP</ref> &gt; &gt;</type>
        <definition>std::vector&lt;std::vector&lt;VectorXdP&gt; &gt; PolarBasis::expcoef0</definition>
        <argsstring></argsstring>
        <name>expcoef0</name>
        <qualifiedname>PolarBasis::expcoef0</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/PolarBasis.H" line="70" column="15" bodyfile="/home/weinberg/Projects/EXP/src/PolarBasis.H" bodystart="70" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_polar_basis_1a085b545644798235160406c902100fa1" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool PolarBasis::firstime_accel</definition>
        <argsstring></argsstring>
        <name>firstime_accel</name>
        <qualifiedname>PolarBasis::firstime_accel</qualifiedname>
        <briefdescription>
<para>Flag whether or not work space has been initialized for acceleration. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/PolarBasis.H" line="126" column="8" bodyfile="/home/weinberg/Projects/EXP/src/PolarBasis.H" bodystart="126" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_polar_basis_1a95ad9c40d788c9819e49e82d608dbfe2" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool PolarBasis::firstime_coef</definition>
        <argsstring></argsstring>
        <name>firstime_coef</name>
        <qualifiedname>PolarBasis::firstime_coef</qualifiedname>
        <briefdescription>
<para>Flag whether or not work space has been initialized for coefficients. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/PolarBasis.H" line="123" column="8" bodyfile="/home/weinberg/Projects/EXP/src/PolarBasis.H" bodystart="123" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_polar_basis_1a193e8bdb15a1bee988c45b5a5d4cbb1b" prot="protected" static="no" mutable="no">
        <type>std::vector&lt; unsigned &gt;</type>
        <definition>std::vector&lt;unsigned&gt; PolarBasis::howmany</definition>
        <argsstring></argsstring>
        <name>howmany</name>
        <qualifiedname>PolarBasis::howmany</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/PolarBasis.H" line="138" column="15" bodyfile="/home/weinberg/Projects/EXP/src/PolarBasis.H" bodystart="138" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_polar_basis_1a9cd5f130653fbfbabc6c6b53afbe3808" prot="protected" static="no" mutable="no">
        <type>std::vector&lt; std::vector&lt; unsigned &gt; &gt;</type>
        <definition>std::vector&lt;std::vector&lt;unsigned&gt; &gt; PolarBasis::howmany1</definition>
        <argsstring></argsstring>
        <name>howmany1</name>
        <qualifiedname>PolarBasis::howmany1</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/PolarBasis.H" line="137" column="15" bodyfile="/home/weinberg/Projects/EXP/src/PolarBasis.H" bodystart="137" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_polar_basis_1a06f152b6310fa7f859ca24ee5124cda5" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool PolarBasis::is_flat</definition>
        <argsstring></argsstring>
        <name>is_flat</name>
        <qualifiedname>PolarBasis::is_flat</qualifiedname>
        <briefdescription>
<para>Model is flat. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/PolarBasis.H" line="120" column="8" bodyfile="/home/weinberg/Projects/EXP/src/PolarBasis.H" bodystart="120" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_polar_basis_1a7e1ac0795981fe6cd99dc0ef4553f3a1" prot="protected" static="no" mutable="no">
        <type>double</type>
        <definition>double PolarBasis::lastPlayTime</definition>
        <argsstring></argsstring>
        <name>lastPlayTime</name>
        <qualifiedname>PolarBasis::lastPlayTime</qualifiedname>
        <briefdescription>
<para>Last playback coefficient evaluation time. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/PolarBasis.H" line="477" column="10" bodyfile="/home/weinberg/Projects/EXP/src/PolarBasis.H" bodystart="477" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_polar_basis_1a4ac3897f3193cce28ec862d51862549c" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool PolarBasis::M0_back</definition>
        <argsstring></argsstring>
        <name>M0_back</name>
        <qualifiedname>PolarBasis::M0_back</qualifiedname>
        <briefdescription>
<para>Flag fixed monopole. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/PolarBasis.H" line="419" column="8" bodyfile="/home/weinberg/Projects/EXP/src/PolarBasis.H" bodystart="419" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_polar_basis_1a816312706a8b38652b6969ecb540fb83" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool PolarBasis::M0_only</definition>
        <argsstring></argsstring>
        <name>M0_only</name>
        <qualifiedname>PolarBasis::M0_only</qualifiedname>
        <briefdescription>
<para>Use axisymmetric terms. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/PolarBasis.H" line="416" column="8" bodyfile="/home/weinberg/Projects/EXP/src/PolarBasis.H" bodystart="416" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_polar_basis_1ae8dfb1cfd65cd8f4d753c0255a6a7ef8" prot="protected" static="no" mutable="no">
        <type>std::vector&lt; double &gt;</type>
        <definition>std::vector&lt;double&gt; PolarBasis::massT</definition>
        <argsstring></argsstring>
        <name>massT</name>
        <qualifiedname>PolarBasis::massT</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/PolarBasis.H" line="179" column="15" bodyfile="/home/weinberg/Projects/EXP/src/PolarBasis.H" bodystart="179" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_polar_basis_1a92bf1bad9abede0a8634a3d9045c0dd2" prot="protected" static="no" mutable="no">
        <type>std::vector&lt; std::vector&lt; double &gt; &gt;</type>
        <definition>std::vector&lt; std::vector&lt;double&gt; &gt; PolarBasis::massT1</definition>
        <argsstring></argsstring>
        <name>massT1</name>
        <qualifiedname>PolarBasis::massT1</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/PolarBasis.H" line="177" column="15" bodyfile="/home/weinberg/Projects/EXP/src/PolarBasis.H" bodystart="177" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_polar_basis_1ace5aea039f333b325a02266bf91b518d" prot="protected" static="no" mutable="no">
        <type>double</type>
        <definition>double PolarBasis::maxSNR</definition>
        <argsstring></argsstring>
        <name>maxSNR</name>
        <qualifiedname>PolarBasis::maxSNR</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/PolarBasis.H" line="184" column="17" bodyfile="/home/weinberg/Projects/EXP/src/PolarBasis.H" bodystart="184" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_polar_basis_1a3eea87c05c80ea26d61cf7fa851963b5" prot="protected" static="no" mutable="no">
        <type>Eigen::VectorXd</type>
        <definition>Eigen::VectorXd PolarBasis::meanC</definition>
        <argsstring></argsstring>
        <name>meanC</name>
        <qualifiedname>PolarBasis::meanC</qualifiedname>
        <briefdescription>
<para>Expected coefficient values for RMS noise computation. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/PolarBasis.H" line="422" column="19" bodyfile="/home/weinberg/Projects/EXP/src/PolarBasis.H" bodystart="422" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_polar_basis_1a0ba528379df5a33db38b6d1463e53b4d" prot="protected" static="no" mutable="no">
        <type>double</type>
        <definition>double PolarBasis::minSNR</definition>
        <argsstring></argsstring>
        <name>minSNR</name>
        <qualifiedname>PolarBasis::minSNR</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/PolarBasis.H" line="184" column="10" bodyfile="/home/weinberg/Projects/EXP/src/PolarBasis.H" bodystart="184" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_polar_basis_1a2751b7dbf6ebb3b067666e03470fcf58" prot="protected" static="no" mutable="no">
        <type><ref refid="class_mixture_basis" kindref="compound">MixtureBasis</ref> *</type>
        <definition>MixtureBasis* PolarBasis::mix</definition>
        <argsstring></argsstring>
        <name>mix</name>
        <qualifiedname>PolarBasis::mix</qualifiedname>
        <briefdescription>
<para>For massive satellite simulations. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/PolarBasis.H" line="461" column="16" bodyfile="/home/weinberg/Projects/EXP/src/PolarBasis.H" bodystart="461" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_polar_basis_1a678a5f22d42f8456b994a51afd6ed765" prot="protected" static="no" mutable="no">
        <type>int</type>
        <definition>int PolarBasis::mlim</definition>
        <argsstring></argsstring>
        <name>mlim</name>
        <qualifiedname>PolarBasis::mlim</qualifiedname>
        <briefdescription>
<para>Maximum harmonic order restriction. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/PolarBasis.H" line="389" column="7" bodyfile="/home/weinberg/Projects/EXP/src/PolarBasis.H" bodystart="389" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_polar_basis_1ad61c596489b46678f2e70e454921d0d3" prot="protected" static="no" mutable="no">
        <type>double</type>
        <definition>double PolarBasis::muse0</definition>
        <argsstring></argsstring>
        <name>muse0</name>
        <qualifiedname>PolarBasis::muse0</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/PolarBasis.H" line="76" column="10" bodyfile="/home/weinberg/Projects/EXP/src/PolarBasis.H" bodystart="76" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_polar_basis_1a06ce38624d1d138e765b626495040c46" prot="protected" static="no" mutable="no">
        <type>vector&lt; double &gt;</type>
        <definition>vector&lt;double&gt; PolarBasis::muse1</definition>
        <argsstring></argsstring>
        <name>muse1</name>
        <qualifiedname>PolarBasis::muse1</qualifiedname>
        <briefdescription>
<para>Mass accumulation for PCA. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/PolarBasis.H" line="75" column="10" bodyfile="/home/weinberg/Projects/EXP/src/PolarBasis.H" bodystart="75" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_polar_basis_1a915ee44780b239759e053a4fc36d8816" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool PolarBasis::NO_M0</definition>
        <argsstring></argsstring>
        <name>NO_M0</name>
        <qualifiedname>PolarBasis::NO_M0</qualifiedname>
        <briefdescription>
<para>Omit monopole. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/PolarBasis.H" line="404" column="8" bodyfile="/home/weinberg/Projects/EXP/src/PolarBasis.H" bodystart="404" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_polar_basis_1a0bbb25e024f9e05ba4f0f09ddd29d38c" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool PolarBasis::NO_M1</definition>
        <argsstring></argsstring>
        <name>NO_M1</name>
        <qualifiedname>PolarBasis::NO_M1</qualifiedname>
        <briefdescription>
<para>Flag drop m=1 term. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/PolarBasis.H" line="410" column="8" bodyfile="/home/weinberg/Projects/EXP/src/PolarBasis.H" bodystart="410" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_polar_basis_1a3db7a5c1581abdbad2d411cef3337f05" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool PolarBasis::NO_MONO</definition>
        <argsstring></argsstring>
        <name>NO_MONO</name>
        <qualifiedname>PolarBasis::NO_MONO</qualifiedname>
        <briefdescription>
<para>Omit off-grid force algorithm. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/PolarBasis.H" line="407" column="8" bodyfile="/home/weinberg/Projects/EXP/src/PolarBasis.H" bodystart="407" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_polar_basis_1a0068f61d14aec9c87ed6d9cc24e02b1d" prot="protected" static="no" mutable="no">
        <type>std::normal_distribution</type>
        <definition>std::normal_distribution PolarBasis::nrand</definition>
        <argsstring></argsstring>
        <name>nrand</name>
        <qualifiedname>PolarBasis::nrand</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/PolarBasis.H" line="431" column="4" bodyfile="/home/weinberg/Projects/EXP/src/PolarBasis.H" bodystart="431" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_polar_basis_1a118ccb84ebd70f359f9926d8f2829842" prot="protected" static="no" mutable="no">
        <type>std::vector&lt; unsigned &gt;</type>
        <definition>std::vector&lt;unsigned&gt; PolarBasis::numbT</definition>
        <argsstring></argsstring>
        <name>numbT</name>
        <qualifiedname>PolarBasis::numbT</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/PolarBasis.H" line="178" column="15" bodyfile="/home/weinberg/Projects/EXP/src/PolarBasis.H" bodystart="178" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_polar_basis_1a3553fdf50173154f1854aed4be95253d" prot="protected" static="no" mutable="no">
        <type>std::vector&lt; std::vector&lt; unsigned &gt; &gt;</type>
        <definition>std::vector&lt; std::vector&lt;unsigned&gt; &gt; PolarBasis::numbT1</definition>
        <argsstring></argsstring>
        <name>numbT1</name>
        <qualifiedname>PolarBasis::numbT1</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/PolarBasis.H" line="176" column="15" bodyfile="/home/weinberg/Projects/EXP/src/PolarBasis.H" bodystart="176" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_polar_basis_1a99c0c982b5199a2f2f637d929def3782" prot="protected" static="no" mutable="no">
        <type>vector&lt; double &gt;</type>
        <definition>vector&lt; double &gt; PolarBasis::pack</definition>
        <argsstring></argsstring>
        <name>pack</name>
        <qualifiedname>PolarBasis::pack</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/PolarBasis.H" line="449" column="10" bodyfile="/home/weinberg/Projects/EXP/src/PolarBasis.H" bodystart="449" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_polar_basis_1a4b5f9c6bef2c419f84b76fb396e82723" prot="protected" static="no" mutable="no">
        <type>std::shared_ptr&lt; CoefClasses::CylCoefs &gt;</type>
        <definition>std::shared_ptr&lt;CoefClasses::CylCoefs&gt; PolarBasis::playback</definition>
        <argsstring></argsstring>
        <name>playback</name>
        <qualifiedname>PolarBasis::playback</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Coefficient playback instance. Using shared_ptr to avoid constructing a simple pointer or null instance </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/PolarBasis.H" line="466" column="19" bodyfile="/home/weinberg/Projects/EXP/src/PolarBasis.H" bodystart="466" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_polar_basis_1ab43c03641c12922e70c9942c3b09bcf1" prot="protected" static="no" mutable="no">
        <type>std::vector&lt; Eigen::MatrixXd &gt;</type>
        <definition>std::vector&lt;Eigen::MatrixXd&gt; PolarBasis::potd</definition>
        <argsstring></argsstring>
        <name>potd</name>
        <qualifiedname>PolarBasis::potd</qualifiedname>
        <briefdescription>
<para>Matrices per thread for obtaining potential field. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/PolarBasis.H" line="62" column="15" bodyfile="/home/weinberg/Projects/EXP/src/PolarBasis.H" bodystart="62" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_polar_basis_1aa1ff0872a9bb7ccd10df8883c302c8ff" prot="protected" static="no" mutable="no">
        <type>double</type>
        <definition>double PolarBasis::resetT</definition>
        <argsstring></argsstring>
        <name>resetT</name>
        <qualifiedname>PolarBasis::resetT</qualifiedname>
        <briefdescription>
<para><ref refid="class_time" kindref="compound">Time</ref> at last multistep reset. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/PolarBasis.H" line="80" column="10" bodyfile="/home/weinberg/Projects/EXP/src/PolarBasis.H" bodystart="80" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_polar_basis_1a6101c6d9456396713bd0c589c27f85c9" prot="protected" static="no" mutable="no">
        <type>std::mt19937</type>
        <definition>std::mt19937 PolarBasis::rgen</definition>
        <argsstring></argsstring>
        <name>rgen</name>
        <qualifiedname>PolarBasis::rgen</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/PolarBasis.H" line="430" column="16" bodyfile="/home/weinberg/Projects/EXP/src/PolarBasis.H" bodystart="430" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_polar_basis_1adb549c80cf4c39ca310bd9de22c04c07" prot="protected" static="no" mutable="no">
        <type>double</type>
        <definition>double PolarBasis::rmax</definition>
        <argsstring></argsstring>
        <name>rmax</name>
        <qualifiedname>PolarBasis::rmax</qualifiedname>
        <briefdescription>
<para>The maximum radius. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/PolarBasis.H" line="398" column="10" bodyfile="/home/weinberg/Projects/EXP/src/PolarBasis.H" bodystart="398" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_polar_basis_1a3a0be17ee62bb4879aea655ae19edaa7" prot="protected" static="no" mutable="no">
        <type>double</type>
        <definition>double PolarBasis::rmin</definition>
        <argsstring></argsstring>
        <name>rmin</name>
        <qualifiedname>PolarBasis::rmin</qualifiedname>
        <briefdescription>
<para>The minimum radius. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/PolarBasis.H" line="395" column="10" bodyfile="/home/weinberg/Projects/EXP/src/PolarBasis.H" bodystart="395" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_polar_basis_1a2e121b84e9254efa5cbd308991c66e54" prot="protected" static="no" mutable="no">
        <type>Eigen::MatrixXd</type>
        <definition>Eigen::MatrixXd PolarBasis::rmsC</definition>
        <argsstring></argsstring>
        <name>rmsC</name>
        <qualifiedname>PolarBasis::rmsC</qualifiedname>
        <briefdescription>
<para>Expected squared coefficient values for RMS noise computation. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/PolarBasis.H" line="425" column="19" bodyfile="/home/weinberg/Projects/EXP/src/PolarBasis.H" bodystart="425" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_polar_basis_1a3bd4a78d9444ffbbe83a56ae99bea773" prot="protected" static="no" mutable="no">
        <type>unsigned</type>
        <definition>unsigned PolarBasis::sampT</definition>
        <argsstring></argsstring>
        <name>sampT</name>
        <qualifiedname>PolarBasis::sampT</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/PolarBasis.H" line="180" column="12" bodyfile="/home/weinberg/Projects/EXP/src/PolarBasis.H" bodystart="180" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_polar_basis_1a6e543f1d0becffd504e251422767d3fe" prot="protected" static="no" mutable="no">
        <type>double</type>
        <definition>double PolarBasis::scale</definition>
        <argsstring></argsstring>
        <name>scale</name>
        <qualifiedname>PolarBasis::scale</qualifiedname>
        <briefdescription>
<para><ref refid="class_basis" kindref="compound">Basis</ref> linear scale for mapping. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/PolarBasis.H" line="392" column="10" bodyfile="/home/weinberg/Projects/EXP/src/PolarBasis.H" bodystart="392" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_polar_basis_1a05fd3a74d0b2657ded0339a346cbf997" prot="protected" static="no" mutable="no">
        <type>unsigned int</type>
        <definition>unsigned int PolarBasis::seedN</definition>
        <argsstring></argsstring>
        <name>seedN</name>
        <qualifiedname>PolarBasis::seedN</qualifiedname>
        <briefdescription>
<para>Pseudorandom generation. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/PolarBasis.H" line="429" column="16" bodyfile="/home/weinberg/Projects/EXP/src/PolarBasis.H" bodystart="429" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_polar_basis_1ad09ca298def19fc208e57ef144ce16f6" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool PolarBasis::self_consistent</definition>
        <argsstring></argsstring>
        <name>self_consistent</name>
        <qualifiedname>PolarBasis::self_consistent</qualifiedname>
        <briefdescription>
<para>Flag self_consitency. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/PolarBasis.H" line="401" column="8" bodyfile="/home/weinberg/Projects/EXP/src/PolarBasis.H" bodystart="401" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_polar_basis_1a99d74d03e9d45b7bd2faded328ed5b42" prot="protected" static="no" mutable="no">
        <type>std::vector&lt; Eigen::VectorXd &gt;</type>
        <definition>std::vector&lt;Eigen::VectorXd&gt; PolarBasis::sinm</definition>
        <argsstring></argsstring>
        <name>sinm</name>
        <qualifiedname>PolarBasis::sinm</qualifiedname>
        <briefdescription>
<para>Work vectors for sines for all values <computeroutput>m</computeroutput> </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/PolarBasis.H" line="86" column="15" bodyfile="/home/weinberg/Projects/EXP/src/PolarBasis.H" bodystart="86" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_polar_basis_1ab5d0ad742eec040c918d0a3398e0df5a" prot="protected" static="no" mutable="no">
        <type>double</type>
        <definition>double PolarBasis::ssfrac</definition>
        <argsstring></argsstring>
        <name>ssfrac</name>
        <qualifiedname>PolarBasis::ssfrac</qualifiedname>
        <briefdescription>
<para>Subsample fraction of particles. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/PolarBasis.H" line="435" column="10" bodyfile="/home/weinberg/Projects/EXP/src/PolarBasis.H" bodystart="435" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_polar_basis_1aade6058d4754068e3390aecc59241901" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool PolarBasis::subset</definition>
        <argsstring></argsstring>
        <name>subset</name>
        <qualifiedname>PolarBasis::subset</qualifiedname>
        <briefdescription>
<para>Flag to use subset. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/PolarBasis.H" line="438" column="8" bodyfile="/home/weinberg/Projects/EXP/src/PolarBasis.H" bodystart="438" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_polar_basis_1a35b9bc2b401b6ca50284052b22c16607" prot="protected" static="no" mutable="no">
        <type>std::vector&lt; std::vector&lt; Eigen::MatrixXd &gt; &gt;</type>
        <definition>std::vector&lt;std::vector&lt;Eigen::MatrixXd&gt; &gt; PolarBasis::tvar</definition>
        <argsstring></argsstring>
        <name>tvar</name>
        <qualifiedname>PolarBasis::tvar</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/PolarBasis.H" line="170" column="15" bodyfile="/home/weinberg/Projects/EXP/src/PolarBasis.H" bodystart="170" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_polar_basis_1a26ef5aaa37386ff156862a79b6c57b89" prot="protected" static="no" mutable="no">
        <type>std::vector&lt; Eigen::VectorXd &gt;</type>
        <definition>std::vector&lt;Eigen::VectorXd&gt; PolarBasis::u</definition>
        <argsstring></argsstring>
        <name>u</name>
        <qualifiedname>PolarBasis::u</qualifiedname>
        <briefdescription>
<para>Work vectors to make recursion evaluations thread safe. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/PolarBasis.H" line="59" column="15" bodyfile="/home/weinberg/Projects/EXP/src/PolarBasis.H" bodystart="59" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_polar_basis_1abca00424b2046864e5d8242ab314d299" prot="protected" static="no" mutable="no">
        <type>vector&lt; double &gt;</type>
        <definition>vector&lt; double &gt; PolarBasis::unpack</definition>
        <argsstring></argsstring>
        <name>unpack</name>
        <qualifiedname>PolarBasis::unpack</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/PolarBasis.H" line="449" column="15" bodyfile="/home/weinberg/Projects/EXP/src/PolarBasis.H" bodystart="449" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_polar_basis_1a3197446ade65d9b4d17e381333aff246" prot="protected" static="no" mutable="no">
        <type>std::vector&lt; Eigen::MatrixXd &gt;</type>
        <definition>std::vector&lt;Eigen::MatrixXd&gt; PolarBasis::vc</definition>
        <argsstring></argsstring>
        <name>vc</name>
        <qualifiedname>PolarBasis::vc</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/PolarBasis.H" line="186" column="15" bodyfile="/home/weinberg/Projects/EXP/src/PolarBasis.H" bodystart="186" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_polar_basis_1a22efaf97472b275a5cffe707f31a49e7" prot="protected" static="no" mutable="no">
        <type>std::vector&lt; Eigen::MatrixXd &gt;</type>
        <definition>std::vector&lt;Eigen::MatrixXd&gt; PolarBasis::vs</definition>
        <argsstring></argsstring>
        <name>vs</name>
        <qualifiedname>PolarBasis::vs</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/PolarBasis.H" line="186" column="18" bodyfile="/home/weinberg/Projects/EXP/src/PolarBasis.H" bodystart="186" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_polar_basis_1ad68931ee90a672f077a8ccaae1bc72df" prot="protected" static="no" mutable="no">
        <type>std::vector&lt; double &gt;</type>
        <definition>std::vector&lt;double&gt; PolarBasis::workC</definition>
        <argsstring></argsstring>
        <name>workC</name>
        <qualifiedname>PolarBasis::workC</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/PolarBasis.H" line="193" column="22" bodyfile="/home/weinberg/Projects/EXP/src/PolarBasis.H" bodystart="193" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_polar_basis_1a9807aaaf18f9e1a8c36babf586dae852" prot="protected" static="no" mutable="no">
        <type>std::vector&lt; double &gt;</type>
        <definition>std::vector&lt;double&gt; PolarBasis::workC1</definition>
        <argsstring></argsstring>
        <name>workC1</name>
        <qualifiedname>PolarBasis::workC1</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/PolarBasis.H" line="193" column="15" bodyfile="/home/weinberg/Projects/EXP/src/PolarBasis.H" bodystart="193" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_polar_basis_1aa664182951b12af8a5bc377a8421f849" prot="protected" static="no" mutable="no">
        <type>std::vector&lt; double &gt;</type>
        <definition>std::vector&lt;double&gt; PolarBasis::workS</definition>
        <argsstring></argsstring>
        <name>workS</name>
        <qualifiedname>PolarBasis::workS</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/PolarBasis.H" line="193" column="35" bodyfile="/home/weinberg/Projects/EXP/src/PolarBasis.H" bodystart="193" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_polar_basis_1a9ca96eb5c70ca2b17032fe5a2c0f813c" prot="protected" static="no" mutable="no">
        <type>std::vector&lt; double &gt;</type>
        <definition>std::vector&lt;double&gt; PolarBasis::workS1</definition>
        <argsstring></argsstring>
        <name>workS1</name>
        <qualifiedname>PolarBasis::workS1</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/PolarBasis.H" line="193" column="28" bodyfile="/home/weinberg/Projects/EXP/src/PolarBasis.H" bodystart="193" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="protected-static-attrib">
      <memberdef kind="variable" id="class_polar_basis_1adfedd329d82bf29612dc7effb68d6527" prot="protected" static="yes" mutable="no">
        <type>pthread_mutex_t</type>
        <definition>pthread_mutex_t PolarBasis::cos_coef_lock</definition>
        <argsstring></argsstring>
        <name>cos_coef_lock</name>
        <qualifiedname>PolarBasis::cos_coef_lock</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/PolarBasis.H" line="487" column="36" bodyfile="/home/weinberg/Projects/EXP/src/PolarBasis.H" bodystart="487" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_polar_basis_1a50c1a4d646f89ac3d9d07e9700a9ead1" prot="protected" static="yes" mutable="no">
        <type>pthread_mutex_t</type>
        <definition>pthread_mutex_t PolarBasis::sin_coef_lock</definition>
        <argsstring></argsstring>
        <name>sin_coef_lock</name>
        <qualifiedname>PolarBasis::sin_coef_lock</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/PolarBasis.H" line="487" column="50" bodyfile="/home/weinberg/Projects/EXP/src/PolarBasis.H" bodystart="487" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_polar_basis_1a1e8407fa2d119488c94015b74b977e37" prot="protected" static="yes" mutable="no">
        <type>pthread_mutex_t</type>
        <definition>pthread_mutex_t PolarBasis::used_lock</definition>
        <argsstring></argsstring>
        <name>used_lock</name>
        <qualifiedname>PolarBasis::used_lock</qualifiedname>
        <briefdescription>
<para>Mutexes for multithreading. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/PolarBasis.H" line="487" column="26" bodyfile="/home/weinberg/Projects/EXP/src/PolarBasis.H" bodystart="487" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_polar_basis_1a80f934a93cbe526d28c6f8787b31b729" prot="protected" static="yes" mutable="no">
        <type>const std::set&lt; std::string &gt;</type>
        <definition>const std::set&lt;std::string&gt; PolarBasis::valid_keys</definition>
        <argsstring></argsstring>
        <name>valid_keys</name>
        <qualifiedname>PolarBasis::valid_keys</qualifiedname>
        <briefdescription>
<para>Valid keys for YAML configurations. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/PolarBasis.H" line="483" column="25" bodyfile="/home/weinberg/Projects/EXP/src/PolarBasis.H" bodystart="483" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="class_polar_basis_1ae3e10d1d2db082490f8a28b32915def5" prot="public" static="yes" mutable="no">
        <type>bool</type>
        <definition>bool PolarBasis::NewCoefs</definition>
        <argsstring></argsstring>
        <name>NewCoefs</name>
        <qualifiedname>PolarBasis::NewCoefs</qualifiedname>
        <briefdescription>
<para>Use YAML header in coefficient file. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/PolarBasis.H" line="493" column="15" bodyfile="/home/weinberg/Projects/EXP/src/PolarBasis.H" bodystart="493" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="protected-func">
      <memberdef kind="function" id="class_polar_basis_1a89ded72802c057e9900f24d493f9dce3" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>std::tuple&lt; double, double, double &gt;</type>
        <definition>virtual std::tuple&lt; double, double, double &gt; PolarBasis::background</definition>
        <argsstring>(double r, double z)</argsstring>
        <name>background</name>
        <qualifiedname>PolarBasis::background</qualifiedname>
        <reimplementedby refid="class_c_b_disk_1a82d0b59e367b9d8f65feea21bcc2b921">background</reimplementedby>
        <reimplementedby refid="class_flat_disk_1a7605820abb7e8222f48e04c25209f20b">background</reimplementedby>
        <param>
          <type>double</type>
          <declname>r</declname>
        </param>
        <param>
          <type>double</type>
          <declname>z</declname>
        </param>
        <briefdescription>
<para>CUDA method for coefficient accumulation. </para>
        </briefdescription>
        <detaileddescription>
<para>Background evaluation </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/PolarBasis.H" line="383" column="3" bodyfile="/home/weinberg/Projects/EXP/src/PolarBasis.H" bodystart="383" bodyend="383"/>
      </memberdef>
      <memberdef kind="function" id="class_polar_basis_1ac71935d93632a102114d3f7d3cc52656" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void PolarBasis::check_range</definition>
        <argsstring>()</argsstring>
        <name>check_range</name>
        <qualifiedname>PolarBasis::check_range</qualifiedname>
        <briefdescription>
<para>Provided by derived classes to check consistency. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/PolarBasis.H" line="95" column="16"/>
      </memberdef>
      <memberdef kind="function" id="class_polar_basis_1ab837dfe291f4c04c498805ad3d7899a5" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void PolarBasis::compute_multistep_coefficients</definition>
        <argsstring>()</argsstring>
        <name>compute_multistep_coefficients</name>
        <qualifiedname>PolarBasis::compute_multistep_coefficients</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Extrapolate and sum coefficents per multistep level to get a complete set of coefficients for force evaluation at an intermediate time step </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/PolarBasis.H" line="444" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_polar_basis_1acaba49129ac6aeeb0d44e1ff25eb4e22" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void *</type>
        <definition>virtual void * PolarBasis::determine_acceleration_and_potential_thread</definition>
        <argsstring>(void *arg)</argsstring>
        <name>determine_acceleration_and_potential_thread</name>
        <qualifiedname>PolarBasis::determine_acceleration_and_potential_thread</qualifiedname>
        <reimplements refid="class_pot_accel_1a45b09387fd7083e15a11522454f4c4b3">determine_acceleration_and_potential_thread</reimplements>
        <param>
          <type>void *</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
<para>Thread method for accerlation compuation. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/PolarBasis.H" line="386" column="17"/>
      </memberdef>
      <memberdef kind="function" id="class_polar_basis_1a3433ec168c294734e038b126ef4be6f1" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void PolarBasis::determine_coefficients_particles</definition>
        <argsstring>(void)</argsstring>
        <name>determine_coefficients_particles</name>
        <qualifiedname>PolarBasis::determine_coefficients_particles</qualifiedname>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Compute the coefficients from particles. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/PolarBasis.H" line="132" column="16"/>
      </memberdef>
      <memberdef kind="function" id="class_polar_basis_1a64b464f89b72cc7755f75e828a9a6a87" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void PolarBasis::determine_coefficients_playback</definition>
        <argsstring>(void)</argsstring>
        <name>determine_coefficients_playback</name>
        <qualifiedname>PolarBasis::determine_coefficients_playback</qualifiedname>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Compute the coefficients from an table. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/PolarBasis.H" line="135" column="16"/>
      </memberdef>
      <memberdef kind="function" id="class_polar_basis_1a45f4b62afcdfcfcefdfefdbcab34e754" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void *</type>
        <definition>virtual void * PolarBasis::determine_coefficients_thread</definition>
        <argsstring>(void *arg)</argsstring>
        <name>determine_coefficients_thread</name>
        <qualifiedname>PolarBasis::determine_coefficients_thread</qualifiedname>
        <reimplements refid="class_pot_accel_1a28536cd936e5c94562d5bccff2470d49">determine_coefficients_thread</reimplements>
        <param>
          <type>void *</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
<para>Thread method for coefficient accumulation. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/PolarBasis.H" line="129" column="17"/>
      </memberdef>
      <memberdef kind="function" id="class_polar_basis_1a2ab3b12283586fff2210ef28df12f834" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void PolarBasis::dump_coefs_all</definition>
        <argsstring>(ostream &amp;)</argsstring>
        <name>dump_coefs_all</name>
        <qualifiedname>PolarBasis::dump_coefs_all</qualifiedname>
        <param>
          <type>ostream &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Dump current coefficients (all multistep levels) For debugging . . . </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/PolarBasis.H" line="455" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_polar_basis_1a4ccfeea60a5f68a4f7b3a5034f4e3d1d" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void PolarBasis::get_dens_coefs</definition>
        <argsstring>(int m, Eigen::VectorXd &amp;coef, double &amp;p)</argsstring>
        <name>get_dens_coefs</name>
        <qualifiedname>PolarBasis::get_dens_coefs</qualifiedname>
        <param>
          <type>int</type>
          <declname>m</declname>
        </param>
        <param>
          <type>Eigen::VectorXd &amp;</type>
          <declname>coef</declname>
        </param>
        <param>
          <type>double &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
<para>Get density from coefficient vector. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/PolarBasis.H" line="117" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_polar_basis_1adacb1bb523e1ed452d7075cf6b97135f" prot="protected" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void PolarBasis::get_pot</definition>
        <argsstring>(Eigen::MatrixXd &amp;Vc, Eigen::MatrixXd &amp;Vs, double r, double z)=0</argsstring>
        <name>get_pot</name>
        <qualifiedname>PolarBasis::get_pot</qualifiedname>
        <reimplementedby refid="class_c_b_disk_1a14ea57104484741b6934b807e1505e3d">get_pot</reimplementedby>
        <reimplementedby refid="class_flat_disk_1a4d17639bc22514aa13b0c20ddc62c315">get_pot</reimplementedby>
        <param>
          <type>Eigen::MatrixXd &amp;</type>
          <declname>Vc</declname>
        </param>
        <param>
          <type>Eigen::MatrixXd &amp;</type>
          <declname>Vs</declname>
        </param>
        <param>
          <type>double</type>
          <declname>r</declname>
        </param>
        <param>
          <type>double</type>
          <declname>z</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/PolarBasis.H" line="188" column="16"/>
      </memberdef>
      <memberdef kind="function" id="class_polar_basis_1ae13b2d394784b9344d9ec473c5f2d781" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void PolarBasis::get_pot_coefs</definition>
        <argsstring>(int m, const Eigen::VectorXd &amp;coef, double &amp;p, double &amp;dpr, double &amp;dprz)</argsstring>
        <name>get_pot_coefs</name>
        <qualifiedname>PolarBasis::get_pot_coefs</qualifiedname>
        <param>
          <type>int</type>
          <declname>m</declname>
        </param>
        <param>
          <type>const Eigen::VectorXd &amp;</type>
          <declname>coef</declname>
        </param>
        <param>
          <type>double &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>double &amp;</type>
          <declname>dpr</declname>
        </param>
        <param>
          <type>double &amp;</type>
          <declname>dprz</declname>
        </param>
        <briefdescription>
<para>Get potential and accel field values from coefficients. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/PolarBasis.H" line="108" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_polar_basis_1af5eabfde1ceca1aab0df39bf82bd99c3" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void PolarBasis::get_pot_coefs_safe</definition>
        <argsstring>(int m, const Eigen::VectorXd &amp;coef, double &amp;p, double &amp;dpr, double &amp;dprz, Eigen::MatrixXd &amp;potd1, Eigen::MatrixXd &amp;dpotr1, Eigen::MatrixXd &amp;dpotz1)</argsstring>
        <name>get_pot_coefs_safe</name>
        <qualifiedname>PolarBasis::get_pot_coefs_safe</qualifiedname>
        <param>
          <type>int</type>
          <declname>m</declname>
        </param>
        <param>
          <type>const Eigen::VectorXd &amp;</type>
          <declname>coef</declname>
        </param>
        <param>
          <type>double &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>double &amp;</type>
          <declname>dpr</declname>
        </param>
        <param>
          <type>double &amp;</type>
          <declname>dprz</declname>
        </param>
        <param>
          <type>Eigen::MatrixXd &amp;</type>
          <declname>potd1</declname>
        </param>
        <param>
          <type>Eigen::MatrixXd &amp;</type>
          <declname>dpotr1</declname>
        </param>
        <param>
          <type>Eigen::MatrixXd &amp;</type>
          <declname>dpotz1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get potential and field values from coefficients (provide workspace for thread safety) </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/PolarBasis.H" line="112" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_polar_basis_1adfeabbff17849499d42172409cde90ee" prot="protected" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>double</type>
        <definition>virtual double PolarBasis::getRtable</definition>
        <argsstring>()=0</argsstring>
        <name>getRtable</name>
        <qualifiedname>PolarBasis::getRtable</qualifiedname>
        <reimplementedby refid="class_c_b_disk_1ada5af15d64a58e2ad1125b21b518704e">getRtable</reimplementedby>
        <reimplementedby refid="class_flat_disk_1a60547addec40a8e202c206ff94497843">getRtable</reimplementedby>
        <briefdescription>
<para>Get table scale. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/PolarBasis.H" line="198" column="18"/>
      </memberdef>
      <memberdef kind="function" id="class_polar_basis_1a8c667278622aeb6f65dde13da207db7f" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void PolarBasis::init_pca</definition>
        <argsstring>()</argsstring>
        <name>init_pca</name>
        <qualifiedname>PolarBasis::init_pca</qualifiedname>
        <briefdescription>
<para>Initialize for PCA variance computation. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/PolarBasis.H" line="102" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_polar_basis_1a5b49aa8ebe308a9f089b52478ee4db11" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void PolarBasis::initialize</definition>
        <argsstring>()</argsstring>
        <name>initialize</name>
        <qualifiedname>PolarBasis::initialize</qualifiedname>
        <reimplements refid="class_pot_accel_1ada60d03bc82b8740fc7275d4c3f2149d">initialize</reimplements>
        <reimplementedby refid="class_c_b_disk_1a5ad6907893c4b46cf8a74737a70e02fa">initialize</reimplementedby>
        <reimplementedby refid="class_flat_disk_1a99ce7aa447bc828ce26a69cf18136556">initialize</reimplementedby>
        <briefdescription>
<para>Initialize method. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/PolarBasis.H" line="92" column="16"/>
      </memberdef>
      <memberdef kind="function" id="class_polar_basis_1a346801a54ca434a9f63809bfbbf53f82" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void PolarBasis::setup</definition>
        <argsstring>()</argsstring>
        <name>setup</name>
        <qualifiedname>PolarBasis::setup</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Should be called by derived classes after initialization (does nothing here) </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/PolarBasis.H" line="99" column="8" bodyfile="/home/weinberg/Projects/EXP/src/PolarBasis.H" bodystart="99" bodyend="99"/>
      </memberdef>
      <memberdef kind="function" id="class_polar_basis_1af82e9d72d652c4babad6846229afbbe4" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void PolarBasis::setup_accumulation</definition>
        <argsstring>(int mlevel)</argsstring>
        <name>setup_accumulation</name>
        <qualifiedname>PolarBasis::setup_accumulation</qualifiedname>
        <param>
          <type>int</type>
          <declname>mlevel</declname>
        </param>
        <briefdescription>
<para>Clear arrays for accumulation. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/PolarBasis.H" line="105" column="8"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_polar_basis_1acb8cf13811dc3e6d8556b70d00a4d8c6" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void PolarBasis::determine_acceleration_and_potential</definition>
        <argsstring>(void)</argsstring>
        <name>determine_acceleration_and_potential</name>
        <qualifiedname>PolarBasis::determine_acceleration_and_potential</qualifiedname>
        <reimplements refid="class_basis_1abb4dbfbe9c234f44b1719a4d89dc3951">determine_acceleration_and_potential</reimplements>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Required member to compute accleration and potential with threading. </para>
        </briefdescription>
        <detaileddescription>
<para>The thread member must be supplied by the derived class </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/PolarBasis.H" line="518" column="16"/>
      </memberdef>
      <memberdef kind="function" id="class_polar_basis_1a6e26e359a05e6860626196e156475b6b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void PolarBasis::determine_coefficients</definition>
        <argsstring>(Component *c)</argsstring>
        <name>determine_coefficients</name>
        <qualifiedname>PolarBasis::determine_coefficients</qualifiedname>
        <reimplements refid="class_pot_accel_1a3a9722c6b123ba2a0dd3671dec6cf724">determine_coefficients</reimplements>
        <param>
          <type><ref refid="class_component" kindref="compound">Component</ref> *</type>
          <declname>c</declname>
        </param>
        <briefdescription>
<para>Compute coefficients with threading using the provided component. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/PolarBasis.H" line="513" column="16" bodyfile="/home/weinberg/Projects/EXP/src/PolarBasis.H" bodystart="513" bodyend="514"/>
        <references refid="class_pot_accel_1afa2cd3b0bf51e23d8bfc54aac73ef010" compoundref="_pot_accel_8_h" startline="59">PotAccel::cC</references>
        <references refid="class_polar_basis_1ad124f3ba09e1b792053c736294f6ddb7">determine_coefficients</references>
      </memberdef>
      <memberdef kind="function" id="class_polar_basis_1ad124f3ba09e1b792053c736294f6ddb7" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void PolarBasis::determine_coefficients</definition>
        <argsstring>(void)</argsstring>
        <name>determine_coefficients</name>
        <qualifiedname>PolarBasis::determine_coefficients</qualifiedname>
        <reimplements refid="class_pot_accel_1a30dac3c15c2a7a67e9860e086cda27b8">determine_coefficients</reimplements>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Required member to compute coeifficients with threading. </para>
        </briefdescription>
        <detaileddescription>
<para>The thread member must be supplied by the derived class </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/PolarBasis.H" line="510" column="16"/>
        <referencedby refid="class_polar_basis_1a6e26e359a05e6860626196e156475b6b" compoundref="_polar_basis_8_h" startline="513" endline="514">determine_coefficients</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_polar_basis_1a05e6a24b91fd7c8239bffa2df1bb9004" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void PolarBasis::determine_fields_at_point</definition>
        <argsstring>(double x, double y, double z, double *tdens0, double *tpotl0, double *tdens, double *tpotl, double *tpotx, double *tpoty, double *tpotz)</argsstring>
        <name>determine_fields_at_point</name>
        <qualifiedname>PolarBasis::determine_fields_at_point</qualifiedname>
        <reimplements refid="class_basis_1a8d4bece8ddfe81223177e63d76779284">determine_fields_at_point</reimplements>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <param>
          <type>double</type>
          <declname>y</declname>
        </param>
        <param>
          <type>double</type>
          <declname>z</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>tdens0</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>tpotl0</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>tdens</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>tpotl</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>tpotx</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>tpoty</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>tpotz</declname>
        </param>
        <briefdescription>
<para>Return the value for the fields in Cartesian coordinates. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/PolarBasis.H" line="583" column="9"/>
      </memberdef>
      <memberdef kind="function" id="class_polar_basis_1aeef7e49e923b2a7bd510c99f10cdb19e" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void PolarBasis::determine_fields_at_point_cyl</definition>
        <argsstring>(double r, double z, double phi, double *tdens0, double *tpotl0, double *tdens, double *tpotl, double *tpotr, double *tpotz, double *tpotp)</argsstring>
        <name>determine_fields_at_point_cyl</name>
        <qualifiedname>PolarBasis::determine_fields_at_point_cyl</qualifiedname>
        <reimplements refid="class_basis_1a3bcc5e3250f82d0ce476b096eabf342a">determine_fields_at_point_cyl</reimplements>
        <param>
          <type>double</type>
          <declname>r</declname>
        </param>
        <param>
          <type>double</type>
          <declname>z</declname>
        </param>
        <param>
          <type>double</type>
          <declname>phi</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>tdens0</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>tpotl0</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>tdens</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>tpotl</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>tpotr</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>tpotz</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>tpotp</declname>
        </param>
        <briefdescription>
<para>Returns the potential, its derivatives &amp; density in cylindrical coords. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/PolarBasis.H" line="597" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_polar_basis_1a4d396e0af9e54f2f09009f05a5d95672" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void PolarBasis::determine_fields_at_point_sph</definition>
        <argsstring>(double r, double theta, double phi, double *tdens0, double *tpotl0, double *tdens, double *tpotl, double *tpotr, double *tpott, double *tpotp)</argsstring>
        <name>determine_fields_at_point_sph</name>
        <qualifiedname>PolarBasis::determine_fields_at_point_sph</qualifiedname>
        <reimplements refid="class_basis_1a34f7d4340bcd0c5452f430cebf5c3665">determine_fields_at_point_sph</reimplements>
        <param>
          <type>double</type>
          <declname>r</declname>
        </param>
        <param>
          <type>double</type>
          <declname>theta</declname>
        </param>
        <param>
          <type>double</type>
          <declname>phi</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>tdens0</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>tpotl0</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>tdens</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>tpotl</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>tpotr</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>tpott</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>tpotp</declname>
        </param>
        <briefdescription>
<para>Returns the potential, its derivatives &amp; density in spherical coords. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/PolarBasis.H" line="590" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_polar_basis_1a4326226fbd3814c1b159c9a8d1714dc9" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void PolarBasis::dump_coefs</definition>
        <argsstring>(ostream &amp;)</argsstring>
        <name>dump_coefs</name>
        <qualifiedname>PolarBasis::dump_coefs</qualifiedname>
        <reimplements refid="class_pot_accel_1a10f4dd971b1a056bb6dacf01f2e2bcbf">dump_coefs</reimplements>
        <param>
          <type>ostream &amp;</type>
        </param>
        <briefdescription>
<para>Dump current coefficients. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/PolarBasis.H" line="606" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_polar_basis_1aa99664ea268f363763f3577416ae367c" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void PolarBasis::dump_coefs_h5</definition>
        <argsstring>(const std::string &amp;file)</argsstring>
        <name>dump_coefs_h5</name>
        <qualifiedname>PolarBasis::dump_coefs_h5</qualifiedname>
        <reimplements refid="class_pot_accel_1ac53a3ab4bdfa2be33fbe4286b939230c">dump_coefs_h5</reimplements>
        <param>
          <type>const std::string &amp;</type>
          <declname>file</declname>
        </param>
        <briefdescription>
<para>Dump current coefficients into named HDF5 file. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/PolarBasis.H" line="609" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_polar_basis_1af3ccc880f0cc299abc8c603c7e9778e9" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void PolarBasis::get_acceleration_and_potential</definition>
        <argsstring>(Component *cC)</argsstring>
        <name>get_acceleration_and_potential</name>
        <qualifiedname>PolarBasis::get_acceleration_and_potential</qualifiedname>
        <reimplements refid="class_pot_accel_1ab78f20762031db204f636fc8e74ea986">get_acceleration_and_potential</reimplements>
        <param>
          <type><ref refid="class_component" kindref="compound">Component</ref> *</type>
          <declname>cC</declname>
        </param>
        <briefdescription>
<para>Required member to compute accelration and potential. </para>
        </briefdescription>
        <detaileddescription>
<para>This implemenation should be fine for most cases </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/PolarBasis.H" line="506" column="16"/>
      </memberdef>
      <memberdef kind="function" id="class_polar_basis_1a7e4f51d9a6cb765a29e4a90c6020b3fe" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void PolarBasis::get_dens</definition>
        <argsstring>(double r, double z, Eigen::MatrixXd &amp;d, int tid)=0</argsstring>
        <name>get_dens</name>
        <qualifiedname>PolarBasis::get_dens</qualifiedname>
        <reimplementedby refid="class_c_b_disk_1aee6e15ba0b5c67150d23e0dc720fa2b3">get_dens</reimplementedby>
        <reimplementedby refid="class_flat_disk_1a661d3b56742b8816e6ddb5ef60a1764d">get_dens</reimplementedby>
        <param>
          <type>double</type>
          <declname>r</declname>
        </param>
        <param>
          <type>double</type>
          <declname>z</declname>
        </param>
        <param>
          <type>Eigen::MatrixXd &amp;</type>
          <declname>d</declname>
        </param>
        <param>
          <type>int</type>
          <declname>tid</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get derivative of potential <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>r</parametername>
</parameternamelist>
<parameterdescription>
<para>is the evaluation radius </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>z</parametername>
</parameternamelist>
<parameterdescription>
<para>is the evaluation height </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>d</parametername>
</parameternamelist>
<parameterdescription>
<para>will be returned array in harmonics l and radial order n for the density </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>tid</parametername>
</parameternamelist>
<parameterdescription>
<para>is the thread enumerator that allows the function to provide some thread safety </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/PolarBasis.H" line="567" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_polar_basis_1a35dcc79a47abe1c6de84dbdb9203896d" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void PolarBasis::get_dpotl</definition>
        <argsstring>(double r, double z, Eigen::MatrixXd &amp;p, Eigen::MatrixXd &amp;dpr, Eigen::MatrixXd &amp;dpz, int tid)=0</argsstring>
        <name>get_dpotl</name>
        <qualifiedname>PolarBasis::get_dpotl</qualifiedname>
        <reimplementedby refid="class_c_b_disk_1a38663aa86ab5a642b78a2ab929584181">get_dpotl</reimplementedby>
        <reimplementedby refid="class_flat_disk_1a22f0831bd87fafebf499abc0556c0d60">get_dpotl</reimplementedby>
        <param>
          <type>double</type>
          <declname>r</declname>
        </param>
        <param>
          <type>double</type>
          <declname>z</declname>
        </param>
        <param>
          <type>Eigen::MatrixXd &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>Eigen::MatrixXd &amp;</type>
          <declname>dpr</declname>
        </param>
        <param>
          <type>Eigen::MatrixXd &amp;</type>
          <declname>dpz</declname>
        </param>
        <param>
          <type>int</type>
          <declname>tid</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get derivative of potential <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>r</parametername>
</parameternamelist>
<parameterdescription>
<para>is the evaluation radius </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>z</parametername>
</parameternamelist>
<parameterdescription>
<para>is the evaluation height </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p</parametername>
</parameternamelist>
<parameterdescription>
<para>will be returned array in harmonics l and radial order n for the potential </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dpr</parametername>
</parameternamelist>
<parameterdescription>
<para>will be returned array in harmonics l and radial order n for the derivative of the potential </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dpz</parametername>
</parameternamelist>
<parameterdescription>
<para>will be returned array in harmonics l and radial order n for the derivative of the potential </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>tid</parametername>
</parameternamelist>
<parameterdescription>
<para>is the thread enumerator that allows the function to provide some thread safety </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/PolarBasis.H" line="544" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_polar_basis_1a5bd90a17ffb1b1f7e06fdb9a9861b9e9" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void PolarBasis::get_potl</definition>
        <argsstring>(double r, double z, Eigen::MatrixXd &amp;p, int tid)=0</argsstring>
        <name>get_potl</name>
        <qualifiedname>PolarBasis::get_potl</qualifiedname>
        <reimplementedby refid="class_c_b_disk_1a8ac1e7c2a2efee6990cc31ca6c53f9a1">get_potl</reimplementedby>
        <reimplementedby refid="class_flat_disk_1adfae4fe4709805480d401787378b14ef">get_potl</reimplementedby>
        <param>
          <type>double</type>
          <declname>r</declname>
        </param>
        <param>
          <type>double</type>
          <declname>z</declname>
        </param>
        <param>
          <type>Eigen::MatrixXd &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>int</type>
          <declname>tid</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get derivative of potential <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>r</parametername>
</parameternamelist>
<parameterdescription>
<para>is the evaluation radius </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>z</parametername>
</parameternamelist>
<parameterdescription>
<para>is the evaluation height </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p</parametername>
</parameternamelist>
<parameterdescription>
<para>will be returned array in harmonics l and radial order n for the potential </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>tid</parametername>
</parameternamelist>
<parameterdescription>
<para>is the thread enumerator that allows the function to provide some thread safety </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/PolarBasis.H" line="556" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_polar_basis_1ae897c7f6610ad01ab9c69d47e836d3dd" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void PolarBasis::get_potl_dens</definition>
        <argsstring>(double r, double z, Eigen::MatrixXd &amp;p, Eigen::MatrixXd &amp;d, int tid)=0</argsstring>
        <name>get_potl_dens</name>
        <qualifiedname>PolarBasis::get_potl_dens</qualifiedname>
        <reimplementedby refid="class_c_b_disk_1a1dd056d9fc6501b320a84ad51bf58771">get_potl_dens</reimplementedby>
        <reimplementedby refid="class_flat_disk_1a9fbcdede578288260d155e0033de33d1">get_potl_dens</reimplementedby>
        <param>
          <type>double</type>
          <declname>r</declname>
        </param>
        <param>
          <type>double</type>
          <declname>z</declname>
        </param>
        <param>
          <type>Eigen::MatrixXd &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>Eigen::MatrixXd &amp;</type>
          <declname>d</declname>
        </param>
        <param>
          <type>int</type>
          <declname>tid</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the potential and density <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>r</parametername>
</parameternamelist>
<parameterdescription>
<para>is the evaluation radius </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p</parametername>
</parameternamelist>
<parameterdescription>
<para>will be returned array in harmonics l and radial order n for the potential </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>d</parametername>
</parameternamelist>
<parameterdescription>
<para>will be returned array in harmonics l and radial order n for the density </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>tid</parametername>
</parameternamelist>
<parameterdescription>
<para>is the thread enumerator that allows the function to provide some thread safety </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/PolarBasis.H" line="579" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_polar_basis_1a74b322e6f5894af06076c62f7a3e9a87" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>double</type>
        <definition>virtual double PolarBasis::knl</definition>
        <argsstring>(int, int)</argsstring>
        <name>knl</name>
        <qualifiedname>PolarBasis::knl</qualifiedname>
        <param>
          <type>int</type>
        </param>
        <param>
          <type>int</type>
        </param>
        <briefdescription>
<para>Kernel value for recursion relation basis. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/PolarBasis.H" line="603" column="18" bodyfile="/home/weinberg/Projects/EXP/src/PolarBasis.H" bodystart="603" bodyend="603"/>
      </memberdef>
      <memberdef kind="function" id="class_polar_basis_1a176f79dfddda7dae31a595259abf797b" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void PolarBasis::multistep_reset</definition>
        <argsstring>()</argsstring>
        <name>multistep_reset</name>
        <qualifiedname>PolarBasis::multistep_reset</qualifiedname>
        <reimplements refid="class_axisymmetric_basis_1a93d8a3c0e104139477fec734a6baf8e6">multistep_reset</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Update the multi time step coefficient table when moving particle <computeroutput>i</computeroutput> from level <computeroutput>cur</computeroutput> to level <computeroutput>next</computeroutput> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/PolarBasis.H" line="525" column="16"/>
      </memberdef>
      <memberdef kind="function" id="class_polar_basis_1abd587da712635ad6b559671f10fa5b32" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void PolarBasis::multistep_update</definition>
        <argsstring>(int cur, int next, Component *c, int i, int id)</argsstring>
        <name>multistep_update</name>
        <qualifiedname>PolarBasis::multistep_update</qualifiedname>
        <reimplements refid="class_pot_accel_1aa6c3661783144fd643ebaf1a2fa6278a">multistep_update</reimplements>
        <param>
          <type>int</type>
          <declname>cur</declname>
        </param>
        <param>
          <type>int</type>
          <declname>next</declname>
        </param>
        <param>
          <type><ref refid="class_component" kindref="compound">Component</ref> *</type>
          <declname>c</declname>
        </param>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <param>
          <type>int</type>
          <declname>id</declname>
        </param>
        <briefdescription>
<para>Implementation of level shifts. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/PolarBasis.H" line="527" column="16"/>
      </memberdef>
      <memberdef kind="function" id="class_polar_basis_1ad8614d1a76923db9331a1080fdc7cf2b" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void PolarBasis::multistep_update_begin</definition>
        <argsstring>()</argsstring>
        <name>multistep_update_begin</name>
        <qualifiedname>PolarBasis::multistep_update_begin</qualifiedname>
        <reimplements refid="class_pot_accel_1a0e720b605350a9fb4e0d24dae2a1c381">multistep_update_begin</reimplements>
        <briefdescription>
<para>Execute to begin level shifts for particles. </para>
        </briefdescription>
        <detaileddescription>
<para>Update the multi time step force algorithm when moving particle <computeroutput>i</computeroutput> from level <computeroutput>cur</computeroutput> to level <computeroutput>next</computeroutput> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/PolarBasis.H" line="526" column="16"/>
      </memberdef>
      <memberdef kind="function" id="class_polar_basis_1aea28de3f69eb403dab0bd5049e71d04e" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void PolarBasis::multistep_update_finish</definition>
        <argsstring>()</argsstring>
        <name>multistep_update_finish</name>
        <qualifiedname>PolarBasis::multistep_update_finish</qualifiedname>
        <reimplements refid="class_pot_accel_1acb0c9d88466949f2bf84da42439f2a1e">multistep_update_finish</reimplements>
        <briefdescription>
<para>Execute to finish level shifts for particles. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/PolarBasis.H" line="528" column="16"/>
      </memberdef>
      <memberdef kind="function" id="class_polar_basis_1a45940af63c3a13154e29504458495c9d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>PolarBasis::PolarBasis</definition>
        <argsstring>(Component *c0, const YAML::Node &amp;conf, MixtureBasis *m=0)</argsstring>
        <name>PolarBasis</name>
        <qualifiedname>PolarBasis::PolarBasis</qualifiedname>
        <param>
          <type><ref refid="class_component" kindref="compound">Component</ref> *</type>
          <declname>c0</declname>
        </param>
        <param>
          <type>const YAML::Node &amp;</type>
          <declname>conf</declname>
        </param>
        <param>
          <type><ref refid="class_mixture_basis" kindref="compound">MixtureBasis</ref> *</type>
          <declname>m</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Constructor (<computeroutput>line</computeroutput> contains the paramter list) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/PolarBasis.H" line="496" column="3"/>
      </memberdef>
      <memberdef kind="function" id="class_polar_basis_1aaa494cc1d1daa18fc49e97afc5921df0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>PolarBasis::PolarBasis</definition>
        <argsstring>(const PolarBasis &amp;p)</argsstring>
        <name>PolarBasis</name>
        <qualifiedname>PolarBasis::PolarBasis</qualifiedname>
        <param>
          <type>const <ref refid="class_polar_basis" kindref="compound">PolarBasis</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
<para>Copy constructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/PolarBasis.H" line="499" column="3"/>
      </memberdef>
      <memberdef kind="function" id="class_polar_basis_1aea22978a077e0f22f369e48e96ef6af1" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual PolarBasis::~PolarBasis</definition>
        <argsstring>()</argsstring>
        <name>~PolarBasis</name>
        <qualifiedname>PolarBasis::~PolarBasis</qualifiedname>
        <briefdescription>
<para>Destructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/PolarBasis.H" line="502" column="11"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Defines a cylindrical basis with members specific to polar symmetry</para>
<para>Configurable parameters:</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>scale</parametername>
</parameternamelist>
<parameterdescription>
<para>is the characterisic scale of the basis </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rmin</parametername>
</parameternamelist>
<parameterdescription>
<para>is the minimum radius of the basis </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rmax</parametername>
</parameternamelist>
<parameterdescription>
<para>is the maximum radius of the basis </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>self_consistent</parametername>
</parameternamelist>
<parameterdescription>
<para>true for updating the the coefficients at time steps </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NO_M0</parametername>
</parameternamelist>
<parameterdescription>
<para>true to omit the m=0 harmonic (default: false) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NO_M1</parametername>
</parameternamelist>
<parameterdescription>
<para>true to omit the m=1 harmonic (default: false) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NO_MONO</parametername>
</parameternamelist>
<parameterdescription>
<para>true to omit the monopole off-grid force algorithm (default: false) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>EVEN_M</parametername>
</parameternamelist>
<parameterdescription>
<para>true to include only even m harmonics (default: false) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>M0_ONLY</parametername>
</parameternamelist>
<parameterdescription>
<para>true to include only the m=0 harmonic (default: false) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>M0_BACK</parametername>
</parameternamelist>
<parameterdescription>
<para>true includes fixed m=0 harmonic (default: false) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ssfrac</parametername>
</parameternamelist>
<parameterdescription>
<para>set &gt; 0.0 to compute a fraction of particles only </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>playback</parametername>
</parameternamelist>
<parameterdescription>
<para>true to replay from a coefficient file </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>coefMaster</parametername>
</parameternamelist>
<parameterdescription>
<para>true to have only the root node read and distribute the coefficients</para>
</parameterdescription>
</parameteritem>
</parameterlist>
Other parameters may be defined and passed to any derived classes in addition to these. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>AxisymmetricBasis</label>
        <link refid="class_axisymmetric_basis"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>Basis</label>
        <link refid="class_basis"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>CBDisk</label>
        <link refid="class_c_b_disk"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>FlatDisk</label>
        <link refid="class_flat_disk"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>PolarBasis</label>
        <link refid="class_polar_basis"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>PotAccel</label>
        <link refid="class_pot_accel"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>AxisymmetricBasis</label>
        <link refid="class_axisymmetric_basis"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>Basis</label>
        <link refid="class_basis"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>Component</label>
        <link refid="class_component"/>
        <childnode refid="6" relation="usage">
          <edgelabel>c0</edgelabel>
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>force</edgelabel>
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>orient</edgelabel>
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>time_so_far</edgelabel>
        </childnode>
      </node>
      <node id="8">
        <label>EL3</label>
        <link refid="class_e_l3"/>
      </node>
      <node id="14">
        <label>MixtureBasis</label>
        <link refid="class_mixture_basis"/>
        <childnode refid="15" relation="usage">
          <edgelabel>p</edgelabel>
        </childnode>
      </node>
      <node id="7">
        <label>Orient</label>
        <link refid="class_orient"/>
        <childnode refid="8" relation="usage">
          <edgelabel>t</edgelabel>
        </childnode>
      </node>
      <node id="1">
        <label>PolarBasis</label>
        <link refid="class_polar_basis"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="10" relation="usage">
          <edgelabel>covV</edgelabel>
        </childnode>
        <childnode refid="12" relation="usage">
          <edgelabel>covM</edgelabel>
        </childnode>
        <childnode refid="14" relation="usage">
          <edgelabel>mix</edgelabel>
        </childnode>
      </node>
      <node id="12">
        <label>PolarBasis::CoefMatrix</label>
        <link refid="struct_polar_basis_1_1_coef_matrix"/>
        <childnode refid="13" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10">
        <label>PolarBasis::CoefVector</label>
        <link refid="struct_polar_basis_1_1_coef_vector"/>
        <childnode refid="11" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>PotAccel</label>
        <link refid="class_pot_accel"/>
        <childnode refid="5" relation="usage">
          <edgelabel>td</edgelabel>
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>cC</edgelabel>
          <edgelabel>component</edgelabel>
        </childnode>
      </node>
      <node id="9">
        <label>Timer</label>
        <link refid="class_timer"/>
      </node>
      <node id="15">
        <label>TwoCenter</label>
        <link refid="class_two_center"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>exp_in</edgelabel>
          <edgelabel>exp_out</edgelabel>
        </childnode>
        <childnode refid="14" relation="usage">
          <edgelabel>mix_in</edgelabel>
          <edgelabel>mix_out</edgelabel>
        </childnode>
      </node>
      <node id="13">
        <label>std::vector&lt; std::vector&lt; MatrixM &gt; &gt;</label>
      </node>
      <node id="11">
        <label>std::vector&lt; std::vector&lt; VectorM &gt; &gt;</label>
      </node>
      <node id="5">
        <label>thrd_pass_PotAccel</label>
        <link refid="structthrd__pass___pot_accel"/>
        <childnode refid="4" relation="usage">
          <edgelabel>t</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/weinberg/Projects/EXP/src/PolarBasis.H" line="47" column="1" bodyfile="/home/weinberg/Projects/EXP/src/PolarBasis.H" bodystart="48" bodyend="610"/>
    <listofallmembers>
      <member refid="class_pot_accel_1a6a637997f73ca85ce78d8c92eec7ad1b" prot="public" virt="non-virtual"><scope>PolarBasis</scope><name>atol</name></member>
      <member refid="class_axisymmetric_basis_1ab965e325410d79d567903f51dd2c6dd0" prot="public" virt="non-virtual"><scope>PolarBasis</scope><name>AxisymmetricBasis</name></member>
      <member refid="class_axisymmetric_basis_1aa4fc18ccf44bdf56ac60b7caa68b1cfc" prot="private" virt="non-virtual"><scope>PolarBasis</scope><name>b_Hall</name></member>
      <member refid="class_polar_basis_1a89ded72802c057e9900f24d493f9dce3" prot="protected" virt="virtual"><scope>PolarBasis</scope><name>background</name></member>
      <member refid="class_basis_1a3deeb360a898d1c144f7f6ad44813b3e" prot="public" virt="non-virtual"><scope>PolarBasis</scope><name>Basis</name></member>
      <member refid="class_pot_accel_1afa2cd3b0bf51e23d8bfc54aac73ef010" prot="protected" virt="non-virtual"><scope>PolarBasis</scope><name>cC</name></member>
      <member refid="class_pot_accel_1a630b9cdcae4ed4915cc72179fe9821c6" prot="public" virt="non-virtual"><scope>PolarBasis</scope><name>cc_lock</name></member>
      <member refid="class_polar_basis_1ac71935d93632a102114d3f7d3cc52656" prot="protected" virt="virtual"><scope>PolarBasis</scope><name>check_range</name></member>
      <member refid="class_pot_accel_1a944213bbf31fca1508ba817e392b9fc6" prot="public" virt="non-virtual"><scope>PolarBasis</scope><name>ClearExternal</name></member>
      <member refid="class_polar_basis_1a88caee4e6225bee5a620dd123944641a" prot="protected" virt="non-virtual"><scope>PolarBasis</scope><name>cmagic</name></member>
      <member refid="class_pot_accel_1ac7ab5e578b5b2bbd29fe35738b03d771" prot="protected" virt="non-virtual"><scope>PolarBasis</scope><name>coef_dump</name></member>
      <member refid="class_polar_basis_1a41aced55714de2c225f7a2f19fe3b596" prot="protected" virt="non-virtual"><scope>PolarBasis</scope><name>coefMaster</name></member>
      <member refid="class_pot_accel_1aa6d9bde455e08dc9fead4f152357cb15" prot="protected" virt="non-virtual"><scope>PolarBasis</scope><name>component</name></member>
      <member refid="class_pot_accel_1a49e2936503ffdad1dd86d3f0c934d25a" prot="public" virt="non-virtual"><scope>PolarBasis</scope><name>compute</name></member>
      <member refid="class_polar_basis_1ab837dfe291f4c04c498805ad3d7899a5" prot="protected" virt="non-virtual"><scope>PolarBasis</scope><name>compute_multistep_coefficients</name></member>
      <member refid="class_pot_accel_1ab682d4480d7d2946a7bef7f93ac0c6a0" prot="protected" virt="non-virtual"><scope>PolarBasis</scope><name>conf</name></member>
      <member refid="class_polar_basis_1a371112797397668b15ab41e65386f738" prot="public" virt="non-virtual"><scope>PolarBasis</scope><name>ContribArray</name></member>
      <member refid="class_polar_basis_1adfedd329d82bf29612dc7effb68d6527" prot="protected" virt="non-virtual"><scope>PolarBasis</scope><name>cos_coef_lock</name></member>
      <member refid="class_polar_basis_1a476114987ab874ce8846014720e83746" prot="protected" virt="non-virtual"><scope>PolarBasis</scope><name>cosm</name></member>
      <member refid="class_axisymmetric_basis_1a7bd4492f833f728f99891d38b7493631" prot="private" virt="non-virtual"><scope>PolarBasis</scope><name>covar</name></member>
      <member refid="class_polar_basis_1af841dfe17fd179e7cad33616f9584a0c" prot="protected" virt="non-virtual"><scope>PolarBasis</scope><name>covM</name></member>
      <member refid="class_polar_basis_1acf405ea76324f560aa152c596de1228c" prot="protected" virt="non-virtual"><scope>PolarBasis</scope><name>covV</name></member>
      <member refid="class_pot_accel_1ad55d9279ca0e8318bfe1a95d1c7566fda489785884cf0770efb348b919878bf23" prot="public" virt="non-virtual"><scope>PolarBasis</scope><name>cube</name></member>
      <member refid="class_pot_accel_1ac4def6f1c9318d8b49e62a4c9f2d6786" prot="protected" virt="non-virtual"><scope>PolarBasis</scope><name>cuda_aware</name></member>
      <member refid="class_pot_accel_1a5029810ccad93845aab9919e005bafe0" prot="public" virt="non-virtual"><scope>PolarBasis</scope><name>cudaAware</name></member>
      <member refid="class_axisymmetric_basis_1a739cec07895fdd02850006d6a52639a8" prot="private" virt="non-virtual"><scope>PolarBasis</scope><name>cuml</name></member>
      <member refid="class_axisymmetric_basis_1a5665efe4d9ba08fd8e173a7aa6cf77b6a1dbf0ed28469f49a393a25a7b67753c3" prot="public" virt="non-virtual"><scope>PolarBasis</scope><name>CumulativeCut</name></member>
      <member refid="class_pot_accel_1a823dbb4c07cab1541d7ee738c6baef99" prot="protected" virt="non-virtual"><scope>PolarBasis</scope><name>current_keys</name></member>
      <member refid="class_polar_basis_1a79001ab9c1f4d7756828473039736910" prot="protected" virt="non-virtual"><scope>PolarBasis</scope><name>cylCoefs</name></member>
      <member refid="class_pot_accel_1ad55d9279ca0e8318bfe1a95d1c7566fdac215da2d633c31e7278fb1a3dd6af268" prot="public" virt="non-virtual"><scope>PolarBasis</scope><name>cylinder</name></member>
      <member refid="class_polar_basis_1a08dfe64d5a1733ffe27bde9b1bf16d51" prot="protected" virt="non-virtual"><scope>PolarBasis</scope><name>cylmass</name></member>
      <member refid="class_polar_basis_1aeb57eed94e2c11e9a47ee9786b7c0b1a" prot="protected" virt="non-virtual"><scope>PolarBasis</scope><name>cylmass1</name></member>
      <member refid="class_polar_basis_1a24a24c5e0ab5d4a85ead71fea374f812" prot="protected" virt="non-virtual"><scope>PolarBasis</scope><name>defSampT</name></member>
      <member refid="class_polar_basis_1ae64bf3418e06d65505b66867521abb35" prot="protected" virt="non-virtual"><scope>PolarBasis</scope><name>dend</name></member>
      <member refid="class_polar_basis_1acb8cf13811dc3e6d8556b70d00a4d8c6" prot="public" virt="virtual"><scope>PolarBasis</scope><name>determine_acceleration_and_potential</name></member>
      <member refid="class_polar_basis_1acaba49129ac6aeeb0d44e1ff25eb4e22" prot="protected" virt="virtual"><scope>PolarBasis</scope><name>determine_acceleration_and_potential_thread</name></member>
      <member refid="class_polar_basis_1ad124f3ba09e1b792053c736294f6ddb7" prot="public" virt="virtual"><scope>PolarBasis</scope><name>determine_coefficients</name></member>
      <member refid="class_polar_basis_1a6e26e359a05e6860626196e156475b6b" prot="public" virt="virtual"><scope>PolarBasis</scope><name>determine_coefficients</name></member>
      <member refid="class_polar_basis_1a3433ec168c294734e038b126ef4be6f1" prot="protected" virt="virtual"><scope>PolarBasis</scope><name>determine_coefficients_particles</name></member>
      <member refid="class_polar_basis_1a64b464f89b72cc7755f75e828a9a6a87" prot="protected" virt="virtual"><scope>PolarBasis</scope><name>determine_coefficients_playback</name></member>
      <member refid="class_polar_basis_1a45f4b62afcdfcfcefdfefdbcab34e754" prot="protected" virt="virtual"><scope>PolarBasis</scope><name>determine_coefficients_thread</name></member>
      <member refid="class_polar_basis_1a05e6a24b91fd7c8239bffa2df1bb9004" prot="public" virt="virtual"><scope>PolarBasis</scope><name>determine_fields_at_point</name></member>
      <member refid="class_polar_basis_1aeef7e49e923b2a7bd510c99f10cdb19e" prot="public" virt="virtual"><scope>PolarBasis</scope><name>determine_fields_at_point_cyl</name></member>
      <member refid="class_polar_basis_1a4d396e0af9e54f2f09009f05a5d95672" prot="public" virt="virtual"><scope>PolarBasis</scope><name>determine_fields_at_point_sph</name></member>
      <member refid="class_polar_basis_1afb8531a9c023e49bc2a2c112e47490eb" prot="protected" virt="non-virtual"><scope>PolarBasis</scope><name>differ1</name></member>
      <member refid="class_polar_basis_1a62f0e567cfac40ee6c955aa9b46b331c" prot="protected" virt="non-virtual"><scope>PolarBasis</scope><name>differC1</name></member>
      <member refid="class_polar_basis_1a14b747134e7a5e92e73f2c6cb6570a14" prot="protected" virt="non-virtual"><scope>PolarBasis</scope><name>differS1</name></member>
      <member refid="class_basis_1ad9a9f2f2d18335ae482b1d4e12490d0b" prot="public" virt="non-virtual"><scope>PolarBasis</scope><name>dlegendre_R</name></member>
      <member refid="class_pot_accel_1a6a9ec23d29b553c1625bd8e88fe7692d" prot="public" virt="non-virtual"><scope>PolarBasis</scope><name>dof</name></member>
      <member refid="class_polar_basis_1a90e8f6bee803544cedde1c5334540808" prot="protected" virt="non-virtual"><scope>PolarBasis</scope><name>dpotR</name></member>
      <member refid="class_polar_basis_1ad1b9268b7f03dcbb53afb51d15595875" prot="protected" virt="non-virtual"><scope>PolarBasis</scope><name>dpotZ</name></member>
      <member refid="class_polar_basis_1a4326226fbd3814c1b159c9a8d1714dc9" prot="public" virt="virtual"><scope>PolarBasis</scope><name>dump_coefs</name></member>
      <member refid="class_polar_basis_1a2ab3b12283586fff2210ef28df12f834" prot="protected" virt="non-virtual"><scope>PolarBasis</scope><name>dump_coefs_all</name></member>
      <member refid="class_polar_basis_1aa99664ea268f363763f3577416ae367c" prot="public" virt="virtual"><scope>PolarBasis</scope><name>dump_coefs_h5</name></member>
      <member refid="class_axisymmetric_basis_1a45362e008f1389402494647b75931e1e" prot="private" virt="non-virtual"><scope>PolarBasis</scope><name>eval</name></member>
      <member refid="class_axisymmetric_basis_1ae30dc4a6d54a9b90dbe31e2b03821382" prot="private" virt="non-virtual"><scope>PolarBasis</scope><name>evec</name></member>
      <member refid="class_polar_basis_1a8296f5a47fc5b64f7ca3bd40629996af" prot="protected" virt="non-virtual"><scope>PolarBasis</scope><name>EVEN_M</name></member>
      <member refid="class_pot_accel_1abee9651463af53460b622250d311329e" prot="public" virt="non-virtual"><scope>PolarBasis</scope><name>exp_thread_fork</name></member>
      <member refid="class_axisymmetric_basis_1afae69589bd4f7341ab42b8c48c22b707" prot="protected" virt="non-virtual"><scope>PolarBasis</scope><name>expcoef</name></member>
      <member refid="class_polar_basis_1a15d95a42911345cf8a447f8b87dc0db4" prot="protected" virt="non-virtual"><scope>PolarBasis</scope><name>expcoef0</name></member>
      <member refid="class_axisymmetric_basis_1ad68406307042d772a285f40728a70cf6" prot="protected" virt="non-virtual"><scope>PolarBasis</scope><name>expcoef1</name></member>
      <member refid="class_axisymmetric_basis_1ad60eac81d3f5d960af091345128485a8" prot="protected" virt="non-virtual"><scope>PolarBasis</scope><name>expcoefL</name></member>
      <member refid="class_axisymmetric_basis_1acc9740eafab3aa6d3b935bb310c568bd" prot="protected" virt="non-virtual"><scope>PolarBasis</scope><name>expcoefM</name></member>
      <member refid="class_axisymmetric_basis_1a11d3819929833b80de31120b99912e96" prot="protected" virt="non-virtual"><scope>PolarBasis</scope><name>expcoefM1</name></member>
      <member refid="class_axisymmetric_basis_1abe415ce8067b52c57aeb4beccbd85d7f" prot="protected" virt="non-virtual"><scope>PolarBasis</scope><name>expcoefN</name></member>
      <member refid="class_axisymmetric_basis_1ad344d65e16dfdea9aed2e478185bc8e7" prot="protected" virt="non-virtual"><scope>PolarBasis</scope><name>expcoefP</name></member>
      <member refid="class_axisymmetric_basis_1acd8494e7bb875fc2c8677ca92a0c6f01" prot="protected" virt="non-virtual"><scope>PolarBasis</scope><name>expcoefT</name></member>
      <member refid="class_axisymmetric_basis_1a699990cc53ec82eb867cf9c85cb57f70" prot="protected" virt="non-virtual"><scope>PolarBasis</scope><name>expcoefT1</name></member>
      <member refid="class_axisymmetric_basis_1ae6dd8f205982c2e3ef87f6f467976018" prot="private" virt="non-virtual"><scope>PolarBasis</scope><name>fac02</name></member>
      <member refid="class_polar_basis_1a085b545644798235160406c902100fa1" prot="protected" virt="non-virtual"><scope>PolarBasis</scope><name>firstime_accel</name></member>
      <member refid="class_polar_basis_1a95ad9c40d788c9819e49e82d608dbfe2" prot="protected" virt="non-virtual"><scope>PolarBasis</scope><name>firstime_coef</name></member>
      <member refid="class_pot_accel_1ad55d9279ca0e8318bfe1a95d1c7566fd" prot="public" virt="non-virtual"><scope>PolarBasis</scope><name>Geometry</name></member>
      <member refid="class_pot_accel_1adb6ef0bdae7d3520ca1f9fd8a6d648ea" prot="public" virt="non-virtual"><scope>PolarBasis</scope><name>geometry</name></member>
      <member refid="class_pot_accel_1ade38f6ecdf80f80cde847d463b14909b" prot="public" virt="non-virtual"><scope>PolarBasis</scope><name>geoname</name></member>
      <member refid="class_polar_basis_1af3ccc880f0cc299abc8c603c7e9778e9" prot="public" virt="virtual"><scope>PolarBasis</scope><name>get_acceleration_and_potential</name></member>
      <member refid="class_polar_basis_1a7e4f51d9a6cb765a29e4a90c6020b3fe" prot="public" virt="pure-virtual"><scope>PolarBasis</scope><name>get_dens</name></member>
      <member refid="class_polar_basis_1a4ccfeea60a5f68a4f7b3a5034f4e3d1d" prot="protected" virt="non-virtual"><scope>PolarBasis</scope><name>get_dens_coefs</name></member>
      <member refid="class_polar_basis_1a35dcc79a47abe1c6de84dbdb9203896d" prot="public" virt="pure-virtual"><scope>PolarBasis</scope><name>get_dpotl</name></member>
      <member refid="class_polar_basis_1adacb1bb523e1ed452d7075cf6b97135f" prot="protected" virt="pure-virtual"><scope>PolarBasis</scope><name>get_pot</name></member>
      <member refid="class_polar_basis_1ae13b2d394784b9344d9ec473c5f2d781" prot="protected" virt="non-virtual"><scope>PolarBasis</scope><name>get_pot_coefs</name></member>
      <member refid="class_polar_basis_1af5eabfde1ceca1aab0df39bf82bd99c3" prot="protected" virt="non-virtual"><scope>PolarBasis</scope><name>get_pot_coefs_safe</name></member>
      <member refid="class_polar_basis_1a5bd90a17ffb1b1f7e06fdb9a9861b9e9" prot="public" virt="pure-virtual"><scope>PolarBasis</scope><name>get_potl</name></member>
      <member refid="class_polar_basis_1ae897c7f6610ad01ab9c69d47e836d3dd" prot="public" virt="pure-virtual"><scope>PolarBasis</scope><name>get_potl_dens</name></member>
      <member refid="class_axisymmetric_basis_1a81196ff99fb4254c4e37866ca3d2c7de" prot="public" virt="non-virtual"><scope>PolarBasis</scope><name>getCoefs</name></member>
      <member refid="class_axisymmetric_basis_1a392660898c9be95471072adb3f0faa25" prot="public" virt="non-virtual"><scope>PolarBasis</scope><name>getLmax</name></member>
      <member refid="class_axisymmetric_basis_1ab09be7b0782949e27379ea930eb10171" prot="public" virt="non-virtual"><scope>PolarBasis</scope><name>getMmax</name></member>
      <member refid="class_axisymmetric_basis_1a3026462dfa88e923d7673f3d56dc4de4" prot="public" virt="non-virtual"><scope>PolarBasis</scope><name>getNmax</name></member>
      <member refid="class_polar_basis_1adfeabbff17849499d42172409cde90ee" prot="protected" virt="pure-virtual"><scope>PolarBasis</scope><name>getRtable</name></member>
      <member refid="class_pot_accel_1a0998c361bca277b3bba95f59acaba203" prot="public" virt="virtual"><scope>PolarBasis</scope><name>getScale</name></member>
      <member refid="class_axisymmetric_basis_1a5665efe4d9ba08fd8e173a7aa6cf77b6a355c2a93725cd932da5408330dec2a6b" prot="public" virt="non-virtual"><scope>PolarBasis</scope><name>Hall</name></member>
      <member refid="class_pot_accel_1a4a812594dff363f07bf57d69a60e4a13" prot="public" virt="non-virtual"><scope>PolarBasis</scope><name>HaveCoefDump</name></member>
      <member refid="class_axisymmetric_basis_1af0b7e5ba06a1acf652e61b9b4ecadfec" prot="protected" virt="non-virtual"><scope>PolarBasis</scope><name>hexp</name></member>
      <member refid="class_polar_basis_1a193e8bdb15a1bee988c45b5a5d4cbb1b" prot="protected" virt="non-virtual"><scope>PolarBasis</scope><name>howmany</name></member>
      <member refid="class_polar_basis_1a9cd5f130653fbfbabc6c6b53afbe3808" prot="protected" virt="non-virtual"><scope>PolarBasis</scope><name>howmany1</name></member>
      <member refid="class_pot_accel_1a1cdb2381070d7772caf533433455284c" prot="public" virt="non-virtual"><scope>PolarBasis</scope><name>id</name></member>
      <member refid="class_polar_basis_1a8c667278622aeb6f65dde13da207db7f" prot="protected" virt="non-virtual"><scope>PolarBasis</scope><name>init_pca</name></member>
      <member refid="class_polar_basis_1a5b49aa8ebe308a9f089b52478ee4db11" prot="protected" virt="virtual"><scope>PolarBasis</scope><name>initialize</name></member>
      <member refid="class_axisymmetric_basis_1abe6cac911f0415ee15378c104bd3fd16" prot="private" virt="non-virtual"><scope>PolarBasis</scope><name>inv</name></member>
      <member refid="class_polar_basis_1a06f152b6310fa7f859ca24ee5124cda5" prot="protected" virt="non-virtual"><scope>PolarBasis</scope><name>is_flat</name></member>
      <member refid="class_pot_accel_1a706b04f03c8beb4369dd125406770116" prot="public" virt="non-virtual"><scope>PolarBasis</scope><name>kill_mutex</name></member>
      <member refid="class_polar_basis_1a74b322e6f5894af06076c62f7a3e9a87" prot="public" virt="virtual"><scope>PolarBasis</scope><name>knl</name></member>
      <member refid="class_axisymmetric_basis_1a77c3332bf7286f04c94af7d068c7b2c4" prot="private" virt="non-virtual"><scope>PolarBasis</scope><name>L0</name></member>
      <member refid="class_polar_basis_1a7e1ac0795981fe6cd99dc0ef4553f3a1" prot="protected" virt="non-virtual"><scope>PolarBasis</scope><name>lastPlayTime</name></member>
      <member refid="class_axisymmetric_basis_1a570f3d24187073d3354933ace93a6bd6" prot="private" virt="non-virtual"><scope>PolarBasis</scope><name>Ldim</name></member>
      <member refid="class_basis_1a80975218d67cc019d69fefb7a207d344" prot="public" virt="non-virtual"><scope>PolarBasis</scope><name>legendre_R</name></member>
      <member refid="class_axisymmetric_basis_1abed8db010c45ad27e769043c68ab3101" prot="protected" virt="non-virtual"><scope>PolarBasis</scope><name>Lmax</name></member>
      <member refid="class_polar_basis_1a4ac3897f3193cce28ec862d51862549c" prot="protected" virt="non-virtual"><scope>PolarBasis</scope><name>M0_back</name></member>
      <member refid="class_polar_basis_1a816312706a8b38652b6969ecb540fb83" prot="protected" virt="non-virtual"><scope>PolarBasis</scope><name>M0_only</name></member>
      <member refid="class_pot_accel_1a65fa890eea987e18d552825ab074939b" prot="public" virt="non-virtual"><scope>PolarBasis</scope><name>make_mutex</name></member>
      <member refid="class_polar_basis_1ae8dfb1cfd65cd8f4d753c0255a6a7ef8" prot="protected" virt="non-virtual"><scope>PolarBasis</scope><name>massT</name></member>
      <member refid="class_polar_basis_1a92bf1bad9abede0a8634a3d9045c0dd2" prot="protected" virt="non-virtual"><scope>PolarBasis</scope><name>massT1</name></member>
      <member refid="class_polar_basis_1a091e218483e387313a642241e5f009da" prot="public" virt="non-virtual"><scope>PolarBasis</scope><name>MatrixM</name></member>
      <member refid="class_axisymmetric_basis_1a4f7fd256528b06fa3124aa070e558c9a" prot="protected" virt="non-virtual"><scope>PolarBasis</scope><name>MatrixP</name></member>
      <member refid="class_polar_basis_1ace5aea039f333b325a02266bf91b518d" prot="protected" virt="non-virtual"><scope>PolarBasis</scope><name>maxSNR</name></member>
      <member refid="class_polar_basis_1a3eea87c05c80ea26d61cf7fa851963b5" prot="protected" virt="non-virtual"><scope>PolarBasis</scope><name>meanC</name></member>
      <member refid="class_polar_basis_1a0ba528379df5a33db38b6d1463e53b4d" prot="protected" virt="non-virtual"><scope>PolarBasis</scope><name>minSNR</name></member>
      <member refid="class_polar_basis_1a2751b7dbf6ebb3b067666e03470fcf58" prot="protected" virt="non-virtual"><scope>PolarBasis</scope><name>mix</name></member>
      <member refid="class_pot_accel_1ad9ff6c9f431ad2f8ad2e5895c222ede8" prot="protected" virt="non-virtual"><scope>PolarBasis</scope><name>mlevel</name></member>
      <member refid="class_polar_basis_1a678a5f22d42f8456b994a51afd6ed765" prot="protected" virt="non-virtual"><scope>PolarBasis</scope><name>mlim</name></member>
      <member refid="class_axisymmetric_basis_1a2307130cf92a81e6cfb6f69fb2279585" prot="protected" virt="non-virtual"><scope>PolarBasis</scope><name>Mmax</name></member>
      <member refid="class_pot_accel_1a2ba58ca0219d337b13c87697353d4121" prot="public" virt="virtual"><scope>PolarBasis</scope><name>multistep_debug</name></member>
      <member refid="class_polar_basis_1a176f79dfddda7dae31a595259abf797b" prot="public" virt="virtual"><scope>PolarBasis</scope><name>multistep_reset</name></member>
      <member refid="class_polar_basis_1abd587da712635ad6b559671f10fa5b32" prot="public" virt="virtual"><scope>PolarBasis</scope><name>multistep_update</name></member>
      <member refid="class_polar_basis_1ad8614d1a76923db9331a1080fdc7cf2b" prot="public" virt="virtual"><scope>PolarBasis</scope><name>multistep_update_begin</name></member>
      <member refid="class_polar_basis_1aea28de3f69eb403dab0bd5049e71d04e" prot="public" virt="virtual"><scope>PolarBasis</scope><name>multistep_update_finish</name></member>
      <member refid="class_axisymmetric_basis_1a066a011ea1511b649a093b17a01bee1e" prot="protected" virt="non-virtual"><scope>PolarBasis</scope><name>muse</name></member>
      <member refid="class_polar_basis_1ad61c596489b46678f2e70e454921d0d3" prot="protected" virt="non-virtual"><scope>PolarBasis</scope><name>muse0</name></member>
      <member refid="class_polar_basis_1a06ce38624d1d138e765b626495040c46" prot="protected" virt="non-virtual"><scope>PolarBasis</scope><name>muse1</name></member>
      <member refid="class_pot_accel_1a73976f361ed7abf13001835bfcdee639" prot="protected" virt="non-virtual"><scope>PolarBasis</scope><name>nbodies</name></member>
      <member refid="class_polar_basis_1ae3e10d1d2db082490f8a28b32915def5" prot="public" virt="non-virtual"><scope>PolarBasis</scope><name>NewCoefs</name></member>
      <member refid="class_axisymmetric_basis_1acee029d0e3afc656f5fb5d8f063a97d9" prot="protected" virt="non-virtual"><scope>PolarBasis</scope><name>nmax</name></member>
      <member refid="class_polar_basis_1a915ee44780b239759e053a4fc36d8816" prot="protected" virt="non-virtual"><scope>PolarBasis</scope><name>NO_M0</name></member>
      <member refid="class_polar_basis_1a0bbb25e024f9e05ba4f0f09ddd29d38c" prot="protected" virt="non-virtual"><scope>PolarBasis</scope><name>NO_M1</name></member>
      <member refid="class_polar_basis_1a3db7a5c1581abdbad2d411cef3337f05" prot="protected" virt="non-virtual"><scope>PolarBasis</scope><name>NO_MONO</name></member>
      <member refid="class_pot_accel_1a4f2099b1b705731b909e63c90ea59f04" prot="public" virt="non-virtual"><scope>PolarBasis</scope><name>NoCoefs</name></member>
      <member refid="class_axisymmetric_basis_1a5665efe4d9ba08fd8e173a7aa6cf77b6a85300903a059bd6e3a193bd92112a16f" prot="public" virt="non-virtual"><scope>PolarBasis</scope><name>None</name></member>
      <member refid="class_axisymmetric_basis_1a5cffa9ce5ca3b98aeca288e4c5e11c73" prot="protected" virt="non-virtual"><scope>PolarBasis</scope><name>normM</name></member>
      <member refid="class_axisymmetric_basis_1afa81d9394890b9ebc0a7989651b021d9" prot="protected" virt="non-virtual"><scope>PolarBasis</scope><name>npca</name></member>
      <member refid="class_axisymmetric_basis_1a68be4e14ebd23388b75d8df12af76667" prot="protected" virt="non-virtual"><scope>PolarBasis</scope><name>npca0</name></member>
      <member refid="class_polar_basis_1a0068f61d14aec9c87ed6d9cc24e02b1d" prot="protected" virt="non-virtual"><scope>PolarBasis</scope><name>nrand</name></member>
      <member refid="class_polar_basis_1a118ccb84ebd70f359f9926d8f2829842" prot="protected" virt="non-virtual"><scope>PolarBasis</scope><name>numbT</name></member>
      <member refid="class_polar_basis_1a3553fdf50173154f1854aed4be95253d" prot="protected" virt="non-virtual"><scope>PolarBasis</scope><name>numbT1</name></member>
      <member refid="class_pot_accel_1ad55d9279ca0e8318bfe1a95d1c7566fda7c49f38007dad33fb1e48fdebdd2f8c1" prot="public" virt="non-virtual"><scope>PolarBasis</scope><name>other</name></member>
      <member refid="class_polar_basis_1a99c0c982b5199a2f2f637d929def3782" prot="protected" virt="non-virtual"><scope>PolarBasis</scope><name>pack</name></member>
      <member refid="class_axisymmetric_basis_1a0ba9093da208645ba67931e04a61f4c7" prot="protected" virt="virtual"><scope>PolarBasis</scope><name>parallel_distribute_coefficients</name></member>
      <member refid="class_axisymmetric_basis_1a1aba7be747336c8e6a67613a3109e285" prot="protected" virt="virtual"><scope>PolarBasis</scope><name>parallel_gather_coef2</name></member>
      <member refid="class_axisymmetric_basis_1a01ab8064885a073b48ad562790b89f86" prot="protected" virt="virtual"><scope>PolarBasis</scope><name>parallel_gather_coefficients</name></member>
      <member refid="class_axisymmetric_basis_1a408a19fff1093c88f6a9bcf9ad2601d4" prot="public" virt="non-virtual"><scope>PolarBasis</scope><name>pca_hall</name></member>
      <member refid="class_axisymmetric_basis_1ae0353b5d1b82b19517ede95a862d7484" prot="public" virt="non-virtual"><scope>PolarBasis</scope><name>pca_hall_2d</name></member>
      <member refid="class_axisymmetric_basis_1ab971c10417b2e844c9251d6a667103d4" prot="public" virt="non-virtual"><scope>PolarBasis</scope><name>pca_hall_3d</name></member>
      <member refid="class_axisymmetric_basis_1aea08169a329b6608c42fdeeb1db91183" prot="protected" virt="non-virtual"><scope>PolarBasis</scope><name>pcadiag</name></member>
      <member refid="class_axisymmetric_basis_1af2a1f4efbdc887b29a6d49b770c1f060" prot="protected" virt="non-virtual"><scope>PolarBasis</scope><name>pcaeof</name></member>
      <member refid="class_axisymmetric_basis_1a8da7266925e30ee0056cf97e84d4809e" prot="protected" virt="non-virtual"><scope>PolarBasis</scope><name>pcavar</name></member>
      <member refid="class_axisymmetric_basis_1ad53aa251aa38d7645a4d3eece99dc9d5" prot="protected" virt="non-virtual"><scope>PolarBasis</scope><name>pcavtk</name></member>
      <member refid="class_pot_accel_1a74b41dd5c2f102dd3184ac53b6172462" prot="protected" virt="non-virtual"><scope>PolarBasis</scope><name>play_back</name></member>
      <member refid="class_pot_accel_1aea1c756cd9616a1daf73541780b45798" prot="protected" virt="non-virtual"><scope>PolarBasis</scope><name>play_cnew</name></member>
      <member refid="class_polar_basis_1a4b5f9c6bef2c419f84b76fb396e82723" prot="protected" virt="non-virtual"><scope>PolarBasis</scope><name>playback</name></member>
      <member refid="class_polar_basis_1a45940af63c3a13154e29504458495c9d" prot="public" virt="non-virtual"><scope>PolarBasis</scope><name>PolarBasis</name></member>
      <member refid="class_polar_basis_1aaa494cc1d1daa18fc49e97afc5921df0" prot="public" virt="non-virtual"><scope>PolarBasis</scope><name>PolarBasis</name></member>
      <member refid="class_pot_accel_1a801fdbd01e551033e79f274e4a7c1d1e" prot="public" virt="non-virtual"><scope>PolarBasis</scope><name>PotAccel</name></member>
      <member refid="class_polar_basis_1ab43c03641c12922e70c9942c3b09bcf1" prot="protected" virt="non-virtual"><scope>PolarBasis</scope><name>potd</name></member>
      <member refid="class_pot_accel_1a5e257d38dbf5c3d9630906a96abf6915" prot="public" virt="non-virtual"><scope>PolarBasis</scope><name>print_timings</name></member>
      <member refid="class_pot_accel_1a37a3c348c0febbf70ff94949071c3beb" prot="public" virt="non-virtual"><scope>PolarBasis</scope><name>print_timings</name></member>
      <member refid="class_pot_accel_1a8aea0d1740bf7432e1193dda7121a8bb" prot="public" virt="virtual"><scope>PolarBasis</scope><name>RegisterComponent</name></member>
      <member refid="class_polar_basis_1aa1ff0872a9bb7ccd10df8883c302c8ff" prot="protected" virt="non-virtual"><scope>PolarBasis</scope><name>resetT</name></member>
      <member refid="class_polar_basis_1a6101c6d9456396713bd0c589c27f85c9" prot="protected" virt="non-virtual"><scope>PolarBasis</scope><name>rgen</name></member>
      <member refid="class_polar_basis_1adb549c80cf4c39ca310bd9de22c04c07" prot="protected" virt="non-virtual"><scope>PolarBasis</scope><name>rmax</name></member>
      <member refid="class_polar_basis_1a3a0be17ee62bb4879aea655ae19edaa7" prot="protected" virt="non-virtual"><scope>PolarBasis</scope><name>rmin</name></member>
      <member refid="class_polar_basis_1a2e121b84e9254efa5cbd308991c66e54" prot="protected" virt="non-virtual"><scope>PolarBasis</scope><name>rmsC</name></member>
      <member refid="class_axisymmetric_basis_1a5116daa842c0f604c2a312db8e0ce97e" prot="private" virt="non-virtual"><scope>PolarBasis</scope><name>s_Hall</name></member>
      <member refid="class_polar_basis_1a3bd4a78d9444ffbbe83a56ae99bea773" prot="protected" virt="non-virtual"><scope>PolarBasis</scope><name>sampT</name></member>
      <member refid="class_polar_basis_1a6e543f1d0becffd504e251422767d3fe" prot="protected" virt="non-virtual"><scope>PolarBasis</scope><name>scale</name></member>
      <member refid="class_polar_basis_1a05fd3a74d0b2657ded0339a346cbf997" prot="protected" virt="non-virtual"><scope>PolarBasis</scope><name>seedN</name></member>
      <member refid="class_polar_basis_1ad09ca298def19fc208e57ef144ce16f6" prot="protected" virt="non-virtual"><scope>PolarBasis</scope><name>self_consistent</name></member>
      <member refid="class_pot_accel_1ac65dfca720c42ea4a773024d1eaf977f" prot="public" virt="virtual"><scope>PolarBasis</scope><name>set_multistep_level</name></member>
      <member refid="class_pot_accel_1a6dc784a141afdec5f4daad63eba20b81" prot="public" virt="non-virtual"><scope>PolarBasis</scope><name>SetExternal</name></member>
      <member refid="class_pot_accel_1ad528efbd280a21543addaf7747e9089a" prot="public" virt="virtual"><scope>PolarBasis</scope><name>setScale</name></member>
      <member refid="class_axisymmetric_basis_1a6af1bcb2359adc5091625d457a953efa" prot="public" virt="non-virtual"><scope>PolarBasis</scope><name>setTK</name></member>
      <member refid="class_polar_basis_1a346801a54ca434a9f63809bfbbf53f82" prot="protected" virt="non-virtual"><scope>PolarBasis</scope><name>setup</name></member>
      <member refid="class_polar_basis_1af82e9d72d652c4babad6846229afbbe4" prot="protected" virt="non-virtual"><scope>PolarBasis</scope><name>setup_accumulation</name></member>
      <member refid="class_polar_basis_1a50c1a4d646f89ac3d9d07e9700a9ead1" prot="protected" virt="non-virtual"><scope>PolarBasis</scope><name>sin_coef_lock</name></member>
      <member refid="class_basis_1a0779c0b0f74361d7861bbc19a194b63c" prot="public" virt="non-virtual"><scope>PolarBasis</scope><name>sinecosine_R</name></member>
      <member refid="class_polar_basis_1a99d74d03e9d45b7bd2faded328ed5b42" prot="protected" virt="non-virtual"><scope>PolarBasis</scope><name>sinm</name></member>
      <member refid="class_pot_accel_1ad55d9279ca0e8318bfe1a95d1c7566fda0a1acd8c0d6e745fb0ae3e33e458a9b8" prot="public" virt="non-virtual"><scope>PolarBasis</scope><name>slab</name></member>
      <member refid="class_axisymmetric_basis_1a52873b88250c954ccca613fab178c5ee" prot="private" virt="non-virtual"><scope>PolarBasis</scope><name>smth</name></member>
      <member refid="class_axisymmetric_basis_1ac4fce6a4930030f49b46844753ce3052" prot="protected" virt="non-virtual"><scope>PolarBasis</scope><name>snr</name></member>
      <member refid="class_pot_accel_1ad55d9279ca0e8318bfe1a95d1c7566fda996ce4577548b6da6b1330a78b1c6f6a" prot="public" virt="non-virtual"><scope>PolarBasis</scope><name>sphere</name></member>
      <member refid="class_axisymmetric_basis_1a2dd973d8ace9db32c65938425d159af9" prot="protected" virt="non-virtual"><scope>PolarBasis</scope><name>sqnorm</name></member>
      <member refid="class_polar_basis_1ab5d0ad742eec040c918d0a3398e0df5a" prot="protected" virt="non-virtual"><scope>PolarBasis</scope><name>ssfrac</name></member>
      <member refid="class_axisymmetric_basis_1a592dd952d0301e3c55da82f78eb3cfe8" prot="protected" virt="non-virtual"><scope>PolarBasis</scope><name>subsamp</name></member>
      <member refid="class_polar_basis_1aade6058d4754068e3390aecc59241901" prot="protected" virt="non-virtual"><scope>PolarBasis</scope><name>subset</name></member>
      <member refid="class_axisymmetric_basis_1a8298f44c8cc6e6401b471c4a50c52662" prot="protected" virt="non-virtual"><scope>PolarBasis</scope><name>swap_coefs</name></member>
      <member refid="class_pot_accel_1aff158a74d7328a080ed619c1456836f5" prot="private" virt="non-virtual"><scope>PolarBasis</scope><name>t</name></member>
      <member refid="class_pot_accel_1ad55d9279ca0e8318bfe1a95d1c7566fda1792d3c00a41ee78957c83611fd368a2" prot="public" virt="non-virtual"><scope>PolarBasis</scope><name>table</name></member>
      <member refid="class_pot_accel_1a125d7343a34d292a3e4a48a5d984cac4" prot="private" virt="non-virtual"><scope>PolarBasis</scope><name>td</name></member>
      <member refid="class_axisymmetric_basis_1a196db3f26a946c2dcbaabcbe31883b4a" prot="private" virt="non-virtual"><scope>PolarBasis</scope><name>Tevec</name></member>
      <member refid="class_pot_accel_1a86d0d012a44e2eb7c3e385d852a5fdde" prot="public" virt="non-virtual"><scope>PolarBasis</scope><name>thread_timing_beg</name></member>
      <member refid="class_pot_accel_1a76c805cd8d0d134d37929eeb48115b33" prot="public" virt="non-virtual"><scope>PolarBasis</scope><name>thread_timing_end</name></member>
      <member refid="class_pot_accel_1a4315e73a641c54eefc548b7d14cb06b6" prot="protected" virt="non-virtual"><scope>PolarBasis</scope><name>timer_list</name></member>
      <member refid="class_axisymmetric_basis_1a3e85225ea1c3c408fe2bcf23ad09b555" prot="private" virt="non-virtual"><scope>PolarBasis</scope><name>tk_type</name></member>
      <member refid="class_axisymmetric_basis_1a3a98442a6149253a6881c33cf6792e38" prot="private" virt="non-virtual"><scope>PolarBasis</scope><name>tkcum</name></member>
      <member refid="class_axisymmetric_basis_1ad4dabce5bd04809a4644cb36705312f9" prot="private" virt="non-virtual"><scope>PolarBasis</scope><name>tksmooth</name></member>
      <member refid="class_axisymmetric_basis_1a5665efe4d9ba08fd8e173a7aa6cf77b6" prot="public" virt="non-virtual"><scope>PolarBasis</scope><name>TKType</name></member>
      <member refid="class_pot_accel_1aabce5ff868883c6191b8b7f8f6281c04" prot="public" virt="non-virtual"><scope>PolarBasis</scope><name>TList</name></member>
      <member refid="class_polar_basis_1a35b9bc2b401b6ca50284052b22c16607" prot="protected" virt="non-virtual"><scope>PolarBasis</scope><name>tvar</name></member>
      <member refid="class_polar_basis_1a26ef5aaa37386ff156862a79b6c57b89" prot="protected" virt="non-virtual"><scope>PolarBasis</scope><name>u</name></member>
      <member refid="class_pot_accel_1a0355cfe43cdde5237f7be234e94de64b" prot="public" virt="non-virtual"><scope>PolarBasis</scope><name>unmatched</name></member>
      <member refid="class_polar_basis_1abca00424b2046864e5d8242ab314d299" prot="protected" virt="non-virtual"><scope>PolarBasis</scope><name>unpack</name></member>
      <member refid="class_pot_accel_1acd32c6464b705469911df718114187b9" prot="public" virt="non-virtual"><scope>PolarBasis</scope><name>use</name></member>
      <member refid="class_pot_accel_1a59a4a86ea8d2b3a9a5d420ef7e712697" prot="protected" virt="non-virtual"><scope>PolarBasis</scope><name>use_external</name></member>
      <member refid="class_pot_accel_1a8fe5beef77e790f0d7bf6f455f5bf1d3" prot="protected" virt="non-virtual"><scope>PolarBasis</scope><name>used</name></member>
      <member refid="class_pot_accel_1ae2e0dbf849707704a3d42a1fa91ce060" prot="public" virt="non-virtual"><scope>PolarBasis</scope><name>Used</name></member>
      <member refid="class_polar_basis_1a1e8407fa2d119488c94015b74b977e37" prot="protected" virt="non-virtual"><scope>PolarBasis</scope><name>used_lock</name></member>
      <member refid="class_polar_basis_1a80f934a93cbe526d28c6f8787b31b729" prot="protected" virt="non-virtual"><scope>PolarBasis</scope><name>valid_keys</name></member>
      <member refid="class_axisymmetric_basis_1a5665efe4d9ba08fd8e173a7aa6cf77b6a27bdb8b3a4040b794e7418581fda2615" prot="public" virt="non-virtual"><scope>PolarBasis</scope><name>VarianceCut</name></member>
      <member refid="class_axisymmetric_basis_1a5665efe4d9ba08fd8e173a7aa6cf77b6a7381bdf9e2231e55827cf72d86f7f415" prot="public" virt="non-virtual"><scope>PolarBasis</scope><name>VarianceWeighted</name></member>
      <member refid="class_polar_basis_1a3197446ade65d9b4d17e381333aff246" prot="protected" virt="non-virtual"><scope>PolarBasis</scope><name>vc</name></member>
      <member refid="class_polar_basis_1a6c81bee92bd8e92deb3ba4ff644c8054" prot="public" virt="non-virtual"><scope>PolarBasis</scope><name>VectorM</name></member>
      <member refid="class_axisymmetric_basis_1a90258bc4c31858abd74719a452f7f807" prot="protected" virt="non-virtual"><scope>PolarBasis</scope><name>VectorP</name></member>
      <member refid="class_polar_basis_1aa515c0c713fdc70ba60210087b2519ec" prot="protected" virt="non-virtual"><scope>PolarBasis</scope><name>VectorXdP</name></member>
      <member refid="class_polar_basis_1a22efaf97472b275a5cffe707f31a49e7" prot="protected" virt="non-virtual"><scope>PolarBasis</scope><name>vs</name></member>
      <member refid="class_axisymmetric_basis_1ab0d1d51da0dc7f33cf3091bab41866d1" prot="protected" virt="non-virtual"><scope>PolarBasis</scope><name>vtkfreq</name></member>
      <member refid="class_axisymmetric_basis_1a3708ccfcde62cc3e88dbde5994d08f26" prot="private" virt="non-virtual"><scope>PolarBasis</scope><name>weight</name></member>
      <member refid="class_polar_basis_1ad68931ee90a672f077a8ccaae1bc72df" prot="protected" virt="non-virtual"><scope>PolarBasis</scope><name>workC</name></member>
      <member refid="class_polar_basis_1a9807aaaf18f9e1a8c36babf586dae852" prot="protected" virt="non-virtual"><scope>PolarBasis</scope><name>workC1</name></member>
      <member refid="class_polar_basis_1aa664182951b12af8a5bc377a8421f849" prot="protected" virt="non-virtual"><scope>PolarBasis</scope><name>workS</name></member>
      <member refid="class_polar_basis_1a9ca96eb5c70ca2b17032fe5a2c0f813c" prot="protected" virt="non-virtual"><scope>PolarBasis</scope><name>workS1</name></member>
      <member refid="class_axisymmetric_basis_1a98dbe87cedd6dc28d03bba5aba133dd4" prot="public" virt="virtual"><scope>PolarBasis</scope><name>~AxisymmetricBasis</name></member>
      <member refid="class_polar_basis_1aea22978a077e0f22f369e48e96ef6af1" prot="public" virt="virtual"><scope>PolarBasis</scope><name>~PolarBasis</name></member>
      <member refid="class_pot_accel_1adcc326688bb152249f81e88d6edfde62" prot="public" virt="virtual"><scope>PolarBasis</scope><name>~PotAccel</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
