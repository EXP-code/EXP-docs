<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="_k_dtree_8_h" kind="file" language="C++">
    <compoundname>KDtree.H</compoundname>
    <includes local="no">algorithm</includes>
    <includes local="no">random</includes>
    <includes local="no">vector</includes>
    <includes local="no">array</includes>
    <includes local="no">cmath</includes>
    <includes local="no">tuple</includes>
    <includes local="no">map</includes>
    <incdepgraph>
      <node id="1">
        <label>/home/weinberg/Projects/EXP/include/KDtree.H</label>
        <link refid="_k_dtree_8_h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>algorithm</label>
      </node>
      <node id="5">
        <label>array</label>
      </node>
      <node id="6">
        <label>cmath</label>
      </node>
      <node id="8">
        <label>map</label>
      </node>
      <node id="3">
        <label>random</label>
      </node>
      <node id="7">
        <label>tuple</label>
      </node>
      <node id="4">
        <label>vector</label>
      </node>
    </incdepgraph>
    <innerclass refid="class_k_dtree_1_1_cache" prot="public">KDtree::Cache</innerclass>
    <innerclass refid="class_k_dtree_1_1kdtree" prot="public">KDtree::kdtree</innerclass>
    <innerclass refid="struct_k_dtree_1_1kdtree_1_1node" prot="public">KDtree::kdtree::node</innerclass>
    <innerclass refid="struct_k_dtree_1_1kdtree_1_1node__cmp" prot="private">KDtree::kdtree::node_cmp</innerclass>
    <innerclass refid="class_k_dtree_1_1point" prot="public">KDtree::point</innerclass>
    <innernamespace refid="namespace_k_dtree">KDtree</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&lt;algorithm&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;random&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;array&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cmath&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;tuple&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;map&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9" refid="namespace_k_dtree" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespace_k_dtree" kindref="compound">KDtree</ref></highlight></codeline>
<codeline lineno="10"><highlight class="normal">{</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>key_t,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>value_t&gt;</highlight></codeline>
<codeline lineno="13" refid="class_k_dtree_1_1_cache" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_k_dtree_1_1_cache" kindref="compound">Cache</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>std::map&lt;key_t,<sp/>value_t&gt;</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="16" refid="class_k_dtree_1_1_cache_1aa0c064f398368f4b9117787fe293a02f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_dtree_1_1_cache_1aa0c064f398368f4b9117787fe293a02f" kindref="member">Cache</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>N=1)<sp/>:<sp/><ref refid="class_k_dtree_1_1_cache_1aed57f00769b00f8c9d1964729a1ea39b" kindref="member">max_size</ref>(N)<sp/>{}</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18" refid="class_k_dtree_1_1_cache_1a32fbf35f2f64d89669b35c340bcfef29" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_dtree_1_1_cache_1a32fbf35f2f64d89669b35c340bcfef29" kindref="member">resize</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>N)<sp/>{<sp/><ref refid="class_k_dtree_1_1_cache_1aed57f00769b00f8c9d1964729a1ea39b" kindref="member">max_size</ref><sp/>=<sp/>N;<sp/>}</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20" refid="class_k_dtree_1_1_cache_1a496ef1c22183670fd782fad18c0d559f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_dtree_1_1_cache_1a496ef1c22183670fd782fad18c0d559f" kindref="member">add</ref>(<sp/>key_t<sp/>key,<sp/>value_t<sp/>value<sp/>)</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(*this)[key]<sp/>=<sp/>value;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;size()<sp/>&gt;<sp/><ref refid="class_k_dtree_1_1_cache_1aed57f00769b00f8c9d1964729a1ea39b" kindref="member">max_size</ref>)<sp/>{</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;erase(--(*this).end());</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="29" refid="class_k_dtree_1_1_cache_1aed57f00769b00f8c9d1964729a1ea39b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_k_dtree_1_1_cache_1aed57f00769b00f8c9d1964729a1ea39b" kindref="member">max_size</ref>;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>coordinate_type,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>dimensions&gt;</highlight></codeline>
<codeline lineno="38" refid="class_k_dtree_1_1point" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_k_dtree_1_1point" kindref="compound">point</ref></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="42" refid="class_k_dtree_1_1point_1a758b8d7d5ce3bdf7dc84fff7385fce59" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_dtree_1_1point_1a758b8d7d5ce3bdf7dc84fff7385fce59" kindref="member">point</ref>()<sp/>{}</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="45" refid="class_k_dtree_1_1point_1af623764bce859271d5bf094aab542cc9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_dtree_1_1point_1af623764bce859271d5bf094aab542cc9" kindref="member">point</ref>(std::array&lt;coordinate_type,<sp/>dimensions&gt;<sp/>c,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>m=1,</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="class_k_dtree_1_1point_1a93001f2f3d45f19f7c2b178df4ae2a7f" kindref="member">indx</ref>=0)<sp/>:<sp/><ref refid="class_k_dtree_1_1point_1aa76daca7569e1b06319436b995971cec" kindref="member">coords_</ref>(c),<sp/><ref refid="class_k_dtree_1_1point_1aa22bab8d8b520eabe9d7789dd00d8413" kindref="member">mass_</ref>(m),<sp/><ref refid="class_k_dtree_1_1point_1a69bb4a71b6c370d78b5395fccf532316" kindref="member">indx_</ref>(<ref refid="class_k_dtree_1_1point_1a93001f2f3d45f19f7c2b178df4ae2a7f" kindref="member">indx</ref>)<sp/>{}</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="48" refid="class_k_dtree_1_1point_1a74272541f07e707e5b67f2575dd20374" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_dtree_1_1point_1a74272541f07e707e5b67f2575dd20374" kindref="member">point</ref>(std::array&lt;coordinate_type,<sp/>dimensions&gt;<sp/>c,</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::array&lt;coordinate_type,<sp/>dimensions&gt;<sp/>v,</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>m=1,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="class_k_dtree_1_1point_1a93001f2f3d45f19f7c2b178df4ae2a7f" kindref="member">indx</ref>=0)<sp/>:<sp/><ref refid="class_k_dtree_1_1point_1aa76daca7569e1b06319436b995971cec" kindref="member">coords_</ref>(c),<sp/><ref refid="class_k_dtree_1_1point_1afb068a06a84f62a6b7878ca24e22d552" kindref="member">vels_</ref>(v),</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_dtree_1_1point_1aa22bab8d8b520eabe9d7789dd00d8413" kindref="member">mass_</ref>(m),<sp/><ref refid="class_k_dtree_1_1point_1a69bb4a71b6c370d78b5395fccf532316" kindref="member">indx_</ref>(<ref refid="class_k_dtree_1_1point_1a93001f2f3d45f19f7c2b178df4ae2a7f" kindref="member">indx</ref>)<sp/>{}</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="54" refid="class_k_dtree_1_1point_1aeb4734d7cb40a203c8f2220c128a4eae" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_dtree_1_1point_1aeb4734d7cb40a203c8f2220c128a4eae" kindref="member">point</ref>(std::initializer_list&lt;coordinate_type&gt;<sp/>list,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>m=1,</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="class_k_dtree_1_1point_1a93001f2f3d45f19f7c2b178df4ae2a7f" kindref="member">indx</ref>=0)<sp/>:<sp/><ref refid="class_k_dtree_1_1point_1aa22bab8d8b520eabe9d7789dd00d8413" kindref="member">mass_</ref>(m),<sp/><ref refid="class_k_dtree_1_1point_1a69bb4a71b6c370d78b5395fccf532316" kindref="member">indx_</ref>(<ref refid="class_k_dtree_1_1point_1a93001f2f3d45f19f7c2b178df4ae2a7f" kindref="member">indx</ref>)</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>std::min(dimensions,<sp/>list.size());</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::copy_n(list.begin(),<sp/>n,<sp/><ref refid="class_k_dtree_1_1point_1aa76daca7569e1b06319436b995971cec" kindref="member">coords_</ref>.begin());</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="61" refid="class_k_dtree_1_1point_1aeec2c809a952b726430a57e05f7a88e1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_dtree_1_1point_1aeec2c809a952b726430a57e05f7a88e1" kindref="member">point</ref>(std::initializer_list&lt;coordinate_type&gt;<sp/>list,</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::initializer_list&lt;coordinate_type&gt;<sp/>vlst,</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>m=1,</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="class_k_dtree_1_1point_1a93001f2f3d45f19f7c2b178df4ae2a7f" kindref="member">indx</ref>=0)<sp/>:<sp/><ref refid="class_k_dtree_1_1point_1aa22bab8d8b520eabe9d7789dd00d8413" kindref="member">mass_</ref>(m),<sp/><ref refid="class_k_dtree_1_1point_1a69bb4a71b6c370d78b5395fccf532316" kindref="member">indx_</ref>(<ref refid="class_k_dtree_1_1point_1a93001f2f3d45f19f7c2b178df4ae2a7f" kindref="member">indx</ref>)</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>std::min(dimensions,<sp/>list.size());</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::copy_n(list.begin(),<sp/>n,<sp/><ref refid="class_k_dtree_1_1point_1aa76daca7569e1b06319436b995971cec" kindref="member">coords_</ref>.begin());</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::copy_n(vlst.begin(),<sp/>n,<sp/><ref refid="class_k_dtree_1_1point_1afb068a06a84f62a6b7878ca24e22d552" kindref="member">vels_</ref>.begin());</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="72" refid="class_k_dtree_1_1point_1ab064ec0661970ddbc4ef74c074e16506" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_dtree_1_1point_1ab064ec0661970ddbc4ef74c074e16506" kindref="member">point</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_k_dtree_1_1point" kindref="compound">point</ref>&amp;<sp/>p)</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>n=0;<sp/>n&lt;dimensions;<sp/>n++)<sp/><ref refid="class_k_dtree_1_1point_1aa76daca7569e1b06319436b995971cec" kindref="member">coords_</ref>[n]<sp/>=<sp/>p.<ref refid="class_k_dtree_1_1point_1aa76daca7569e1b06319436b995971cec" kindref="member">coords_</ref>[n];</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>n=0;<sp/>n&lt;dimensions;<sp/>n++)<sp/><ref refid="class_k_dtree_1_1point_1afb068a06a84f62a6b7878ca24e22d552" kindref="member">vels_</ref><sp/><sp/>[n]<sp/>=<sp/>p.<ref refid="class_k_dtree_1_1point_1afb068a06a84f62a6b7878ca24e22d552" kindref="member">vels_</ref><sp/><sp/>[n];</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_dtree_1_1point_1aa22bab8d8b520eabe9d7789dd00d8413" kindref="member">mass_</ref><sp/>=<sp/>p.<ref refid="class_k_dtree_1_1point_1aa22bab8d8b520eabe9d7789dd00d8413" kindref="member">mass_</ref>;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_dtree_1_1point_1a69bb4a71b6c370d78b5395fccf532316" kindref="member">indx_</ref><sp/>=<sp/>p.<ref refid="class_k_dtree_1_1point_1a69bb4a71b6c370d78b5395fccf532316" kindref="member">indx_</ref>;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="86" refid="class_k_dtree_1_1point_1a693012127d3ee164726ed99f67d7ddac" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>coordinate_type<sp/><ref refid="class_k_dtree_1_1point_1a693012127d3ee164726ed99f67d7ddac" kindref="member">get</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>index)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="87"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_k_dtree_1_1point_1aa76daca7569e1b06319436b995971cec" kindref="member">coords_</ref>[index];</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="91" refid="class_k_dtree_1_1point_1a3c34df22ae6c007ea39db1d51d27e83b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>coordinate_type<sp/><ref refid="class_k_dtree_1_1point_1a3c34df22ae6c007ea39db1d51d27e83b" kindref="member">vel</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>index)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="92"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_k_dtree_1_1point_1afb068a06a84f62a6b7878ca24e22d552" kindref="member">vels_</ref>[index];</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="103" refid="class_k_dtree_1_1point_1a228926317c27fa58a250d543e6e3b210" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_k_dtree_1_1point_1a228926317c27fa58a250d543e6e3b210" kindref="member">distance</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_k_dtree_1_1point" kindref="compound">point</ref>&amp;<sp/>pt)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="104"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dist<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>dimensions;<sp/>++i)</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>d<sp/>=<sp/><ref refid="class_k_dtree_1_1point_1a693012127d3ee164726ed99f67d7ddac" kindref="member">get</ref>(i)<sp/>-<sp/>pt.<ref refid="class_k_dtree_1_1point_1a693012127d3ee164726ed99f67d7ddac" kindref="member">get</ref>(i);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dist<sp/>+=<sp/>d<sp/>*<sp/>d;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>dist;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="121" refid="class_k_dtree_1_1point_1a11c871dfc517f541c1f0dda7dd83ec2f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_k_dtree_1_1point_1a11c871dfc517f541c1f0dda7dd83ec2f" kindref="member">speed</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_k_dtree_1_1point" kindref="compound">point</ref>&amp;<sp/>pt)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="122"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>rvel<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>dimensions;<sp/>++i)</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>d<sp/>=<sp/><ref refid="class_k_dtree_1_1point_1a3c34df22ae6c007ea39db1d51d27e83b" kindref="member">vel</ref>(i)<sp/>-<sp/>pt.<ref refid="class_k_dtree_1_1point_1a3c34df22ae6c007ea39db1d51d27e83b" kindref="member">vel</ref>(i);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rvel<sp/>+=<sp/>d<sp/>*<sp/>d;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>rvel;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="132" refid="class_k_dtree_1_1point_1a4af520f622c96f436069a4d1b7afa90d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_k_dtree_1_1point_1a4af520f622c96f436069a4d1b7afa90d" kindref="member">mass</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="133"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_k_dtree_1_1point_1aa22bab8d8b520eabe9d7789dd00d8413" kindref="member">mass_</ref>;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="137" refid="class_k_dtree_1_1point_1a93001f2f3d45f19f7c2b178df4ae2a7f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="class_k_dtree_1_1point_1a93001f2f3d45f19f7c2b178df4ae2a7f" kindref="member">indx</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="138"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_k_dtree_1_1point_1a69bb4a71b6c370d78b5395fccf532316" kindref="member">indx_</ref>;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="143" refid="class_k_dtree_1_1point_1aa76daca7569e1b06319436b995971cec" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::array&lt;coordinate_type,<sp/>dimensions&gt;<sp/><ref refid="class_k_dtree_1_1point_1aa76daca7569e1b06319436b995971cec" kindref="member">coords_</ref>;</highlight></codeline>
<codeline lineno="144" refid="class_k_dtree_1_1point_1afb068a06a84f62a6b7878ca24e22d552" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::array&lt;coordinate_type,<sp/>dimensions&gt;<sp/><ref refid="class_k_dtree_1_1point_1afb068a06a84f62a6b7878ca24e22d552" kindref="member">vels_</ref>;</highlight></codeline>
<codeline lineno="145" refid="class_k_dtree_1_1point_1aa22bab8d8b520eabe9d7789dd00d8413" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_k_dtree_1_1point_1aa22bab8d8b520eabe9d7789dd00d8413" kindref="member">mass_</ref>;</highlight></codeline>
<codeline lineno="146" refid="class_k_dtree_1_1point_1a69bb4a71b6c370d78b5395fccf532316" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="class_k_dtree_1_1point_1a69bb4a71b6c370d78b5395fccf532316" kindref="member">indx_</ref>;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>coordinate_type,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>dimensions&gt;</highlight></codeline>
<codeline lineno="151" refid="namespace_k_dtree_1ae65ddc968742c1a90478e83ca9cd52b5" refkind="member"><highlight class="normal"><sp/><sp/>std::ostream&amp;<sp/><ref refid="namespace_k_dtree_1ae65ddc968742c1a90478e83ca9cd52b5" kindref="member">operator&lt;&lt;</ref>(std::ostream&amp;<sp/>out,</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_k_dtree_1_1point" kindref="compound">point&lt;coordinate_type, dimensions&gt;</ref>&amp;<sp/>pt)</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/>out<sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;(&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>dimensions;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>&gt;<sp/>0)<sp/>out<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out<sp/>&lt;&lt;<sp/>pt.<ref refid="class_k_dtree_1_1point_1a693012127d3ee164726ed99f67d7ddac" kindref="member">get</ref>(i);</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/>out<sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;)&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>out;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>coordinate_type,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>dimensions&gt;</highlight></codeline>
<codeline lineno="165" refid="class_k_dtree_1_1kdtree" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_k_dtree_1_1kdtree" kindref="compound">kdtree</ref></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169" refid="class_k_dtree_1_1kdtree_1a90ad8cf6e73e970269c2dd27675eaede" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="class_k_dtree_1_1point" kindref="compound">point_type</ref><sp/>=<sp/><ref refid="class_k_dtree_1_1point" kindref="compound">point&lt;coordinate_type, dimensions&gt;</ref>;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171" refid="struct_k_dtree_1_1kdtree_1_1node" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_k_dtree_1_1kdtree_1_1node" kindref="compound">node</ref></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="173" refid="struct_k_dtree_1_1kdtree_1_1node_1a73f374e8a370b52ec97bbe2c760696c0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_k_dtree_1_1kdtree_1_1node_1a73f374e8a370b52ec97bbe2c760696c0" kindref="member">node</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_k_dtree_1_1point" kindref="compound">point_type</ref>&amp;<sp/>pt)<sp/>:<sp/><ref refid="struct_k_dtree_1_1kdtree_1_1node_1a4b85af0f26388e84665ba184155ba3a4" kindref="member">point_</ref>(pt),<sp/><ref refid="struct_k_dtree_1_1kdtree_1_1node_1a1b960ae93ff36d6385f90c1327bbe2b5" kindref="member">left_</ref>(nullptr),<sp/><ref refid="struct_k_dtree_1_1kdtree_1_1node_1a2de68af5f626fac1e412ef947b1003f5" kindref="member">right_</ref>(nullptr)</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="177" refid="struct_k_dtree_1_1kdtree_1_1node_1a791f1cbecb854afdc09431606e5776b4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>coordinate_type<sp/><ref refid="struct_k_dtree_1_1kdtree_1_1node_1a791f1cbecb854afdc09431606e5776b4" kindref="member">get</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>index)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="178"><highlight class="keyword"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="struct_k_dtree_1_1kdtree_1_1node_1a4b85af0f26388e84665ba184155ba3a4" kindref="member">point_</ref>.<ref refid="class_k_dtree_1_1point_1a693012127d3ee164726ed99f67d7ddac" kindref="member">get</ref>(index);</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="182" refid="struct_k_dtree_1_1kdtree_1_1node_1af3ead000be381d9633076f7a049c9ca1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="struct_k_dtree_1_1kdtree_1_1node_1af3ead000be381d9633076f7a049c9ca1" kindref="member">distance</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_k_dtree_1_1point" kindref="compound">point_type</ref>&amp;<sp/>pt)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="183"><highlight class="keyword"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="struct_k_dtree_1_1kdtree_1_1node_1a4b85af0f26388e84665ba184155ba3a4" kindref="member">point_</ref>.<ref refid="class_k_dtree_1_1point_1a228926317c27fa58a250d543e6e3b210" kindref="member">distance</ref>(pt);</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="186" refid="struct_k_dtree_1_1kdtree_1_1node_1a4b85af0f26388e84665ba184155ba3a4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_dtree_1_1point" kindref="compound">point_type</ref><sp/><ref refid="struct_k_dtree_1_1kdtree_1_1node_1a4b85af0f26388e84665ba184155ba3a4" kindref="member">point_</ref>;</highlight></codeline>
<codeline lineno="187" refid="struct_k_dtree_1_1kdtree_1_1node_1a1b960ae93ff36d6385f90c1327bbe2b5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_k_dtree_1_1kdtree_1_1node" kindref="compound">node</ref>*<sp/><ref refid="struct_k_dtree_1_1kdtree_1_1node_1a1b960ae93ff36d6385f90c1327bbe2b5" kindref="member">left_</ref>;</highlight></codeline>
<codeline lineno="188" refid="struct_k_dtree_1_1kdtree_1_1node_1a2de68af5f626fac1e412ef947b1003f5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_k_dtree_1_1kdtree_1_1node" kindref="compound">node</ref>*<sp/><ref refid="struct_k_dtree_1_1kdtree_1_1node_1a2de68af5f626fac1e412ef947b1003f5" kindref="member">right_</ref>;</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="191" refid="class_k_dtree_1_1kdtree_1a73c843c42fd511a710344813eb7e9376" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="class_k_dtree_1_1_cache" kindref="compound">cache</ref><sp/>=<sp/><ref refid="class_k_dtree_1_1_cache" kindref="compound">Cache&lt;double, node*&gt;</ref>;</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="195" refid="class_k_dtree_1_1kdtree_1a05e29ac38ae5a71beda716fbfddbc766" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_k_dtree_1_1kdtree_1_1node" kindref="compound">node</ref>*<sp/><ref refid="class_k_dtree_1_1kdtree_1a05e29ac38ae5a71beda716fbfddbc766" kindref="member">root_</ref>;</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="197" refid="class_k_dtree_1_1kdtree_1ad7a1d004e9c6c0c775041dc47f487f1f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="class_k_dtree_1_1kdtree_1ad7a1d004e9c6c0c775041dc47f487f1f" kindref="member">visited_</ref>;</highlight></codeline>
<codeline lineno="198" refid="class_k_dtree_1_1kdtree_1ae459908407ba06e78f5d11739d622b53" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;node&gt;<sp/><ref refid="class_k_dtree_1_1kdtree_1ae459908407ba06e78f5d11739d622b53" kindref="member">nodes_</ref>;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="200" refid="struct_k_dtree_1_1kdtree_1_1node__cmp" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_k_dtree_1_1kdtree_1_1node__cmp" kindref="compound">node_cmp</ref></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="202" refid="struct_k_dtree_1_1kdtree_1_1node__cmp_1a7a4132e4f7e62538751b148eea6fe9e1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_k_dtree_1_1kdtree_1_1node__cmp_1a7a4132e4f7e62538751b148eea6fe9e1" kindref="member">node_cmp</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>index)<sp/>:<sp/><ref refid="struct_k_dtree_1_1kdtree_1_1node__cmp_1ad822414d04812c9f94f19f612ca56f8c" kindref="member">index_</ref>(index)</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="206" refid="struct_k_dtree_1_1kdtree_1_1node__cmp_1a75cfe2eb6e7ec79e452604855e2cdb18" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="struct_k_dtree_1_1kdtree_1_1node__cmp_1a75cfe2eb6e7ec79e452604855e2cdb18" kindref="member">operator()</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_k_dtree_1_1kdtree_1_1node" kindref="compound">node</ref>&amp;<sp/>n1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_k_dtree_1_1kdtree_1_1node" kindref="compound">node</ref>&amp;<sp/>n2)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="207"><highlight class="keyword"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>n1.<ref refid="struct_k_dtree_1_1kdtree_1_1node_1a4b85af0f26388e84665ba184155ba3a4" kindref="member">point_</ref>.<ref refid="class_k_dtree_1_1point_1a693012127d3ee164726ed99f67d7ddac" kindref="member">get</ref>(<ref refid="struct_k_dtree_1_1kdtree_1_1node__cmp_1ad822414d04812c9f94f19f612ca56f8c" kindref="member">index_</ref>)<sp/>&lt;<sp/>n2.<ref refid="struct_k_dtree_1_1kdtree_1_1node_1a4b85af0f26388e84665ba184155ba3a4" kindref="member">point_</ref>.<ref refid="class_k_dtree_1_1point_1a693012127d3ee164726ed99f67d7ddac" kindref="member">get</ref>(<ref refid="struct_k_dtree_1_1kdtree_1_1node__cmp_1ad822414d04812c9f94f19f612ca56f8c" kindref="member">index_</ref>);</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="210" refid="struct_k_dtree_1_1kdtree_1_1node__cmp_1ad822414d04812c9f94f19f612ca56f8c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="struct_k_dtree_1_1kdtree_1_1node__cmp_1ad822414d04812c9f94f19f612ca56f8c" kindref="member">index_</ref>;</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="213" refid="class_k_dtree_1_1kdtree_1aa32d61a1534b52c07765750706a5335f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_k_dtree_1_1kdtree_1_1node" kindref="compound">node</ref>*<sp/><ref refid="class_k_dtree_1_1kdtree_1aa32d61a1534b52c07765750706a5335f" kindref="member">make_tree</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>begin,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>end,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>index)</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(end<sp/>&lt;=<sp/>begin)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>begin<sp/>+<sp/>(end<sp/>-<sp/>begin)/2;</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::nth_element(&amp;<ref refid="class_k_dtree_1_1kdtree_1ae459908407ba06e78f5d11739d622b53" kindref="member">nodes_</ref>[begin],<sp/>&amp;<ref refid="class_k_dtree_1_1kdtree_1ae459908407ba06e78f5d11739d622b53" kindref="member">nodes_</ref>[n],<sp/>&amp;<ref refid="class_k_dtree_1_1kdtree_1ae459908407ba06e78f5d11739d622b53" kindref="member">nodes_</ref>[end],<sp/><ref refid="struct_k_dtree_1_1kdtree_1_1node__cmp" kindref="compound">node_cmp</ref>(index));</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>index<sp/>=<sp/>(index<sp/>+<sp/>1)<sp/>%<sp/>dimensions;</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_dtree_1_1kdtree_1ae459908407ba06e78f5d11739d622b53" kindref="member">nodes_</ref>[n].left_<sp/><sp/>=<sp/><ref refid="class_k_dtree_1_1kdtree_1aa32d61a1534b52c07765750706a5335f" kindref="member">make_tree</ref>(begin,<sp/>n,<sp/>index);</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_dtree_1_1kdtree_1ae459908407ba06e78f5d11739d622b53" kindref="member">nodes_</ref>[n].right_<sp/>=<sp/><ref refid="class_k_dtree_1_1kdtree_1aa32d61a1534b52c07765750706a5335f" kindref="member">make_tree</ref>(n<sp/>+<sp/>1,<sp/>end,<sp/>index);</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>&amp;<ref refid="class_k_dtree_1_1kdtree_1ae459908407ba06e78f5d11739d622b53" kindref="member">nodes_</ref>[n];</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="224" refid="class_k_dtree_1_1kdtree_1aa58bba9dfe7d739510ef269d0eda12a7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_dtree_1_1kdtree_1aa58bba9dfe7d739510ef269d0eda12a7" kindref="member">nearestN</ref>(<ref refid="struct_k_dtree_1_1kdtree_1_1node" kindref="compound">node</ref>*<sp/>root,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_k_dtree_1_1point" kindref="compound">point_type</ref>&amp;<sp/><ref refid="class_k_dtree_1_1point" kindref="compound">point</ref>,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>index,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>N,</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_dtree_1_1_cache" kindref="compound">cache</ref>&amp;<sp/>best_)</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(root<sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++<ref refid="class_k_dtree_1_1kdtree_1ad7a1d004e9c6c0c775041dc47f487f1f" kindref="member">visited_</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>For<sp/>diagnostic<sp/>info<sp/>only</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>d<sp/>=<sp/>root-&gt;<ref refid="struct_k_dtree_1_1kdtree_1_1node_1af3ead000be381d9633076f7a049c9ca1" kindref="member">distance</ref>(<ref refid="class_k_dtree_1_1point" kindref="compound">point</ref>);</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(best_.size()&lt;N<sp/>||<sp/>d<sp/>&lt;<sp/>best_.rbegin()-&gt;first)<sp/>{</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>best_.<ref refid="class_k_dtree_1_1_cache_1a496ef1c22183670fd782fad18c0d559f" kindref="member">add</ref>(d,<sp/>root);</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>is<sp/>only<sp/>correct<sp/>if<sp/>the<sp/>test<sp/>point<sp/>is<sp/>never<sp/>in<sp/>the<sp/>data<sp/>set<sp/>.<sp/>.<sp/>.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>(best_.begin()-&gt;first<sp/>==<sp/>0)<sp/>return;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dx<sp/>=<sp/>root-&gt;<ref refid="struct_k_dtree_1_1kdtree_1_1node_1a791f1cbecb854afdc09431606e5776b4" kindref="member">get</ref>(index)<sp/>-<sp/><ref refid="class_k_dtree_1_1point" kindref="compound">point</ref>.<ref refid="class_k_dtree_1_1point_1a693012127d3ee164726ed99f67d7ddac" kindref="member">get</ref>(index);</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>index<sp/>=<sp/>(index<sp/>+<sp/>1)<sp/>%<sp/>dimensions;</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_dtree_1_1kdtree_1aa58bba9dfe7d739510ef269d0eda12a7" kindref="member">nearestN</ref>(dx<sp/>&gt;<sp/>0<sp/>?<sp/>root-&gt;<ref refid="struct_k_dtree_1_1kdtree_1_1node_1a1b960ae93ff36d6385f90c1327bbe2b5" kindref="member">left_</ref><sp/><sp/>:<sp/>root-&gt;<ref refid="struct_k_dtree_1_1kdtree_1_1node_1a2de68af5f626fac1e412ef947b1003f5" kindref="member">right_</ref>,<sp/><ref refid="class_k_dtree_1_1point" kindref="compound">point</ref>,<sp/>index,<sp/>N,<sp/>best_);</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(best_.size()&gt;=N<sp/>and<sp/>dx<sp/>*<sp/>dx<sp/>&gt;=<sp/>best_.rbegin()-&gt;first)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_dtree_1_1kdtree_1aa58bba9dfe7d739510ef269d0eda12a7" kindref="member">nearestN</ref>(dx<sp/>&gt;<sp/>0<sp/>?<sp/>root-&gt;<ref refid="struct_k_dtree_1_1kdtree_1_1node_1a2de68af5f626fac1e412ef947b1003f5" kindref="member">right_</ref><sp/>:<sp/>root-&gt;<ref refid="struct_k_dtree_1_1kdtree_1_1node_1a1b960ae93ff36d6385f90c1327bbe2b5" kindref="member">left_</ref>,<sp/><sp/><ref refid="class_k_dtree_1_1point" kindref="compound">point</ref>,<sp/>index,<sp/>N,<sp/>best_);</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="248" refid="class_k_dtree_1_1kdtree_1a08ace98fabf7f04410138593270d1cee" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_dtree_1_1kdtree_1a08ace98fabf7f04410138593270d1cee" kindref="member">accum</ref>(<ref refid="struct_k_dtree_1_1kdtree_1_1node" kindref="compound">node</ref>*<sp/>root,<sp/>std::vector&lt;std::vector&lt;unsigned<sp/>long&gt;&gt;&amp;<sp/>ret,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>cur)</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ret[cur].push_back(root-&gt;<ref refid="struct_k_dtree_1_1kdtree_1_1node_1a4b85af0f26388e84665ba184155ba3a4" kindref="member">point_</ref>.<ref refid="class_k_dtree_1_1point_1a93001f2f3d45f19f7c2b178df4ae2a7f" kindref="member">indx</ref>());</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(root-&gt;<ref refid="struct_k_dtree_1_1kdtree_1_1node_1a1b960ae93ff36d6385f90c1327bbe2b5" kindref="member">left_</ref>)<sp/><sp/><ref refid="class_k_dtree_1_1kdtree_1a08ace98fabf7f04410138593270d1cee" kindref="member">accum</ref>(root-&gt;<ref refid="struct_k_dtree_1_1kdtree_1_1node_1a1b960ae93ff36d6385f90c1327bbe2b5" kindref="member">left_</ref>,<sp/><sp/>ret,<sp/>cur);</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(root-&gt;<ref refid="struct_k_dtree_1_1kdtree_1_1node_1a2de68af5f626fac1e412ef947b1003f5" kindref="member">right_</ref>)<sp/><ref refid="class_k_dtree_1_1kdtree_1a08ace98fabf7f04410138593270d1cee" kindref="member">accum</ref>(root-&gt;<ref refid="struct_k_dtree_1_1kdtree_1_1node_1a2de68af5f626fac1e412ef947b1003f5" kindref="member">right_</ref>,<sp/>ret,<sp/>cur);</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight></codeline>
<codeline lineno="255" refid="class_k_dtree_1_1kdtree_1a3f1ff1ad7101d0cca08124390a4d8628" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_k_dtree_1_1kdtree_1a3f1ff1ad7101d0cca08124390a4d8628" kindref="member">walk</ref>(<ref refid="struct_k_dtree_1_1kdtree_1_1node" kindref="compound">node</ref>*<sp/>root,<sp/>std::vector&lt;std::vector&lt;unsigned<sp/>long&gt;&gt;&amp;<sp/>ret,</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cur,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lev,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>level)</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lev<sp/>==<sp/>level)<sp/><ref refid="class_k_dtree_1_1kdtree_1a08ace98fabf7f04410138593270d1cee" kindref="member">accum</ref>(root,<sp/>ret,<sp/>cur);</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret[cur].push_back(root-&gt;<ref refid="struct_k_dtree_1_1kdtree_1_1node_1a4b85af0f26388e84665ba184155ba3a4" kindref="member">point_</ref>.<ref refid="class_k_dtree_1_1point_1a93001f2f3d45f19f7c2b178df4ae2a7f" kindref="member">indx</ref>());</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_dtree_1_1kdtree_1a3f1ff1ad7101d0cca08124390a4d8628" kindref="member">walk</ref>(root-&gt;<ref refid="struct_k_dtree_1_1kdtree_1_1node_1a1b960ae93ff36d6385f90c1327bbe2b5" kindref="member">left_</ref>,<sp/><sp/>ret,<sp/>2*cur<sp/>+<sp/>0,<sp/>lev<sp/>+<sp/>1,<sp/>level);</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_dtree_1_1kdtree_1a3f1ff1ad7101d0cca08124390a4d8628" kindref="member">walk</ref>(root-&gt;<ref refid="struct_k_dtree_1_1kdtree_1_1node_1a2de68af5f626fac1e412ef947b1003f5" kindref="member">right_</ref>,<sp/>ret,<sp/>2*cur<sp/>+<sp/>1,<sp/>lev<sp/>+<sp/>1,<sp/>level);</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight></codeline>
<codeline lineno="271" refid="class_k_dtree_1_1kdtree_1a3f2048b06eab9fc46b0c9c5bcc9bc714" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_dtree_1_1kdtree_1a3f2048b06eab9fc46b0c9c5bcc9bc714" kindref="member">kdtree</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_k_dtree_1_1kdtree" kindref="compound">kdtree</ref>&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="272" refid="class_k_dtree_1_1kdtree_1a95c7055268303a010a957cb9a2f72708" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_dtree_1_1kdtree" kindref="compound">kdtree</ref>&amp;<sp/><ref refid="class_k_dtree_1_1kdtree_1a95c7055268303a010a957cb9a2f72708" kindref="member">operator=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_k_dtree_1_1kdtree" kindref="compound">kdtree</ref>&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>iterator&gt;</highlight></codeline>
<codeline lineno="283" refid="class_k_dtree_1_1kdtree_1a2dc15e091ae69946ab7242675c7972b3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_dtree_1_1kdtree_1a2dc15e091ae69946ab7242675c7972b3" kindref="member">kdtree</ref>(iterator<sp/>begin,<sp/>iterator<sp/>end)</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_dtree_1_1kdtree_1ad7a1d004e9c6c0c775041dc47f487f1f" kindref="member">visited_</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_dtree_1_1kdtree_1ae459908407ba06e78f5d11739d622b53" kindref="member">nodes_</ref>.reserve(std::distance(begin,<sp/>end));</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>begin;<sp/>i<sp/>!=<sp/>end;<sp/>++i)</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_dtree_1_1kdtree_1ae459908407ba06e78f5d11739d622b53" kindref="member">nodes_</ref>.emplace_back(*i);</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_dtree_1_1kdtree_1a05e29ac38ae5a71beda716fbfddbc766" kindref="member">root_</ref><sp/>=<sp/><ref refid="class_k_dtree_1_1kdtree_1aa32d61a1534b52c07765750706a5335f" kindref="member">make_tree</ref>(0,<sp/><ref refid="class_k_dtree_1_1kdtree_1ae459908407ba06e78f5d11739d622b53" kindref="member">nodes_</ref>.size(),<sp/>0);</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>func&gt;</highlight></codeline>
<codeline lineno="301" refid="class_k_dtree_1_1kdtree_1a96221d70f375af756bb1d507d33aabd1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_dtree_1_1kdtree_1a96221d70f375af756bb1d507d33aabd1" kindref="member">kdtree</ref>(func&amp;&amp;<sp/>f,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>n)</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_dtree_1_1kdtree_1ad7a1d004e9c6c0c775041dc47f487f1f" kindref="member">visited_</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_dtree_1_1kdtree_1ae459908407ba06e78f5d11739d622b53" kindref="member">nodes_</ref>.reserve(n);</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>n;<sp/>++i)</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_dtree_1_1kdtree_1ae459908407ba06e78f5d11739d622b53" kindref="member">nodes_</ref>.emplace_back(f());</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_dtree_1_1kdtree_1a05e29ac38ae5a71beda716fbfddbc766" kindref="member">root_</ref><sp/>=<sp/><ref refid="class_k_dtree_1_1kdtree_1aa32d61a1534b52c07765750706a5335f" kindref="member">make_tree</ref>(0,<sp/><ref refid="class_k_dtree_1_1kdtree_1ae459908407ba06e78f5d11739d622b53" kindref="member">nodes_</ref>.size(),<sp/>0);</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="313" refid="class_k_dtree_1_1kdtree_1a5444c39408966995b6ec3634087ec521" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_k_dtree_1_1kdtree_1a5444c39408966995b6ec3634087ec521" kindref="member">empty</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="314"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_k_dtree_1_1kdtree_1ae459908407ba06e78f5d11739d622b53" kindref="member">nodes_</ref>.empty();</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="322" refid="class_k_dtree_1_1kdtree_1a50778a9c54c2b709400e2a20c8e7dc2a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="class_k_dtree_1_1kdtree_1a50778a9c54c2b709400e2a20c8e7dc2a" kindref="member">visited</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="323"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_k_dtree_1_1kdtree_1ad7a1d004e9c6c0c775041dc47f487f1f" kindref="member">visited_</ref>;</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="331" refid="class_k_dtree_1_1kdtree_1a024425e1dac5ca602177aa0fbc114505" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_k_dtree_1_1kdtree_1a024425e1dac5ca602177aa0fbc114505" kindref="member">distance</ref>(<ref refid="class_k_dtree_1_1_cache" kindref="compound">cache</ref>&amp;<sp/>best_)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="332"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::sqrt(best_.begin()-&gt;first);</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/>std::tuple&lt;point_type,<sp/>double,<sp/>double,<sp/>cache&gt;</highlight></codeline>
<codeline lineno="347" refid="class_k_dtree_1_1kdtree_1a1184c06c17ad742ef1d21321f48c9c6e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_dtree_1_1kdtree_1a1184c06c17ad742ef1d21321f48c9c6e" kindref="member">nearestN</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_k_dtree_1_1point" kindref="compound">point_type</ref>&amp;<sp/>pt,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>N)</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_dtree_1_1kdtree_1a05e29ac38ae5a71beda716fbfddbc766" kindref="member">root_</ref><sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::logic_error(</highlight><highlight class="stringliteral">&quot;tree<sp/>is<sp/>empty&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_dtree_1_1_cache" kindref="compound">cache</ref><sp/>best_(N);</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_dtree_1_1kdtree_1ad7a1d004e9c6c0c775041dc47f487f1f" kindref="member">visited_</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_dtree_1_1kdtree_1aa58bba9dfe7d739510ef269d0eda12a7" kindref="member">nearestN</ref>(<ref refid="class_k_dtree_1_1kdtree_1a05e29ac38ae5a71beda716fbfddbc766" kindref="member">root_</ref>,<sp/>pt,<sp/>0,<sp/>N,<sp/>best_);</highlight></codeline>
<codeline lineno="353"><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>wgt<sp/>=<sp/>0.0;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Sum<sp/>weights</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>b<sp/>:<sp/>best_)<sp/>wgt<sp/>+=<sp/>b.second-&gt;point_.mass();</highlight></codeline>
<codeline lineno="356"><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__GNUC__<sp/>&gt;<sp/>6<sp/>or<sp/>defined(__clang__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>{best_.begin()-&gt;second-&gt;point_,<sp/>wgt,<sp/>std::sqrt(best_.rbegin()-&gt;first),<sp/>best_};</highlight></codeline>
<codeline lineno="359"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::tuple&lt;point_type,<sp/>double,<sp/>double,<sp/>cache&gt;<sp/>ret;</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::get&lt;0&gt;(ret)<sp/>=<sp/>best_.begin()-&gt;second-&gt;point_;</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::get&lt;1&gt;(ret)<sp/>=<sp/>wgt;</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::get&lt;2&gt;(ret)<sp/>=<sp/>std::sqrt(best_.rbegin()-&gt;first);</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::get&lt;3&gt;(ret)<sp/>=<sp/>best_;</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="366"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="368"><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/>std::tuple&lt;std::vector&lt;point_type&gt;,<sp/>double,<sp/><ref refid="class_k_dtree_1_1kdtree_1a73c843c42fd511a710344813eb7e9376" kindref="member">cache</ref>&gt;</highlight></codeline>
<codeline lineno="380" refid="class_k_dtree_1_1kdtree_1a9f434a583dfc36c081bc847ce08f604b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_k_dtree_1_1kdtree_1a9f434a583dfc36c081bc847ce08f604b" kindref="member">nearestList</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_k_dtree_1_1point" kindref="compound">point_type</ref>&amp;<sp/>pt,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>N)</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_k_dtree_1_1kdtree_1a05e29ac38ae5a71beda716fbfddbc766" kindref="member">root_</ref><sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::logic_error(</highlight><highlight class="stringliteral">&quot;tree<sp/>is<sp/>empty&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_dtree_1_1_cache" kindref="compound">cache</ref><sp/>best_(N);</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_dtree_1_1kdtree_1ad7a1d004e9c6c0c775041dc47f487f1f" kindref="member">visited_</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_dtree_1_1kdtree_1aa58bba9dfe7d739510ef269d0eda12a7" kindref="member">nearestN</ref>(<ref refid="class_k_dtree_1_1kdtree_1a05e29ac38ae5a71beda716fbfddbc766" kindref="member">root_</ref>,<sp/>pt,<sp/>0,<sp/>N,<sp/>best_);</highlight></codeline>
<codeline lineno="386"><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;point_type&gt;<sp/>pts;<sp/></highlight><highlight class="comment">//<sp/>The<sp/>returned<sp/>point<sp/>list</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>b<sp/>:<sp/>best_)<sp/>pts.push_back(b.second-&gt;point_);</highlight></codeline>
<codeline lineno="389"><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__GNUC__<sp/>&gt;<sp/>6</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>{pts,<sp/>std::sqrt(best_.rbegin()-&gt;first),<sp/>best_};</highlight></codeline>
<codeline lineno="392"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::tuple&lt;std::vector&lt;point_type&gt;,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;<sp/>ret;</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::get&lt;0&gt;(ret)<sp/>=<sp/>pts;</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::get&lt;1&gt;(ret)<sp/>=<sp/>std::sqrt(best_.rbegin()-&gt;first);</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::get&lt;2&gt;(ret)<sp/>=<sp/>best_;</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="398"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="400"><highlight class="normal"></highlight></codeline>
<codeline lineno="401" refid="class_k_dtree_1_1kdtree_1ac2e6fafd4d40a8bf6e9fc6e4c1ab5d67" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;double&gt;<sp/><ref refid="class_k_dtree_1_1kdtree_1ac2e6fafd4d40a8bf6e9fc6e4c1ab5d67" kindref="member">getDist</ref>(<ref refid="class_k_dtree_1_1_cache" kindref="compound">cache</ref>&amp;<sp/>best_)</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;double&gt;<sp/>ret;</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>v<sp/>:<sp/>best_)<sp/>ret.push_back(v.first);</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="408" refid="class_k_dtree_1_1kdtree_1a6983e3adb42de73fe6250532e0171091" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;std::vector&lt;unsigned<sp/>long&gt;&gt;<sp/><ref refid="class_k_dtree_1_1kdtree_1a6983e3adb42de73fe6250532e0171091" kindref="member">getPartition</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>level)</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>partitions<sp/>=<sp/>(1<sp/>&lt;&lt;<sp/>level);</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;std::vector&lt;unsigned<sp/>long&gt;&gt;<sp/>ret(partitions);</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_k_dtree_1_1kdtree_1a3f1ff1ad7101d0cca08124390a4d8628" kindref="member">walk</ref>(<ref refid="class_k_dtree_1_1kdtree_1a05e29ac38ae5a71beda716fbfddbc766" kindref="member">root_</ref>,<sp/>ret,<sp/>0,<sp/>0,<sp/>level);</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="415"><highlight class="normal"></highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="417"><highlight class="normal"></highlight></codeline>
<codeline lineno="418"><highlight class="normal">}</highlight></codeline>
<codeline lineno="419"><highlight class="normal"></highlight><highlight class="comment">//<sp/>END:<sp/>namespace<sp/>KDtree</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/weinberg/Projects/EXP/include/KDtree.H"/>
  </compounddef>
</doxygen>
