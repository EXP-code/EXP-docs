<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="class_transform_f_f_t" kind="class" language="C++" prot="public">
    <compoundname>TransformFFT</compoundname>
    <includes refid="_transform_f_f_t_8_h" local="no">TransformFFT.H</includes>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_transform_f_f_t_1a42df46b4c42f409decec15185c438462" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double TransformFFT::dk</definition>
        <argsstring></argsstring>
        <name>dk</name>
        <qualifiedname>TransformFFT::dk</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/TransformFFT.H" line="15" column="13" bodyfile="/home/weinberg/Projects/EXP/include/TransformFFT.H" bodystart="15" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_transform_f_f_t_1a7356961908810ec6060dadee8bccf629" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double TransformFFT::dr</definition>
        <argsstring></argsstring>
        <name>dr</name>
        <qualifiedname>TransformFFT::dr</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/TransformFFT.H" line="15" column="10" bodyfile="/home/weinberg/Projects/EXP/include/TransformFFT.H" bodystart="15" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_transform_f_f_t_1a4b7b60f83f9e4951698e5d2eb00f2fd6" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int TransformFFT::hi</definition>
        <argsstring></argsstring>
        <name>hi</name>
        <qualifiedname>TransformFFT::hi</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/TransformFFT.H" line="14" column="12" bodyfile="/home/weinberg/Projects/EXP/include/TransformFFT.H" bodystart="14" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_transform_f_f_t_1aa5ba3063dbb94c59ceb6c4b043bf938f" prot="private" static="no" mutable="no">
        <type>std::vector&lt; double &gt;</type>
        <definition>std::vector&lt;double&gt; TransformFFT::in</definition>
        <argsstring></argsstring>
        <name>in</name>
        <qualifiedname>TransformFFT::in</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/TransformFFT.H" line="18" column="15" bodyfile="/home/weinberg/Projects/EXP/include/TransformFFT.H" bodystart="18" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_transform_f_f_t_1ace352464af0c9dac5f3be0dc429ce0ba" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int TransformFFT::lo</definition>
        <argsstring></argsstring>
        <name>lo</name>
        <qualifiedname>TransformFFT::lo</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/TransformFFT.H" line="14" column="9" bodyfile="/home/weinberg/Projects/EXP/include/TransformFFT.H" bodystart="14" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_transform_f_f_t_1a7be5660c1bce374cd503a0e61b13e3d1" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int TransformFFT::N</definition>
        <argsstring></argsstring>
        <name>N</name>
        <qualifiedname>TransformFFT::N</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/TransformFFT.H" line="14" column="7" bodyfile="/home/weinberg/Projects/EXP/include/TransformFFT.H" bodystart="14" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_transform_f_f_t_1a1784d9455cb8bb53e7c87bb7f205bbaa" prot="private" static="no" mutable="no">
        <type>std::vector&lt; std::complex&lt; double &gt; &gt;</type>
        <definition>std::vector&lt;std::complex&lt;double&gt; &gt; TransformFFT::out</definition>
        <argsstring></argsstring>
        <name>out</name>
        <qualifiedname>TransformFFT::out</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/TransformFFT.H" line="19" column="15" bodyfile="/home/weinberg/Projects/EXP/include/TransformFFT.H" bodystart="19" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_transform_f_f_t_1acba28259ac41f0fb8279714bce108103" prot="private" static="no" mutable="no">
        <type>fftw_plan</type>
        <definition>fftw_plan TransformFFT::p</definition>
        <argsstring></argsstring>
        <name>p</name>
        <qualifiedname>TransformFFT::p</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/TransformFFT.H" line="17" column="13" bodyfile="/home/weinberg/Projects/EXP/include/TransformFFT.H" bodystart="17" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_transform_f_f_t_1a7077e53d998e105cd5c654948694fff1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TransformFFT::Inverse</definition>
        <argsstring>(Eigen::VectorXd &amp;F, Eigen::VectorXcd &amp;W)</argsstring>
        <name>Inverse</name>
        <qualifiedname>TransformFFT::Inverse</qualifiedname>
        <param>
          <type>Eigen::VectorXd &amp;</type>
          <declname>F</declname>
        </param>
        <param>
          <type>Eigen::VectorXcd &amp;</type>
          <declname>W</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/TransformFFT.H" line="30" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_transform_f_f_t_1ab284d5f1fdf86ee2265c50b408a5f75e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TransformFFT::Inverse</definition>
        <argsstring>(std::vector&lt; double &gt; &amp;F, std::vector&lt; double &gt; &amp;Wr, std::vector&lt; double &gt; &amp;Wi)</argsstring>
        <name>Inverse</name>
        <qualifiedname>TransformFFT::Inverse</qualifiedname>
        <param>
          <type>std::vector&lt; double &gt; &amp;</type>
          <declname>F</declname>
        </param>
        <param>
          <type>std::vector&lt; double &gt; &amp;</type>
          <declname>Wr</declname>
        </param>
        <param>
          <type>std::vector&lt; double &gt; &amp;</type>
          <declname>Wi</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/TransformFFT.H" line="31" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_transform_f_f_t_1ad82812703356ed0c89ca4974667e5bf4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TransformFFT::Power</definition>
        <argsstring>(Eigen::VectorXd &amp;F, Eigen::VectorXd &amp;P)</argsstring>
        <name>Power</name>
        <qualifiedname>TransformFFT::Power</qualifiedname>
        <param>
          <type>Eigen::VectorXd &amp;</type>
          <declname>F</declname>
        </param>
        <param>
          <type>Eigen::VectorXd &amp;</type>
          <declname>P</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/TransformFFT.H" line="27" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_transform_f_f_t_1a63c3e06563294025b7af2057e8d69080" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TransformFFT::Power</definition>
        <argsstring>(std::vector&lt; double &gt; &amp;F, std::vector&lt; double &gt; &amp;P)</argsstring>
        <name>Power</name>
        <qualifiedname>TransformFFT::Power</qualifiedname>
        <param>
          <type>std::vector&lt; double &gt; &amp;</type>
          <declname>F</declname>
        </param>
        <param>
          <type>std::vector&lt; double &gt; &amp;</type>
          <declname>P</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/TransformFFT.H" line="28" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_transform_f_f_t_1aa86943ee4c35687cabadf48dc10d0ed7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TransformFFT::TransformFFT</definition>
        <argsstring>(double dr, Eigen::VectorXd &amp;Y)</argsstring>
        <name>TransformFFT</name>
        <qualifiedname>TransformFFT::TransformFFT</qualifiedname>
        <param>
          <type>double</type>
          <declname>dr</declname>
        </param>
        <param>
          <type>Eigen::VectorXd &amp;</type>
          <declname>Y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/TransformFFT.H" line="24" column="3"/>
      </memberdef>
      <memberdef kind="function" id="class_transform_f_f_t_1a3d44fcbe8ed0702f26e75b4f4eb52bce" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TransformFFT::TransformFFT</definition>
        <argsstring>(double dr, std::vector&lt; double &gt; &amp;Y)</argsstring>
        <name>TransformFFT</name>
        <qualifiedname>TransformFFT::TransformFFT</qualifiedname>
        <param>
          <type>double</type>
          <declname>dr</declname>
        </param>
        <param>
          <type>std::vector&lt; double &gt; &amp;</type>
          <declname>Y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/TransformFFT.H" line="23" column="3"/>
      </memberdef>
      <memberdef kind="function" id="class_transform_f_f_t_1ae5747eeb7306cf05f77bf74efd020306" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TransformFFT::~TransformFFT</definition>
        <argsstring>()</argsstring>
        <name>~TransformFFT</name>
        <qualifiedname>TransformFFT::~TransformFFT</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/TransformFFT.H" line="25" column="3"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/weinberg/Projects/EXP/include/TransformFFT.H" line="12" column="1" bodyfile="/home/weinberg/Projects/EXP/include/TransformFFT.H" bodystart="13" bodyend="33"/>
    <listofallmembers>
      <member refid="class_transform_f_f_t_1a42df46b4c42f409decec15185c438462" prot="private" virt="non-virtual"><scope>TransformFFT</scope><name>dk</name></member>
      <member refid="class_transform_f_f_t_1a7356961908810ec6060dadee8bccf629" prot="private" virt="non-virtual"><scope>TransformFFT</scope><name>dr</name></member>
      <member refid="class_transform_f_f_t_1a4b7b60f83f9e4951698e5d2eb00f2fd6" prot="private" virt="non-virtual"><scope>TransformFFT</scope><name>hi</name></member>
      <member refid="class_transform_f_f_t_1aa5ba3063dbb94c59ceb6c4b043bf938f" prot="private" virt="non-virtual"><scope>TransformFFT</scope><name>in</name></member>
      <member refid="class_transform_f_f_t_1a7077e53d998e105cd5c654948694fff1" prot="public" virt="non-virtual"><scope>TransformFFT</scope><name>Inverse</name></member>
      <member refid="class_transform_f_f_t_1ab284d5f1fdf86ee2265c50b408a5f75e" prot="public" virt="non-virtual"><scope>TransformFFT</scope><name>Inverse</name></member>
      <member refid="class_transform_f_f_t_1ace352464af0c9dac5f3be0dc429ce0ba" prot="private" virt="non-virtual"><scope>TransformFFT</scope><name>lo</name></member>
      <member refid="class_transform_f_f_t_1a7be5660c1bce374cd503a0e61b13e3d1" prot="private" virt="non-virtual"><scope>TransformFFT</scope><name>N</name></member>
      <member refid="class_transform_f_f_t_1a1784d9455cb8bb53e7c87bb7f205bbaa" prot="private" virt="non-virtual"><scope>TransformFFT</scope><name>out</name></member>
      <member refid="class_transform_f_f_t_1acba28259ac41f0fb8279714bce108103" prot="private" virt="non-virtual"><scope>TransformFFT</scope><name>p</name></member>
      <member refid="class_transform_f_f_t_1ad82812703356ed0c89ca4974667e5bf4" prot="public" virt="non-virtual"><scope>TransformFFT</scope><name>Power</name></member>
      <member refid="class_transform_f_f_t_1a63c3e06563294025b7af2057e8d69080" prot="public" virt="non-virtual"><scope>TransformFFT</scope><name>Power</name></member>
      <member refid="class_transform_f_f_t_1a3d44fcbe8ed0702f26e75b4f4eb52bce" prot="public" virt="non-virtual"><scope>TransformFFT</scope><name>TransformFFT</name></member>
      <member refid="class_transform_f_f_t_1aa86943ee4c35687cabadf48dc10d0ed7" prot="public" virt="non-virtual"><scope>TransformFFT</scope><name>TransformFFT</name></member>
      <member refid="class_transform_f_f_t_1ae5747eeb7306cf05f77bf74efd020306" prot="public" virt="non-virtual"><scope>TransformFFT</scope><name>~TransformFFT</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
