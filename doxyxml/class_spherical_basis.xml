<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="class_spherical_basis" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>SphericalBasis</compoundname>
    <basecompoundref refid="class_axisymmetric_basis" prot="public" virt="non-virtual">AxisymmetricBasis</basecompoundref>
    <derivedcompoundref refid="class_bessel" prot="public" virt="non-virtual">Bessel</derivedcompoundref>
    <derivedcompoundref refid="class_sphere" prot="public" virt="non-virtual">Sphere</derivedcompoundref>
    <includes refid="_spherical_basis_8_h" local="no">SphericalBasis.H</includes>
    <sectiondef kind="protected-type">
      <memberdef kind="typedef" id="class_spherical_basis_1a4927dfcbaf0910033fcc37a4892f8bde" prot="protected" static="no">
        <type>std::shared_ptr&lt; Eigen::VectorXd &gt;</type>
        <definition>typedef std::shared_ptr&lt;Eigen::VectorXd&gt; SphericalBasis::VectorXdP</definition>
        <argsstring></argsstring>
        <name>VectorXdP</name>
        <qualifiedname>SphericalBasis::VectorXdP</qualifiedname>
        <briefdescription>
<para>Matrices per thread for obtaining expansion coefficients. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/SphericalBasis.H" line="58" column="27" bodyfile="/home/weinberg/Projects/EXP/src/SphericalBasis.H" bodystart="58" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="class_spherical_basis_1aac8c95f365acb42630d38d2b8a2c79f4" prot="protected" static="no" mutable="no">
        <type>const unsigned int</type>
        <definition>const unsigned int SphericalBasis::cmagic</definition>
        <argsstring></argsstring>
        <name>cmagic</name>
        <qualifiedname>SphericalBasis::cmagic</qualifiedname>
        <initializer>= 0xc0a57a2</initializer>
        <briefdescription>
<para>Coefficient magic number. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/SphericalBasis.H" line="296" column="22" bodyfile="/home/weinberg/Projects/EXP/src/SphericalBasis.H" bodystart="296" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_spherical_basis_1a27cb5e14065b26a1eaf8fecde6210db9" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool SphericalBasis::coefMaster</definition>
        <argsstring></argsstring>
        <name>coefMaster</name>
        <qualifiedname>SphericalBasis::coefMaster</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Master node ships coefficients to hosts. True (default) implies that only the master node caches the coefficients for playback to save core memory. This is set in the config input using the &apos;coefMaster: bool&apos; parameter. Once I am sure that there are no algorithmic issues, I will remove this as an option. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/SphericalBasis.H" line="312" column="8" bodyfile="/home/weinberg/Projects/EXP/src/SphericalBasis.H" bodystart="312" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_spherical_basis_1a843a19b3a3dc282c24cd1a6e19aab3ca" prot="protected" static="no" mutable="no">
        <type>std::vector&lt; Eigen::VectorXd &gt;</type>
        <definition>std::vector&lt;Eigen::VectorXd&gt; SphericalBasis::cosm</definition>
        <argsstring></argsstring>
        <name>cosm</name>
        <qualifiedname>SphericalBasis::cosm</qualifiedname>
        <briefdescription>
<para>Work vectors for cosines for all values <computeroutput>m</computeroutput> </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/SphericalBasis.H" line="72" column="15" bodyfile="/home/weinberg/Projects/EXP/src/SphericalBasis.H" bodystart="72" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_spherical_basis_1a3cfea1dc5ab6ba11187c8ce618f4bd22" prot="protected" static="no" mutable="no">
        <type>Eigen::MatrixXd</type>
        <definition>Eigen::MatrixXd SphericalBasis::dend</definition>
        <argsstring></argsstring>
        <name>dend</name>
        <qualifiedname>SphericalBasis::dend</qualifiedname>
        <briefdescription>
<para>Work matrix. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/SphericalBasis.H" line="78" column="19" bodyfile="/home/weinberg/Projects/EXP/src/SphericalBasis.H" bodystart="78" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_spherical_basis_1acf7e4a3d55ca7d250a2b814bd95321ba" prot="protected" static="no" mutable="no">
        <type>std::vector&lt; std::vector&lt; Eigen::MatrixXd &gt; &gt;</type>
        <definition>std::vector&lt; std::vector&lt;Eigen::MatrixXd&gt; &gt; SphericalBasis::differ1</definition>
        <argsstring></argsstring>
        <name>differ1</name>
        <qualifiedname>SphericalBasis::differ1</qualifiedname>
        <briefdescription>
<para>For updating levels. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/SphericalBasis.H" line="286" column="15" bodyfile="/home/weinberg/Projects/EXP/src/SphericalBasis.H" bodystart="286" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_spherical_basis_1aff89452a2ddcef22eb9333b5c04df0ef" prot="protected" static="no" mutable="no">
        <type>std::vector&lt; Eigen::MatrixXd &gt;</type>
        <definition>std::vector&lt;Eigen::MatrixXd&gt; SphericalBasis::dlegs</definition>
        <argsstring></argsstring>
        <name>dlegs</name>
        <qualifiedname>SphericalBasis::dlegs</qualifiedname>
        <briefdescription>
<para>Matrices per thread for obtaining derivatives legendre coefficients. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/SphericalBasis.H" line="53" column="15" bodyfile="/home/weinberg/Projects/EXP/src/SphericalBasis.H" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_spherical_basis_1aa1ad955dd550cd637a32cc11cccc3100" prot="protected" static="no" mutable="no">
        <type>std::vector&lt; Eigen::MatrixXd &gt;</type>
        <definition>std::vector&lt;Eigen::MatrixXd&gt; SphericalBasis::dpot</definition>
        <argsstring></argsstring>
        <name>dpot</name>
        <qualifiedname>SphericalBasis::dpot</qualifiedname>
        <briefdescription>
<para>Matrices per thread for obtaining derivative of potential field. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/SphericalBasis.H" line="47" column="15" bodyfile="/home/weinberg/Projects/EXP/src/SphericalBasis.H" bodystart="47" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_spherical_basis_1a91d743a30554403f62492950613bea5b" prot="protected" static="no" mutable="no">
        <type>std::vector&lt; Eigen::VectorXd &gt;</type>
        <definition>std::vector&lt;Eigen::VectorXd&gt; SphericalBasis::du</definition>
        <argsstring></argsstring>
        <name>du</name>
        <qualifiedname>SphericalBasis::du</qualifiedname>
        <briefdescription>
<para>Work vectors to make recursion evaluations thread safe. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/SphericalBasis.H" line="41" column="15" bodyfile="/home/weinberg/Projects/EXP/src/SphericalBasis.H" bodystart="41" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_spherical_basis_1a68de61b1e9ba7549723513791436e087" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool SphericalBasis::EVEN_L</definition>
        <argsstring></argsstring>
        <name>EVEN_L</name>
        <qualifiedname>SphericalBasis::EVEN_L</qualifiedname>
        <briefdescription>
<para>Flag use of even l harmonics only. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/SphericalBasis.H" line="242" column="8" bodyfile="/home/weinberg/Projects/EXP/src/SphericalBasis.H" bodystart="242" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_spherical_basis_1acb6cedabe692304779492aaea2efb698" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool SphericalBasis::EVEN_M</definition>
        <argsstring></argsstring>
        <name>EVEN_M</name>
        <qualifiedname>SphericalBasis::EVEN_M</qualifiedname>
        <briefdescription>
<para>Flag use of even m harmonics only. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/SphericalBasis.H" line="245" column="8" bodyfile="/home/weinberg/Projects/EXP/src/SphericalBasis.H" bodystart="245" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_spherical_basis_1a678f0fd3cf6338763c2acd325a3e3b18" prot="protected" static="no" mutable="no">
        <type>std::vector&lt; std::vector&lt; <ref refid="class_spherical_basis_1a4927dfcbaf0910033fcc37a4892f8bde" kindref="member">VectorXdP</ref> &gt; &gt;</type>
        <definition>std::vector&lt;std::vector&lt;VectorXdP&gt; &gt; SphericalBasis::expcoef0</definition>
        <argsstring></argsstring>
        <name>expcoef0</name>
        <qualifiedname>SphericalBasis::expcoef0</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/SphericalBasis.H" line="59" column="15" bodyfile="/home/weinberg/Projects/EXP/src/SphericalBasis.H" bodystart="59" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_spherical_basis_1a39e31915305ef9daa6b39d3c5cbd9dad" prot="protected" static="no" mutable="no">
        <type>Eigen::MatrixXd</type>
        <definition>Eigen::MatrixXd SphericalBasis::factorial</definition>
        <argsstring></argsstring>
        <name>factorial</name>
        <qualifiedname>SphericalBasis::factorial</qualifiedname>
        <briefdescription>
<para>Cache factorial values. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/SphericalBasis.H" line="81" column="19" bodyfile="/home/weinberg/Projects/EXP/src/SphericalBasis.H" bodystart="81" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_spherical_basis_1a31522511eefb3602a9201dd0d3fd3bb8" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool SphericalBasis::firstime_accel</definition>
        <argsstring></argsstring>
        <name>firstime_accel</name>
        <qualifiedname>SphericalBasis::firstime_accel</qualifiedname>
        <briefdescription>
<para>Flag whether or not work space has been initialized for acceleration. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/SphericalBasis.H" line="108" column="8" bodyfile="/home/weinberg/Projects/EXP/src/SphericalBasis.H" bodystart="108" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_spherical_basis_1aef3567656d31d9a8d694f015e0ff87fe" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool SphericalBasis::firstime_coef</definition>
        <argsstring></argsstring>
        <name>firstime_coef</name>
        <qualifiedname>SphericalBasis::firstime_coef</qualifiedname>
        <briefdescription>
<para>Flag whether or not work space has been initialized for coefficients. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/SphericalBasis.H" line="105" column="8" bodyfile="/home/weinberg/Projects/EXP/src/SphericalBasis.H" bodystart="105" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_spherical_basis_1a79dc94b3d9151be5c82758e785f27102" prot="protected" static="no" mutable="no">
        <type>Eigen::MatrixXd</type>
        <definition>Eigen::MatrixXd SphericalBasis::krnl</definition>
        <argsstring></argsstring>
        <name>krnl</name>
        <qualifiedname>SphericalBasis::krnl</qualifiedname>
        <briefdescription>
<para>Will cache values of the kernel required for recursion relations. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/SphericalBasis.H" line="35" column="19" bodyfile="/home/weinberg/Projects/EXP/src/SphericalBasis.H" bodystart="35" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_spherical_basis_1aa594052066fda40758b8e4757fbab0aa" prot="protected" static="no" mutable="no">
        <type>double</type>
        <definition>double SphericalBasis::lastPlayTime</definition>
        <argsstring></argsstring>
        <name>lastPlayTime</name>
        <qualifiedname>SphericalBasis::lastPlayTime</qualifiedname>
        <briefdescription>
<para>Last playback coefficient evaluation time. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/SphericalBasis.H" line="315" column="10" bodyfile="/home/weinberg/Projects/EXP/src/SphericalBasis.H" bodystart="315" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_spherical_basis_1a172c954d497270d8bb6561367b990b5d" prot="protected" static="no" mutable="no">
        <type>std::vector&lt; Eigen::MatrixXd &gt;</type>
        <definition>std::vector&lt;Eigen::MatrixXd&gt; SphericalBasis::legs</definition>
        <argsstring></argsstring>
        <name>legs</name>
        <qualifiedname>SphericalBasis::legs</qualifiedname>
        <briefdescription>
<para>Matrices per thread for obtaining legendre coefficients. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/SphericalBasis.H" line="50" column="15" bodyfile="/home/weinberg/Projects/EXP/src/SphericalBasis.H" bodystart="50" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_spherical_basis_1a463dfd0a4b7a6f16a7a814e887dce037" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool SphericalBasis::M0_only</definition>
        <argsstring></argsstring>
        <name>M0_only</name>
        <qualifiedname>SphericalBasis::M0_only</qualifiedname>
        <briefdescription>
<para>Use axisymmetric term s. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/SphericalBasis.H" line="248" column="8" bodyfile="/home/weinberg/Projects/EXP/src/SphericalBasis.H" bodystart="248" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_spherical_basis_1ae90709b119fc3f5df1c76abb8145bee8" prot="protected" static="no" mutable="no">
        <type>Eigen::VectorXd</type>
        <definition>Eigen::VectorXd SphericalBasis::meanC</definition>
        <argsstring></argsstring>
        <name>meanC</name>
        <qualifiedname>SphericalBasis::meanC</qualifiedname>
        <briefdescription>
<para>Expected coefficient values for RMS noise computation. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/SphericalBasis.H" line="260" column="19" bodyfile="/home/weinberg/Projects/EXP/src/SphericalBasis.H" bodystart="260" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_spherical_basis_1af0c80585c72228373e886563448ba6e2" prot="protected" static="no" mutable="no">
        <type><ref refid="class_mixture_basis" kindref="compound">MixtureBasis</ref> *</type>
        <definition>MixtureBasis* SphericalBasis::mix</definition>
        <argsstring></argsstring>
        <name>mix</name>
        <qualifiedname>SphericalBasis::mix</qualifiedname>
        <briefdescription>
<para>For massive satellite simulations. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/SphericalBasis.H" line="299" column="16" bodyfile="/home/weinberg/Projects/EXP/src/SphericalBasis.H" bodystart="299" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_spherical_basis_1a5d72272244c58109d29a4d3e03f51ce9" prot="protected" static="no" mutable="no">
        <type>double</type>
        <definition>double SphericalBasis::muse0</definition>
        <argsstring></argsstring>
        <name>muse0</name>
        <qualifiedname>SphericalBasis::muse0</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/SphericalBasis.H" line="65" column="10" bodyfile="/home/weinberg/Projects/EXP/src/SphericalBasis.H" bodystart="65" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_spherical_basis_1aee6466e0b29f8c1f9c4df8baa0e607d6" prot="protected" static="no" mutable="no">
        <type>vector&lt; double &gt;</type>
        <definition>vector&lt;double&gt; SphericalBasis::muse1</definition>
        <argsstring></argsstring>
        <name>muse1</name>
        <qualifiedname>SphericalBasis::muse1</qualifiedname>
        <briefdescription>
<para>Mass accumulation for PCA. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/SphericalBasis.H" line="64" column="10" bodyfile="/home/weinberg/Projects/EXP/src/SphericalBasis.H" bodystart="64" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_spherical_basis_1a67a78c946ad3a87bafd4be8ea267f266" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool SphericalBasis::NO_L0</definition>
        <argsstring></argsstring>
        <name>NO_L0</name>
        <qualifiedname>SphericalBasis::NO_L0</qualifiedname>
        <briefdescription>
<para>Flag fixed monopole. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/SphericalBasis.H" line="236" column="8" bodyfile="/home/weinberg/Projects/EXP/src/SphericalBasis.H" bodystart="236" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_spherical_basis_1ae51f8f0ffc23b5826245038719998eb6" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool SphericalBasis::NO_L1</definition>
        <argsstring></argsstring>
        <name>NO_L1</name>
        <qualifiedname>SphericalBasis::NO_L1</qualifiedname>
        <briefdescription>
<para>Flag drop l=1 term. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/SphericalBasis.H" line="239" column="8" bodyfile="/home/weinberg/Projects/EXP/src/SphericalBasis.H" bodystart="239" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_spherical_basis_1a27229561fbae3c1f7bf416933767a494" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool SphericalBasis::NOISE</definition>
        <argsstring></argsstring>
        <name>NOISE</name>
        <qualifiedname>SphericalBasis::NOISE</qualifiedname>
        <briefdescription>
<para>Flag adding noise to coefficients (for testing diffusion) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/SphericalBasis.H" line="251" column="8" bodyfile="/home/weinberg/Projects/EXP/src/SphericalBasis.H" bodystart="251" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_spherical_basis_1a3cbbfe1042e83cf11ab096ec01b5a518" prot="protected" static="no" mutable="no">
        <type>string</type>
        <definition>string SphericalBasis::noise_model_file</definition>
        <argsstring></argsstring>
        <name>noise_model_file</name>
        <qualifiedname>SphericalBasis::noise_model_file</qualifiedname>
        <briefdescription>
<para>Model for RMS noise computation. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/SphericalBasis.H" line="257" column="10" bodyfile="/home/weinberg/Projects/EXP/src/SphericalBasis.H" bodystart="257" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_spherical_basis_1af4a0835e95c0e0f5406977a92c11ed6f" prot="protected" static="no" mutable="no">
        <type>double</type>
        <definition>double SphericalBasis::noiseN</definition>
        <argsstring></argsstring>
        <name>noiseN</name>
        <qualifiedname>SphericalBasis::noiseN</qualifiedname>
        <briefdescription>
<para>Number of &quot;effective&quot; points for RMS noise computation. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/SphericalBasis.H" line="254" column="10" bodyfile="/home/weinberg/Projects/EXP/src/SphericalBasis.H" bodystart="254" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_spherical_basis_1a64ddd550a0b2994a5800a064883814e6" prot="protected" static="no" mutable="no">
        <type>std::normal_distribution</type>
        <definition>std::normal_distribution SphericalBasis::nrand</definition>
        <argsstring></argsstring>
        <name>nrand</name>
        <qualifiedname>SphericalBasis::nrand</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/SphericalBasis.H" line="269" column="4" bodyfile="/home/weinberg/Projects/EXP/src/SphericalBasis.H" bodystart="269" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_spherical_basis_1a2c45c3e7a097ab190a77f882dac5c2c2" prot="protected" static="no" mutable="no">
        <type>std::vector&lt; std::vector&lt; unsigned &gt; &gt;</type>
        <definition>std::vector&lt;std::vector&lt;unsigned&gt; &gt; SphericalBasis::occt</definition>
        <argsstring></argsstring>
        <name>occt</name>
        <qualifiedname>SphericalBasis::occt</qualifiedname>
        <briefdescription>
<para>CUDA method for coefficient accumulation. </para>
        </briefdescription>
        <detaileddescription>
<para>Test change level counts for deep debugging enabled by setting SPH_UPDATE_TABLE at the top of this header file </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/SphericalBasis.H" line="211" column="15" bodyfile="/home/weinberg/Projects/EXP/src/SphericalBasis.H" bodystart="211" bodyend="-1"/>
        <referencedby refid="class_spherical_basis_1af0aaa7a1ef27c5ccb866190e5cefd90a" compoundref="_spherical_basis_8_h" startline="379" endline="385">multistep_add_debug</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_spherical_basis_1a69a29f7fd957e20aebe7797ba7f266bf" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool SphericalBasis::ortho_check</definition>
        <argsstring></argsstring>
        <name>ortho_check</name>
        <qualifiedname>SphericalBasis::ortho_check</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Compute the biorthogonality inner product and write to a file for internal self-consistency check. Enabled by including the YAML boolean &apos;orthocheck&apos;. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/SphericalBasis.H" line="335" column="8" bodyfile="/home/weinberg/Projects/EXP/src/SphericalBasis.H" bodystart="335" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_spherical_basis_1aa78ad9fca6de2d329ffc43522b1f067c" prot="protected" static="no" mutable="no">
        <type>std::vector&lt; double &gt;</type>
        <definition>std::vector&lt; double &gt; SphericalBasis::pack</definition>
        <argsstring></argsstring>
        <name>pack</name>
        <qualifiedname>SphericalBasis::pack</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/SphericalBasis.H" line="287" column="15" bodyfile="/home/weinberg/Projects/EXP/src/SphericalBasis.H" bodystart="287" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_spherical_basis_1a4c8c57602fd3b7eb58c08c35c2964f90" prot="protected" static="no" mutable="no">
        <type>std::shared_ptr&lt; CoefClasses::SphCoefs &gt;</type>
        <definition>std::shared_ptr&lt;CoefClasses::SphCoefs&gt; SphericalBasis::playback</definition>
        <argsstring></argsstring>
        <name>playback</name>
        <qualifiedname>SphericalBasis::playback</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Coefficient playback instance. Using shared_ptr to avoid constructing a simple pointer or null instance </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/SphericalBasis.H" line="304" column="19" bodyfile="/home/weinberg/Projects/EXP/src/SphericalBasis.H" bodystart="304" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_spherical_basis_1a843909b7df76df454ca77ca502e05065" prot="protected" static="no" mutable="no">
        <type>std::vector&lt; Eigen::MatrixXd &gt;</type>
        <definition>std::vector&lt;Eigen::MatrixXd&gt; SphericalBasis::potd</definition>
        <argsstring></argsstring>
        <name>potd</name>
        <qualifiedname>SphericalBasis::potd</qualifiedname>
        <briefdescription>
<para>Matrices per thread for obtaining potential field. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/SphericalBasis.H" line="44" column="15" bodyfile="/home/weinberg/Projects/EXP/src/SphericalBasis.H" bodystart="44" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_spherical_basis_1ab5d753ab8f0ddfb814fe73a027af323d" prot="protected" static="no" mutable="no">
        <type>double</type>
        <definition>double SphericalBasis::resetT</definition>
        <argsstring></argsstring>
        <name>resetT</name>
        <qualifiedname>SphericalBasis::resetT</qualifiedname>
        <briefdescription>
<para><ref refid="class_time" kindref="compound">Time</ref> at last multistep reset. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/SphericalBasis.H" line="69" column="10" bodyfile="/home/weinberg/Projects/EXP/src/SphericalBasis.H" bodystart="69" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_spherical_basis_1a99942ed4bb5830034724f7f32c284cea" prot="protected" static="no" mutable="no">
        <type>std::mt19937</type>
        <definition>std::mt19937 SphericalBasis::rgen</definition>
        <argsstring></argsstring>
        <name>rgen</name>
        <qualifiedname>SphericalBasis::rgen</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/SphericalBasis.H" line="268" column="16" bodyfile="/home/weinberg/Projects/EXP/src/SphericalBasis.H" bodystart="268" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_spherical_basis_1a498d5da25a19e0eaf75cb539fcda5227" prot="protected" static="no" mutable="no">
        <type>double</type>
        <definition>double SphericalBasis::rmax</definition>
        <argsstring></argsstring>
        <name>rmax</name>
        <qualifiedname>SphericalBasis::rmax</qualifiedname>
        <briefdescription>
<para>The maximum radius. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/SphericalBasis.H" line="230" column="10" bodyfile="/home/weinberg/Projects/EXP/src/SphericalBasis.H" bodystart="230" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_spherical_basis_1a1eda652331347885bac46d659ae02b8d" prot="protected" static="no" mutable="no">
        <type>double</type>
        <definition>double SphericalBasis::rmin</definition>
        <argsstring></argsstring>
        <name>rmin</name>
        <qualifiedname>SphericalBasis::rmin</qualifiedname>
        <briefdescription>
<para>The minimum radius. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/SphericalBasis.H" line="227" column="10" bodyfile="/home/weinberg/Projects/EXP/src/SphericalBasis.H" bodystart="227" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_spherical_basis_1a89d96243aa9a5c5932555116a3ce59e9" prot="protected" static="no" mutable="no">
        <type>Eigen::MatrixXd</type>
        <definition>Eigen::MatrixXd SphericalBasis::rmsC</definition>
        <argsstring></argsstring>
        <name>rmsC</name>
        <qualifiedname>SphericalBasis::rmsC</qualifiedname>
        <briefdescription>
<para>Expected squared coefficient values for RMS noise computation. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/SphericalBasis.H" line="263" column="19" bodyfile="/home/weinberg/Projects/EXP/src/SphericalBasis.H" bodystart="263" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_spherical_basis_1a73e589dd6b66a1a015e065d34021f525" prot="protected" static="no" mutable="no">
        <type>unsigned int</type>
        <definition>unsigned int SphericalBasis::seedN</definition>
        <argsstring></argsstring>
        <name>seedN</name>
        <qualifiedname>SphericalBasis::seedN</qualifiedname>
        <briefdescription>
<para>Pseudorandom generation. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/SphericalBasis.H" line="267" column="16" bodyfile="/home/weinberg/Projects/EXP/src/SphericalBasis.H" bodystart="267" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_spherical_basis_1a8a21a2f59849e53f52c532be168a5800" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool SphericalBasis::self_consistent</definition>
        <argsstring></argsstring>
        <name>self_consistent</name>
        <qualifiedname>SphericalBasis::self_consistent</qualifiedname>
        <briefdescription>
<para>Flag self_consitency. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/SphericalBasis.H" line="233" column="8" bodyfile="/home/weinberg/Projects/EXP/src/SphericalBasis.H" bodystart="233" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_spherical_basis_1ad9ea2d324f62151073b6cb3b4da9f28a" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool SphericalBasis::setup_noise</definition>
        <argsstring></argsstring>
        <name>setup_noise</name>
        <qualifiedname>SphericalBasis::setup_noise</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/SphericalBasis.H" line="224" column="8" bodyfile="/home/weinberg/Projects/EXP/src/SphericalBasis.H" bodystart="224" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_spherical_basis_1a01e5435d45829ea1fa2a7eaa94ca967a" prot="protected" static="no" mutable="no">
        <type>std::vector&lt; Eigen::VectorXd &gt;</type>
        <definition>std::vector&lt;Eigen::VectorXd&gt; SphericalBasis::sinm</definition>
        <argsstring></argsstring>
        <name>sinm</name>
        <qualifiedname>SphericalBasis::sinm</qualifiedname>
        <briefdescription>
<para>Work vectors for sines for all values <computeroutput>m</computeroutput> </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/SphericalBasis.H" line="75" column="15" bodyfile="/home/weinberg/Projects/EXP/src/SphericalBasis.H" bodystart="75" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_spherical_basis_1a985aeb555ac7cadb48ada5aa0b87a0a4" prot="protected" static="no" mutable="no">
        <type>CoefClasses::SphCoefs</type>
        <definition>CoefClasses::SphCoefs SphericalBasis::sphCoefs</definition>
        <argsstring></argsstring>
        <name>sphCoefs</name>
        <qualifiedname>SphericalBasis::sphCoefs</qualifiedname>
        <briefdescription>
<para>Coefficient container instance for writing HDF5. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/SphericalBasis.H" line="318" column="25" bodyfile="/home/weinberg/Projects/EXP/src/SphericalBasis.H" bodystart="318" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_spherical_basis_1aa69f1ee5a2a5ab8269b4cd0b97aa274a" prot="protected" static="no" mutable="no">
        <type>double</type>
        <definition>double SphericalBasis::ssfrac</definition>
        <argsstring></argsstring>
        <name>ssfrac</name>
        <qualifiedname>SphericalBasis::ssfrac</qualifiedname>
        <briefdescription>
<para>Subsample fraction of particles. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/SphericalBasis.H" line="273" column="10" bodyfile="/home/weinberg/Projects/EXP/src/SphericalBasis.H" bodystart="273" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_spherical_basis_1ac8ace6001c8d041fb39f13cb27b2ca19" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool SphericalBasis::subset</definition>
        <argsstring></argsstring>
        <name>subset</name>
        <qualifiedname>SphericalBasis::subset</qualifiedname>
        <briefdescription>
<para>Flag to use subset. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/SphericalBasis.H" line="276" column="8" bodyfile="/home/weinberg/Projects/EXP/src/SphericalBasis.H" bodystart="276" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_spherical_basis_1a3c3e727fad925e72690bb0dbd39a2676" prot="protected" static="no" mutable="no">
        <type>std::vector&lt; Eigen::VectorXd &gt;</type>
        <definition>std::vector&lt;Eigen::VectorXd&gt; SphericalBasis::u</definition>
        <argsstring></argsstring>
        <name>u</name>
        <qualifiedname>SphericalBasis::u</qualifiedname>
        <briefdescription>
<para>Work vectors to make recursion evaluations thread safe. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/SphericalBasis.H" line="38" column="15" bodyfile="/home/weinberg/Projects/EXP/src/SphericalBasis.H" bodystart="38" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_spherical_basis_1adb25dced63b1f56d205dd7d8e659f0ef" prot="protected" static="no" mutable="no">
        <type>std::vector&lt; double &gt;</type>
        <definition>std::vector&lt; double &gt; SphericalBasis::unpack</definition>
        <argsstring></argsstring>
        <name>unpack</name>
        <qualifiedname>SphericalBasis::unpack</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/SphericalBasis.H" line="287" column="20" bodyfile="/home/weinberg/Projects/EXP/src/SphericalBasis.H" bodystart="287" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="protected-static-attrib">
      <memberdef kind="variable" id="class_spherical_basis_1ad5c34eae92d36d7460c39c6f2c73fd27" prot="protected" static="yes" mutable="no">
        <type>const std::set&lt; std::string &gt;</type>
        <definition>const std::set&lt;std::string&gt; SphericalBasis::valid_keys</definition>
        <argsstring></argsstring>
        <name>valid_keys</name>
        <qualifiedname>SphericalBasis::valid_keys</qualifiedname>
        <briefdescription>
<para>Valid keys for YAML configurations. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/SphericalBasis.H" line="321" column="25" bodyfile="/home/weinberg/Projects/EXP/src/SphericalBasis.H" bodystart="321" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="class_spherical_basis_1a3a81bde48ab3654d1dbe004efcd06782" prot="public" static="yes" mutable="no">
        <type>bool</type>
        <definition>bool SphericalBasis::NewCoefs</definition>
        <argsstring></argsstring>
        <name>NewCoefs</name>
        <qualifiedname>SphericalBasis::NewCoefs</qualifiedname>
        <briefdescription>
<para>Use YAML header in coefficient file. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/SphericalBasis.H" line="342" column="15" bodyfile="/home/weinberg/Projects/EXP/src/SphericalBasis.H" bodystart="342" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="protected-func">
      <memberdef kind="function" id="class_spherical_basis_1a1066050b6ba526768710115eced4144f" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SphericalBasis::biorthogonality_check</definition>
        <argsstring>()</argsstring>
        <name>biorthogonality_check</name>
        <qualifiedname>SphericalBasis::biorthogonality_check</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/SphericalBasis.H" line="336" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_spherical_basis_1a1fb812ef3e4559b795aa1407ceaa6079" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void SphericalBasis::check_range</definition>
        <argsstring>()</argsstring>
        <name>check_range</name>
        <qualifiedname>SphericalBasis::check_range</qualifiedname>
        <briefdescription>
<para>Provided by derived classes to check consistency. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/SphericalBasis.H" line="87" column="16"/>
      </memberdef>
      <memberdef kind="function" id="class_spherical_basis_1ac6b350512a9ae518f4c8cbecb4a46593" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SphericalBasis::compute_multistep_coefficients</definition>
        <argsstring>()</argsstring>
        <name>compute_multistep_coefficients</name>
        <qualifiedname>SphericalBasis::compute_multistep_coefficients</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Extrapolate and sum coefficents per multistep level to get a complete set of coefficients for force evaluation at an intermediate time step </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/SphericalBasis.H" line="282" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_spherical_basis_1ac6d657e39329e543766a4503f25d3a37" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SphericalBasis::compute_rms_coefs</definition>
        <argsstring>(void)</argsstring>
        <name>compute_rms_coefs</name>
        <qualifiedname>SphericalBasis::compute_rms_coefs</qualifiedname>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Compute rms coefficients. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/SphericalBasis.H" line="220" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_spherical_basis_1a8371f1f235cbd49dbf0bd89541d8fdaf" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>double</type>
        <definition>virtual double SphericalBasis::d_r_to_xi</definition>
        <argsstring>(double r)</argsstring>
        <name>d_r_to_xi</name>
        <qualifiedname>SphericalBasis::d_r_to_xi</qualifiedname>
        <reimplementedby refid="class_sphere_1a5f0f6e819b476dfa29d1dad5b267a14a">d_r_to_xi</reimplementedby>
        <param>
          <type>double</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/SphericalBasis.H" line="327" column="18" bodyfile="/home/weinberg/Projects/EXP/src/SphericalBasis.H" bodystart="327" bodyend="327"/>
      </memberdef>
      <memberdef kind="function" id="class_spherical_basis_1a45f237bae8eb688588b95f8a0522b10d" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void *</type>
        <definition>virtual void * SphericalBasis::determine_acceleration_and_potential_thread</definition>
        <argsstring>(void *arg)</argsstring>
        <name>determine_acceleration_and_potential_thread</name>
        <qualifiedname>SphericalBasis::determine_acceleration_and_potential_thread</qualifiedname>
        <reimplements refid="class_pot_accel_1a45b09387fd7083e15a11522454f4c4b3">determine_acceleration_and_potential_thread</reimplements>
        <param>
          <type>void *</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
<para>Thread method for accerlation compuation. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/SphericalBasis.H" line="217" column="17"/>
      </memberdef>
      <memberdef kind="function" id="class_spherical_basis_1af9309f6e0f2eb72d4e3c046a15634a70" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void SphericalBasis::determine_coefficients_particles</definition>
        <argsstring>(void)</argsstring>
        <name>determine_coefficients_particles</name>
        <qualifiedname>SphericalBasis::determine_coefficients_particles</qualifiedname>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Compute the coefficients from particles. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/SphericalBasis.H" line="114" column="16"/>
      </memberdef>
      <memberdef kind="function" id="class_spherical_basis_1a100361ca78665ea58fb37f141f98bf07" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void SphericalBasis::determine_coefficients_playback</definition>
        <argsstring>(void)</argsstring>
        <name>determine_coefficients_playback</name>
        <qualifiedname>SphericalBasis::determine_coefficients_playback</qualifiedname>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Compute the coefficients from an table. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/SphericalBasis.H" line="117" column="16"/>
      </memberdef>
      <memberdef kind="function" id="class_spherical_basis_1a7ad9fad36d8b7074c7b47d0126ca26ef" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void *</type>
        <definition>virtual void * SphericalBasis::determine_coefficients_thread</definition>
        <argsstring>(void *arg)</argsstring>
        <name>determine_coefficients_thread</name>
        <qualifiedname>SphericalBasis::determine_coefficients_thread</qualifiedname>
        <reimplements refid="class_pot_accel_1a28536cd936e5c94562d5bccff2470d49">determine_coefficients_thread</reimplements>
        <param>
          <type>void *</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
<para>Thread method for coefficient accumulation. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/SphericalBasis.H" line="111" column="17"/>
      </memberdef>
      <memberdef kind="function" id="class_spherical_basis_1a34866d25c28ce00edf20be346f43361f" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SphericalBasis::dump_coefs_all</definition>
        <argsstring>(ostream &amp;)</argsstring>
        <name>dump_coefs_all</name>
        <qualifiedname>SphericalBasis::dump_coefs_all</qualifiedname>
        <param>
          <type>ostream &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Dump current coefficients (all multistep levels) For debugging . . . </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/SphericalBasis.H" line="293" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_spherical_basis_1ababeb377d9cc8f3150b3dac614fed0bb" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SphericalBasis::get_dens_coefs</definition>
        <argsstring>(int l, Eigen::VectorXd &amp;coef, double &amp;p)</argsstring>
        <name>get_dens_coefs</name>
        <qualifiedname>SphericalBasis::get_dens_coefs</qualifiedname>
        <param>
          <type>int</type>
          <declname>l</declname>
        </param>
        <param>
          <type>Eigen::VectorXd &amp;</type>
          <declname>coef</declname>
        </param>
        <param>
          <type>double &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
<para>Get density from coefficient vector. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/SphericalBasis.H" line="102" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_spherical_basis_1ab38a879d817874f75e324347afe33cb6" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SphericalBasis::get_pot_coefs</definition>
        <argsstring>(int l, const Eigen::VectorXd &amp;coef, double &amp;p, double &amp;dp)</argsstring>
        <name>get_pot_coefs</name>
        <qualifiedname>SphericalBasis::get_pot_coefs</qualifiedname>
        <param>
          <type>int</type>
          <declname>l</declname>
        </param>
        <param>
          <type>const Eigen::VectorXd &amp;</type>
          <declname>coef</declname>
        </param>
        <param>
          <type>double &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>double &amp;</type>
          <declname>dp</declname>
        </param>
        <briefdescription>
<para>Get potential and accel field values from coefficients. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/SphericalBasis.H" line="93" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_spherical_basis_1a590da9389de7deca03880fc5b1c6e3a4" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SphericalBasis::get_pot_coefs_safe</definition>
        <argsstring>(int l, const Eigen::VectorXd &amp;coef, double &amp;p, double &amp;dp, Eigen::MatrixXd &amp;potd1, Eigen::MatrixXd &amp;dpot1)</argsstring>
        <name>get_pot_coefs_safe</name>
        <qualifiedname>SphericalBasis::get_pot_coefs_safe</qualifiedname>
        <param>
          <type>int</type>
          <declname>l</declname>
        </param>
        <param>
          <type>const Eigen::VectorXd &amp;</type>
          <declname>coef</declname>
        </param>
        <param>
          <type>double &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>double &amp;</type>
          <declname>dp</declname>
        </param>
        <param>
          <type>Eigen::MatrixXd &amp;</type>
          <declname>potd1</declname>
        </param>
        <param>
          <type>Eigen::MatrixXd &amp;</type>
          <declname>dpot1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get potential and field values from coefficients (provide workspace for thread safety) </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/SphericalBasis.H" line="97" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_spherical_basis_1a33f78daf1c5dcf5ac4d327662963b1a5" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void SphericalBasis::initialize</definition>
        <argsstring>()</argsstring>
        <name>initialize</name>
        <qualifiedname>SphericalBasis::initialize</qualifiedname>
        <reimplements refid="class_pot_accel_1ada60d03bc82b8740fc7275d4c3f2149d">initialize</reimplements>
        <reimplementedby refid="class_bessel_1abab1334fcaeedd6ad07b0afda79741d6">initialize</reimplementedby>
        <reimplementedby refid="class_sphere_1aba7d59251bc70b4b2f45271025f285ff">initialize</reimplementedby>
        <briefdescription>
<para>Initialize method. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/SphericalBasis.H" line="84" column="16"/>
      </memberdef>
      <memberdef kind="function" id="class_spherical_basis_1a7db3a78056025d8c840dd22bae0b2692" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SphericalBasis::occt_output</definition>
        <argsstring>()</argsstring>
        <name>occt_output</name>
        <qualifiedname>SphericalBasis::occt_output</qualifiedname>
        <briefdescription>
<para>Print deep debugging data. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/SphericalBasis.H" line="214" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_spherical_basis_1ad1b2e558ad5f084a43d5368e86910763" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>double</type>
        <definition>virtual double SphericalBasis::r_to_xi</definition>
        <argsstring>(double r)</argsstring>
        <name>r_to_xi</name>
        <qualifiedname>SphericalBasis::r_to_xi</qualifiedname>
        <reimplementedby refid="class_sphere_1a60b2648f82fede09d60f0bc36bc4cd96">r_to_xi</reimplementedby>
        <param>
          <type>double</type>
          <declname>r</declname>
        </param>
        <briefdescription>
<para>Radial coordinate mapping (r-&gt;x, and x-&gt;r) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/SphericalBasis.H" line="325" column="18" bodyfile="/home/weinberg/Projects/EXP/src/SphericalBasis.H" bodystart="325" bodyend="325"/>
      </memberdef>
      <memberdef kind="function" id="class_spherical_basis_1aa6cc607bac98ab8abef4c46a6a06fee2" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SphericalBasis::setup</definition>
        <argsstring>()</argsstring>
        <name>setup</name>
        <qualifiedname>SphericalBasis::setup</qualifiedname>
        <briefdescription>
<para>Should be called by derived classes after initialization. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/SphericalBasis.H" line="90" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_spherical_basis_1aeee5549cb30e7c608c8255783ab10a52" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SphericalBasis::update_noise</definition>
        <argsstring>(void)</argsstring>
        <name>update_noise</name>
        <qualifiedname>SphericalBasis::update_noise</qualifiedname>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Add noise. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/SphericalBasis.H" line="223" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_spherical_basis_1a84edfe45c66d8221046d65aa63d19f8a" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>double</type>
        <definition>virtual double SphericalBasis::xi_to_r</definition>
        <argsstring>(double x)</argsstring>
        <name>xi_to_r</name>
        <qualifiedname>SphericalBasis::xi_to_r</qualifiedname>
        <reimplementedby refid="class_sphere_1a6699301c6969c5499ddf669f7f4fbffc">xi_to_r</reimplementedby>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/SphericalBasis.H" line="326" column="18" bodyfile="/home/weinberg/Projects/EXP/src/SphericalBasis.H" bodystart="326" bodyend="326"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_spherical_basis_1a73773546d4e45c0ac442a9853ef42225" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void SphericalBasis::determine_acceleration_and_potential</definition>
        <argsstring>(void)</argsstring>
        <name>determine_acceleration_and_potential</name>
        <qualifiedname>SphericalBasis::determine_acceleration_and_potential</qualifiedname>
        <reimplements refid="class_basis_1abb4dbfbe9c234f44b1719a4d89dc3951">determine_acceleration_and_potential</reimplements>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Required member to compute accleration and potential with threading. </para>
        </briefdescription>
        <detaileddescription>
<para>The thread member must be supplied by the derived class </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/SphericalBasis.H" line="367" column="16"/>
      </memberdef>
      <memberdef kind="function" id="class_spherical_basis_1a8ff7907cd7af5f79b63f11282c277cb2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void SphericalBasis::determine_coefficients</definition>
        <argsstring>(Component *c)</argsstring>
        <name>determine_coefficients</name>
        <qualifiedname>SphericalBasis::determine_coefficients</qualifiedname>
        <reimplements refid="class_pot_accel_1a3a9722c6b123ba2a0dd3671dec6cf724">determine_coefficients</reimplements>
        <param>
          <type><ref refid="class_component" kindref="compound">Component</ref> *</type>
          <declname>c</declname>
        </param>
        <briefdescription>
<para>Compute coefficients with threading using the provided component. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/SphericalBasis.H" line="362" column="16" bodyfile="/home/weinberg/Projects/EXP/src/SphericalBasis.H" bodystart="362" bodyend="363"/>
        <references refid="class_pot_accel_1afa2cd3b0bf51e23d8bfc54aac73ef010" compoundref="_pot_accel_8_h" startline="59">PotAccel::cC</references>
        <references refid="class_spherical_basis_1a91e8b02d7a7482ba2dd12cbae311533c">determine_coefficients</references>
      </memberdef>
      <memberdef kind="function" id="class_spherical_basis_1a91e8b02d7a7482ba2dd12cbae311533c" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void SphericalBasis::determine_coefficients</definition>
        <argsstring>(void)</argsstring>
        <name>determine_coefficients</name>
        <qualifiedname>SphericalBasis::determine_coefficients</qualifiedname>
        <reimplements refid="class_pot_accel_1a30dac3c15c2a7a67e9860e086cda27b8">determine_coefficients</reimplements>
        <reimplementedby refid="class_sphere_1a6d9c19cd5b655fb7e47fdbb680fe3e25">determine_coefficients</reimplementedby>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Required member to compute coeifficients with threading. </para>
        </briefdescription>
        <detaileddescription>
<para>The thread member must be supplied by the derived class </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/SphericalBasis.H" line="359" column="16"/>
        <referencedby refid="class_spherical_basis_1a8ff7907cd7af5f79b63f11282c277cb2" compoundref="_spherical_basis_8_h" startline="362" endline="363">determine_coefficients</referencedby>
        <referencedby refid="class_sphere_1a6d9c19cd5b655fb7e47fdbb680fe3e25" compoundref="_sphere_8_h" startline="139" endline="143">Sphere::determine_coefficients</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_spherical_basis_1a84fc725d4e62f743a3846b8b5908a42e" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void SphericalBasis::determine_fields_at_point</definition>
        <argsstring>(double x, double y, double z, double *tdens0, double *tpotl0, double *tdens, double *tpotl, double *tpotx, double *tpoty, double *tpotz)</argsstring>
        <name>determine_fields_at_point</name>
        <qualifiedname>SphericalBasis::determine_fields_at_point</qualifiedname>
        <reimplements refid="class_basis_1a8d4bece8ddfe81223177e63d76779284">determine_fields_at_point</reimplements>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <param>
          <type>double</type>
          <declname>y</declname>
        </param>
        <param>
          <type>double</type>
          <declname>z</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>tdens0</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>tpotl0</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>tdens</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>tpotl</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>tpotx</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>tpoty</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>tpotz</declname>
        </param>
        <briefdescription>
<para>Return the value for the fields in Cartesian coordinates. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/SphericalBasis.H" line="445" column="9"/>
      </memberdef>
      <memberdef kind="function" id="class_spherical_basis_1ab11fe59ba8d3a8e251ea96e72d93b654" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void SphericalBasis::determine_fields_at_point_cyl</definition>
        <argsstring>(double r, double z, double phi, double *tdens0, double *tpotl0, double *tdens, double *tpotl, double *tpotr, double *tpotz, double *tpotp)</argsstring>
        <name>determine_fields_at_point_cyl</name>
        <qualifiedname>SphericalBasis::determine_fields_at_point_cyl</qualifiedname>
        <reimplements refid="class_basis_1a3bcc5e3250f82d0ce476b096eabf342a">determine_fields_at_point_cyl</reimplements>
        <param>
          <type>double</type>
          <declname>r</declname>
        </param>
        <param>
          <type>double</type>
          <declname>z</declname>
        </param>
        <param>
          <type>double</type>
          <declname>phi</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>tdens0</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>tpotl0</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>tdens</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>tpotl</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>tpotr</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>tpotz</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>tpotp</declname>
        </param>
        <briefdescription>
<para>Returns the potential, its derivatives &amp; density in cylindrical coords. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/SphericalBasis.H" line="459" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_spherical_basis_1ab139a46a2cc6813b375b041dbe3b6498" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void SphericalBasis::determine_fields_at_point_sph</definition>
        <argsstring>(double r, double theta, double phi, double *tdens0, double *tpotl0, double *tdens, double *tpotl, double *tpotr, double *tpott, double *tpotp)</argsstring>
        <name>determine_fields_at_point_sph</name>
        <qualifiedname>SphericalBasis::determine_fields_at_point_sph</qualifiedname>
        <reimplements refid="class_basis_1a34f7d4340bcd0c5452f430cebf5c3665">determine_fields_at_point_sph</reimplements>
        <param>
          <type>double</type>
          <declname>r</declname>
        </param>
        <param>
          <type>double</type>
          <declname>theta</declname>
        </param>
        <param>
          <type>double</type>
          <declname>phi</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>tdens0</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>tpotl0</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>tdens</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>tpotl</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>tpotr</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>tpott</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>tpotp</declname>
        </param>
        <briefdescription>
<para>Returns the potential, its derivatives &amp; density in spherical coords. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/SphericalBasis.H" line="452" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_spherical_basis_1a518203f6db28e171c7dccd04611994b5" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void SphericalBasis::dump_coefs</definition>
        <argsstring>(ostream &amp;)</argsstring>
        <name>dump_coefs</name>
        <qualifiedname>SphericalBasis::dump_coefs</qualifiedname>
        <reimplements refid="class_pot_accel_1a10f4dd971b1a056bb6dacf01f2e2bcbf">dump_coefs</reimplements>
        <param>
          <type>ostream &amp;</type>
        </param>
        <briefdescription>
<para>Dump current coefficients. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/SphericalBasis.H" line="472" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_spherical_basis_1aababccfd0ab296c683963963caead0be" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void SphericalBasis::dump_coefs_h5</definition>
        <argsstring>(const std::string &amp;file)</argsstring>
        <name>dump_coefs_h5</name>
        <qualifiedname>SphericalBasis::dump_coefs_h5</qualifiedname>
        <reimplements refid="class_pot_accel_1ac53a3ab4bdfa2be33fbe4286b939230c">dump_coefs_h5</reimplements>
        <param>
          <type>const std::string &amp;</type>
          <declname>file</declname>
        </param>
        <briefdescription>
<para>Dump current coefficients into named HDF5 file. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/SphericalBasis.H" line="475" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_spherical_basis_1a05f775f3bae56543829492fae9a0b75f" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void SphericalBasis::get_acceleration_and_potential</definition>
        <argsstring>(Component *cC)</argsstring>
        <name>get_acceleration_and_potential</name>
        <qualifiedname>SphericalBasis::get_acceleration_and_potential</qualifiedname>
        <reimplements refid="class_pot_accel_1ab78f20762031db204f636fc8e74ea986">get_acceleration_and_potential</reimplements>
        <param>
          <type><ref refid="class_component" kindref="compound">Component</ref> *</type>
          <declname>cC</declname>
        </param>
        <briefdescription>
<para>Required member to compute accelration and potential. </para>
        </briefdescription>
        <detaileddescription>
<para>This implemenation should be fine for most cases </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/SphericalBasis.H" line="355" column="16"/>
      </memberdef>
      <memberdef kind="function" id="class_spherical_basis_1a0e2377c1cdc1335562343e01e4dee7cd" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void SphericalBasis::get_dens</definition>
        <argsstring>(int lmax, int nmax, double r, Eigen::MatrixXd &amp;d, int tid)=0</argsstring>
        <name>get_dens</name>
        <qualifiedname>SphericalBasis::get_dens</qualifiedname>
        <reimplementedby refid="class_bessel_1a2880028fe7092ce5a0dbcc2faeee3fc9">get_dens</reimplementedby>
        <reimplementedby refid="class_sphere_1ac5738f6eed896da5c7c53d463decdf00">get_dens</reimplementedby>
        <param>
          <type>int</type>
          <declname>lmax</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nmax</declname>
        </param>
        <param>
          <type>double</type>
          <declname>r</declname>
        </param>
        <param>
          <type>Eigen::MatrixXd &amp;</type>
          <declname>d</declname>
        </param>
        <param>
          <type>int</type>
          <declname>tid</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get derivative of potential <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>lmax</parametername>
</parameternamelist>
<parameterdescription>
<para>is the maximum harmonic order </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nmax</parametername>
</parameternamelist>
<parameterdescription>
<para>is the maximum radial order </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>r</parametername>
</parameternamelist>
<parameterdescription>
<para>is the evaluation radius </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>d</parametername>
</parameternamelist>
<parameterdescription>
<para>will be returned array in harmonics l and radial order n for the density </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>tid</parametername>
</parameternamelist>
<parameterdescription>
<para>is the thread enumerator that allows the function to provide some thread safety </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/SphericalBasis.H" line="426" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_spherical_basis_1ac3eafe5175c669b7b7b86932c764af32" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void SphericalBasis::get_dpotl</definition>
        <argsstring>(int lmax, int nmax, double r, Eigen::MatrixXd &amp;p, Eigen::MatrixXd &amp;dp, int tid)=0</argsstring>
        <name>get_dpotl</name>
        <qualifiedname>SphericalBasis::get_dpotl</qualifiedname>
        <reimplementedby refid="class_bessel_1ac29bd18788d05f1c59fe5d631b439f24">get_dpotl</reimplementedby>
        <reimplementedby refid="class_sphere_1a8c6a7bce9e2621c37ae76e1f863fa80c">get_dpotl</reimplementedby>
        <param>
          <type>int</type>
          <declname>lmax</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nmax</declname>
        </param>
        <param>
          <type>double</type>
          <declname>r</declname>
        </param>
        <param>
          <type>Eigen::MatrixXd &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>Eigen::MatrixXd &amp;</type>
          <declname>dp</declname>
        </param>
        <param>
          <type>int</type>
          <declname>tid</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get derivative of potential <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>lmax</parametername>
</parameternamelist>
<parameterdescription>
<para>is the maximum harmonic order </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nmax</parametername>
</parameternamelist>
<parameterdescription>
<para>is the maximum radial order </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>r</parametername>
</parameternamelist>
<parameterdescription>
<para>is the evaluation radius </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p</parametername>
</parameternamelist>
<parameterdescription>
<para>will be returned array in harmonics l and radial order n for the potential </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dp</parametername>
</parameternamelist>
<parameterdescription>
<para>will be returned array in harmonics l and radial order n for the derivative of the potential </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>tid</parametername>
</parameternamelist>
<parameterdescription>
<para>is the thread enumerator that allows the function to provide some thread safety </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/SphericalBasis.H" line="400" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_spherical_basis_1a63cdde991a10a6309a97e3af6b5833b3" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void SphericalBasis::get_potl</definition>
        <argsstring>(int lmax, int nmax, double r, Eigen::MatrixXd &amp;p, int tid)=0</argsstring>
        <name>get_potl</name>
        <qualifiedname>SphericalBasis::get_potl</qualifiedname>
        <reimplementedby refid="class_bessel_1a50c293c90a3bca22c6146e0239edb15b">get_potl</reimplementedby>
        <reimplementedby refid="class_sphere_1a652173e111f6605982c6adbc65f32293">get_potl</reimplementedby>
        <param>
          <type>int</type>
          <declname>lmax</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nmax</declname>
        </param>
        <param>
          <type>double</type>
          <declname>r</declname>
        </param>
        <param>
          <type>Eigen::MatrixXd &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>int</type>
          <declname>tid</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get derivative of potential <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>lmax</parametername>
</parameternamelist>
<parameterdescription>
<para>is the maximum harmonic order </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nmax</parametername>
</parameternamelist>
<parameterdescription>
<para>is the maximum radial order </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>r</parametername>
</parameternamelist>
<parameterdescription>
<para>is the evaluation radius </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p</parametername>
</parameternamelist>
<parameterdescription>
<para>will be returned array in harmonics l and radial order n for the potential </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>tid</parametername>
</parameternamelist>
<parameterdescription>
<para>is the thread enumerator that allows the function to provide some thread safety </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/SphericalBasis.H" line="413" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_spherical_basis_1a2823c30f130d1a33768cce788b05c34e" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void SphericalBasis::get_potl_dens</definition>
        <argsstring>(int lmax, int nmax, double r, Eigen::MatrixXd &amp;p, Eigen::MatrixXd &amp;d, int tid)=0</argsstring>
        <name>get_potl_dens</name>
        <qualifiedname>SphericalBasis::get_potl_dens</qualifiedname>
        <reimplementedby refid="class_bessel_1a478e81687b976d233bc5d81b572bafb5">get_potl_dens</reimplementedby>
        <reimplementedby refid="class_sphere_1a2c795a70918899c354bb33176957103f">get_potl_dens</reimplementedby>
        <param>
          <type>int</type>
          <declname>lmax</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nmax</declname>
        </param>
        <param>
          <type>double</type>
          <declname>r</declname>
        </param>
        <param>
          <type>Eigen::MatrixXd &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>Eigen::MatrixXd &amp;</type>
          <declname>d</declname>
        </param>
        <param>
          <type>int</type>
          <declname>tid</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get derivative of potential <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>lmax</parametername>
</parameternamelist>
<parameterdescription>
<para>is the maximum harmonic order </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nmax</parametername>
</parameternamelist>
<parameterdescription>
<para>is the maximum radial order </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>r</parametername>
</parameternamelist>
<parameterdescription>
<para>is the evaluation radius </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p</parametername>
</parameternamelist>
<parameterdescription>
<para>will be returned array in harmonics l and radial order n for the potential </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>d</parametername>
</parameternamelist>
<parameterdescription>
<para>will be returned array in harmonics l and radial order n for the density </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>tid</parametername>
</parameternamelist>
<parameterdescription>
<para>is the thread enumerator that allows the function to provide some thread safety </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/SphericalBasis.H" line="441" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_spherical_basis_1a601c0bfd766bc3de1f4983430b110663" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>double</type>
        <definition>virtual double SphericalBasis::knl</definition>
        <argsstring>(int, int)</argsstring>
        <name>knl</name>
        <qualifiedname>SphericalBasis::knl</qualifiedname>
        <param>
          <type>int</type>
        </param>
        <param>
          <type>int</type>
        </param>
        <briefdescription>
<para>Kernel value for recursion relation basis. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/SphericalBasis.H" line="469" column="18" bodyfile="/home/weinberg/Projects/EXP/src/SphericalBasis.H" bodystart="469" bodyend="469"/>
      </memberdef>
      <memberdef kind="function" id="class_spherical_basis_1af0aaa7a1ef27c5ccb866190e5cefd90a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void SphericalBasis::multistep_add_debug</definition>
        <argsstring>(const std::vector&lt; std::vector&lt; std::pair&lt; unsigned, unsigned &gt; &gt; &gt; &amp;data)</argsstring>
        <name>multistep_add_debug</name>
        <qualifiedname>SphericalBasis::multistep_add_debug</qualifiedname>
        <param>
          <type>const std::vector&lt; std::vector&lt; std::pair&lt; unsigned, unsigned &gt; &gt; &gt; &amp;</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/SphericalBasis.H" line="378" column="16" bodyfile="/home/weinberg/Projects/EXP/src/SphericalBasis.H" bodystart="379" bodyend="385"/>
        <references refid="class_spherical_basis_1a2c45c3e7a097ab190a77f882dac5c2c2" compoundref="_spherical_basis_8_h" startline="211">occt</references>
      </memberdef>
      <memberdef kind="function" id="class_spherical_basis_1aef978544ce5d90a116759fd3a87a8634" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void SphericalBasis::multistep_reset</definition>
        <argsstring>()</argsstring>
        <name>multistep_reset</name>
        <qualifiedname>SphericalBasis::multistep_reset</qualifiedname>
        <reimplements refid="class_axisymmetric_basis_1a93d8a3c0e104139477fec734a6baf8e6">multistep_reset</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Update the multi time step coefficient table when moving particle <computeroutput>i</computeroutput> from level <computeroutput>cur</computeroutput> to level <computeroutput>next</computeroutput> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/SphericalBasis.H" line="374" column="16"/>
      </memberdef>
      <memberdef kind="function" id="class_spherical_basis_1a92c55df02156ac2f3633bfa950eb795b" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void SphericalBasis::multistep_update</definition>
        <argsstring>(int cur, int next, Component *c, int i, int id)</argsstring>
        <name>multistep_update</name>
        <qualifiedname>SphericalBasis::multistep_update</qualifiedname>
        <reimplements refid="class_pot_accel_1aa6c3661783144fd643ebaf1a2fa6278a">multistep_update</reimplements>
        <param>
          <type>int</type>
          <declname>cur</declname>
        </param>
        <param>
          <type>int</type>
          <declname>next</declname>
        </param>
        <param>
          <type><ref refid="class_component" kindref="compound">Component</ref> *</type>
          <declname>c</declname>
        </param>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <param>
          <type>int</type>
          <declname>id</declname>
        </param>
        <briefdescription>
<para>Implementation of level shifts. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/SphericalBasis.H" line="376" column="16"/>
      </memberdef>
      <memberdef kind="function" id="class_spherical_basis_1af2393d23ec465c58280cc952a92c6fa8" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void SphericalBasis::multistep_update_begin</definition>
        <argsstring>()</argsstring>
        <name>multistep_update_begin</name>
        <qualifiedname>SphericalBasis::multistep_update_begin</qualifiedname>
        <reimplements refid="class_pot_accel_1a0e720b605350a9fb4e0d24dae2a1c381">multistep_update_begin</reimplements>
        <briefdescription>
<para>Execute to begin level shifts for particles. </para>
        </briefdescription>
        <detaileddescription>
<para>Update the multi time step force algorithm when moving particle <computeroutput>i</computeroutput> from level <computeroutput>cur</computeroutput> to level <computeroutput>next</computeroutput> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/SphericalBasis.H" line="375" column="16"/>
      </memberdef>
      <memberdef kind="function" id="class_spherical_basis_1a50f766814b5eb9fd2d3922da477c16e5" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void SphericalBasis::multistep_update_finish</definition>
        <argsstring>()</argsstring>
        <name>multistep_update_finish</name>
        <qualifiedname>SphericalBasis::multistep_update_finish</qualifiedname>
        <reimplements refid="class_pot_accel_1acb0c9d88466949f2bf84da42439f2a1e">multistep_update_finish</reimplements>
        <briefdescription>
<para>Execute to finish level shifts for particles. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/SphericalBasis.H" line="377" column="16"/>
      </memberdef>
      <memberdef kind="function" id="class_spherical_basis_1ad436a9e7fe4b8dca580322b59dd1b9fe" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>double</type>
        <definition>virtual double SphericalBasis::norm</definition>
        <argsstring>(int, int)</argsstring>
        <name>norm</name>
        <qualifiedname>SphericalBasis::norm</qualifiedname>
        <param>
          <type>int</type>
        </param>
        <param>
          <type>int</type>
        </param>
        <briefdescription>
<para>Normalization for recursion relation basis. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/SphericalBasis.H" line="466" column="18" bodyfile="/home/weinberg/Projects/EXP/src/SphericalBasis.H" bodystart="466" bodyend="466"/>
      </memberdef>
      <memberdef kind="function" id="class_spherical_basis_1a597c70fc53eab8ec04f7ab86c04fec42" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>SphericalBasis::SphericalBasis</definition>
        <argsstring>(Component *c0, const YAML::Node &amp;conf, MixtureBasis *m=0)</argsstring>
        <name>SphericalBasis</name>
        <qualifiedname>SphericalBasis::SphericalBasis</qualifiedname>
        <param>
          <type><ref refid="class_component" kindref="compound">Component</ref> *</type>
          <declname>c0</declname>
        </param>
        <param>
          <type>const YAML::Node &amp;</type>
          <declname>conf</declname>
        </param>
        <param>
          <type><ref refid="class_mixture_basis" kindref="compound">MixtureBasis</ref> *</type>
          <declname>m</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Constructor (<computeroutput>line</computeroutput> contains the paramter list) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/SphericalBasis.H" line="345" column="3"/>
      </memberdef>
      <memberdef kind="function" id="class_spherical_basis_1a37942ed713092a019dbc750b2c44c2d7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>SphericalBasis::SphericalBasis</definition>
        <argsstring>(const SphericalBasis &amp;p)</argsstring>
        <name>SphericalBasis</name>
        <qualifiedname>SphericalBasis::SphericalBasis</qualifiedname>
        <param>
          <type>const <ref refid="class_spherical_basis" kindref="compound">SphericalBasis</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
<para>Copy constructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/SphericalBasis.H" line="348" column="3"/>
      </memberdef>
      <memberdef kind="function" id="class_spherical_basis_1aa752534f77e17674a6a99da2549af843" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual SphericalBasis::~SphericalBasis</definition>
        <argsstring>()</argsstring>
        <name>~SphericalBasis</name>
        <qualifiedname>SphericalBasis::~SphericalBasis</qualifiedname>
        <briefdescription>
<para>Destructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/SphericalBasis.H" line="351" column="11"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Defines a spherical basis with members specific to spherical symmetry. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>AxisymmetricBasis</label>
        <link refid="class_axisymmetric_basis"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>Basis</label>
        <link refid="class_basis"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>Bessel</label>
        <link refid="class_bessel"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>PotAccel</label>
        <link refid="class_pot_accel"/>
      </node>
      <node id="6">
        <label>Sphere</label>
        <link refid="class_sphere"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>SphericalBasis</label>
        <link refid="class_spherical_basis"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>AxisymmetricBasis</label>
        <link refid="class_axisymmetric_basis"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>Basis</label>
        <link refid="class_basis"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>Component</label>
        <link refid="class_component"/>
        <childnode refid="6" relation="usage">
          <edgelabel>c0</edgelabel>
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>force</edgelabel>
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>orient</edgelabel>
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>time_so_far</edgelabel>
        </childnode>
      </node>
      <node id="8">
        <label>EL3</label>
        <link refid="class_e_l3"/>
      </node>
      <node id="10">
        <label>MixtureBasis</label>
        <link refid="class_mixture_basis"/>
        <childnode refid="11" relation="usage">
          <edgelabel>p</edgelabel>
        </childnode>
      </node>
      <node id="7">
        <label>Orient</label>
        <link refid="class_orient"/>
        <childnode refid="8" relation="usage">
          <edgelabel>t</edgelabel>
        </childnode>
      </node>
      <node id="4">
        <label>PotAccel</label>
        <link refid="class_pot_accel"/>
        <childnode refid="5" relation="usage">
          <edgelabel>td</edgelabel>
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>cC</edgelabel>
          <edgelabel>component</edgelabel>
        </childnode>
      </node>
      <node id="1">
        <label>SphericalBasis</label>
        <link refid="class_spherical_basis"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="10" relation="usage">
          <edgelabel>mix</edgelabel>
        </childnode>
      </node>
      <node id="9">
        <label>Timer</label>
        <link refid="class_timer"/>
      </node>
      <node id="11">
        <label>TwoCenter</label>
        <link refid="class_two_center"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>exp_in</edgelabel>
          <edgelabel>exp_out</edgelabel>
        </childnode>
        <childnode refid="10" relation="usage">
          <edgelabel>mix_in</edgelabel>
          <edgelabel>mix_out</edgelabel>
        </childnode>
      </node>
      <node id="5">
        <label>thrd_pass_PotAccel</label>
        <link refid="structthrd__pass___pot_accel"/>
        <childnode refid="4" relation="usage">
          <edgelabel>t</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/weinberg/Projects/EXP/src/SphericalBasis.H" line="29" column="1" bodyfile="/home/weinberg/Projects/EXP/src/SphericalBasis.H" bodystart="30" bodyend="476"/>
    <listofallmembers>
      <member refid="class_pot_accel_1a6a637997f73ca85ce78d8c92eec7ad1b" prot="public" virt="non-virtual"><scope>SphericalBasis</scope><name>atol</name></member>
      <member refid="class_axisymmetric_basis_1ab965e325410d79d567903f51dd2c6dd0" prot="public" virt="non-virtual"><scope>SphericalBasis</scope><name>AxisymmetricBasis</name></member>
      <member refid="class_axisymmetric_basis_1aa4fc18ccf44bdf56ac60b7caa68b1cfc" prot="private" virt="non-virtual"><scope>SphericalBasis</scope><name>b_Hall</name></member>
      <member refid="class_basis_1a3deeb360a898d1c144f7f6ad44813b3e" prot="public" virt="non-virtual"><scope>SphericalBasis</scope><name>Basis</name></member>
      <member refid="class_spherical_basis_1a1066050b6ba526768710115eced4144f" prot="protected" virt="non-virtual"><scope>SphericalBasis</scope><name>biorthogonality_check</name></member>
      <member refid="class_pot_accel_1afa2cd3b0bf51e23d8bfc54aac73ef010" prot="protected" virt="non-virtual"><scope>SphericalBasis</scope><name>cC</name></member>
      <member refid="class_pot_accel_1a630b9cdcae4ed4915cc72179fe9821c6" prot="public" virt="non-virtual"><scope>SphericalBasis</scope><name>cc_lock</name></member>
      <member refid="class_spherical_basis_1a1fb812ef3e4559b795aa1407ceaa6079" prot="protected" virt="virtual"><scope>SphericalBasis</scope><name>check_range</name></member>
      <member refid="class_pot_accel_1a944213bbf31fca1508ba817e392b9fc6" prot="public" virt="non-virtual"><scope>SphericalBasis</scope><name>ClearExternal</name></member>
      <member refid="class_spherical_basis_1aac8c95f365acb42630d38d2b8a2c79f4" prot="protected" virt="non-virtual"><scope>SphericalBasis</scope><name>cmagic</name></member>
      <member refid="class_pot_accel_1ac7ab5e578b5b2bbd29fe35738b03d771" prot="protected" virt="non-virtual"><scope>SphericalBasis</scope><name>coef_dump</name></member>
      <member refid="class_spherical_basis_1a27cb5e14065b26a1eaf8fecde6210db9" prot="protected" virt="non-virtual"><scope>SphericalBasis</scope><name>coefMaster</name></member>
      <member refid="class_pot_accel_1aa6d9bde455e08dc9fead4f152357cb15" prot="protected" virt="non-virtual"><scope>SphericalBasis</scope><name>component</name></member>
      <member refid="class_pot_accel_1a49e2936503ffdad1dd86d3f0c934d25a" prot="public" virt="non-virtual"><scope>SphericalBasis</scope><name>compute</name></member>
      <member refid="class_spherical_basis_1ac6b350512a9ae518f4c8cbecb4a46593" prot="protected" virt="non-virtual"><scope>SphericalBasis</scope><name>compute_multistep_coefficients</name></member>
      <member refid="class_spherical_basis_1ac6d657e39329e543766a4503f25d3a37" prot="protected" virt="non-virtual"><scope>SphericalBasis</scope><name>compute_rms_coefs</name></member>
      <member refid="class_pot_accel_1ab682d4480d7d2946a7bef7f93ac0c6a0" prot="protected" virt="non-virtual"><scope>SphericalBasis</scope><name>conf</name></member>
      <member refid="class_spherical_basis_1a843a19b3a3dc282c24cd1a6e19aab3ca" prot="protected" virt="non-virtual"><scope>SphericalBasis</scope><name>cosm</name></member>
      <member refid="class_axisymmetric_basis_1a7bd4492f833f728f99891d38b7493631" prot="private" virt="non-virtual"><scope>SphericalBasis</scope><name>covar</name></member>
      <member refid="class_pot_accel_1ad55d9279ca0e8318bfe1a95d1c7566fda489785884cf0770efb348b919878bf23" prot="public" virt="non-virtual"><scope>SphericalBasis</scope><name>cube</name></member>
      <member refid="class_pot_accel_1ac4def6f1c9318d8b49e62a4c9f2d6786" prot="protected" virt="non-virtual"><scope>SphericalBasis</scope><name>cuda_aware</name></member>
      <member refid="class_pot_accel_1a5029810ccad93845aab9919e005bafe0" prot="public" virt="non-virtual"><scope>SphericalBasis</scope><name>cudaAware</name></member>
      <member refid="class_axisymmetric_basis_1a739cec07895fdd02850006d6a52639a8" prot="private" virt="non-virtual"><scope>SphericalBasis</scope><name>cuml</name></member>
      <member refid="class_axisymmetric_basis_1a5665efe4d9ba08fd8e173a7aa6cf77b6a1dbf0ed28469f49a393a25a7b67753c3" prot="public" virt="non-virtual"><scope>SphericalBasis</scope><name>CumulativeCut</name></member>
      <member refid="class_pot_accel_1a823dbb4c07cab1541d7ee738c6baef99" prot="protected" virt="non-virtual"><scope>SphericalBasis</scope><name>current_keys</name></member>
      <member refid="class_pot_accel_1ad55d9279ca0e8318bfe1a95d1c7566fdac215da2d633c31e7278fb1a3dd6af268" prot="public" virt="non-virtual"><scope>SphericalBasis</scope><name>cylinder</name></member>
      <member refid="class_spherical_basis_1a8371f1f235cbd49dbf0bd89541d8fdaf" prot="protected" virt="virtual"><scope>SphericalBasis</scope><name>d_r_to_xi</name></member>
      <member refid="class_axisymmetric_basis_1ad3b6c5272fa2aae68be0177ebb3f2edd" prot="protected" virt="non-virtual"><scope>SphericalBasis</scope><name>defSampT</name></member>
      <member refid="class_spherical_basis_1a3cfea1dc5ab6ba11187c8ce618f4bd22" prot="protected" virt="non-virtual"><scope>SphericalBasis</scope><name>dend</name></member>
      <member refid="class_spherical_basis_1a73773546d4e45c0ac442a9853ef42225" prot="public" virt="virtual"><scope>SphericalBasis</scope><name>determine_acceleration_and_potential</name></member>
      <member refid="class_spherical_basis_1a45f237bae8eb688588b95f8a0522b10d" prot="protected" virt="virtual"><scope>SphericalBasis</scope><name>determine_acceleration_and_potential_thread</name></member>
      <member refid="class_spherical_basis_1a91e8b02d7a7482ba2dd12cbae311533c" prot="public" virt="virtual"><scope>SphericalBasis</scope><name>determine_coefficients</name></member>
      <member refid="class_spherical_basis_1a8ff7907cd7af5f79b63f11282c277cb2" prot="public" virt="virtual"><scope>SphericalBasis</scope><name>determine_coefficients</name></member>
      <member refid="class_spherical_basis_1af9309f6e0f2eb72d4e3c046a15634a70" prot="protected" virt="virtual"><scope>SphericalBasis</scope><name>determine_coefficients_particles</name></member>
      <member refid="class_spherical_basis_1a100361ca78665ea58fb37f141f98bf07" prot="protected" virt="virtual"><scope>SphericalBasis</scope><name>determine_coefficients_playback</name></member>
      <member refid="class_spherical_basis_1a7ad9fad36d8b7074c7b47d0126ca26ef" prot="protected" virt="virtual"><scope>SphericalBasis</scope><name>determine_coefficients_thread</name></member>
      <member refid="class_spherical_basis_1a84fc725d4e62f743a3846b8b5908a42e" prot="public" virt="virtual"><scope>SphericalBasis</scope><name>determine_fields_at_point</name></member>
      <member refid="class_spherical_basis_1ab11fe59ba8d3a8e251ea96e72d93b654" prot="public" virt="virtual"><scope>SphericalBasis</scope><name>determine_fields_at_point_cyl</name></member>
      <member refid="class_spherical_basis_1ab139a46a2cc6813b375b041dbe3b6498" prot="public" virt="virtual"><scope>SphericalBasis</scope><name>determine_fields_at_point_sph</name></member>
      <member refid="class_spherical_basis_1acf7e4a3d55ca7d250a2b814bd95321ba" prot="protected" virt="non-virtual"><scope>SphericalBasis</scope><name>differ1</name></member>
      <member refid="class_basis_1ad9a9f2f2d18335ae482b1d4e12490d0b" prot="public" virt="non-virtual"><scope>SphericalBasis</scope><name>dlegendre_R</name></member>
      <member refid="class_spherical_basis_1aff89452a2ddcef22eb9333b5c04df0ef" prot="protected" virt="non-virtual"><scope>SphericalBasis</scope><name>dlegs</name></member>
      <member refid="class_pot_accel_1a6a9ec23d29b553c1625bd8e88fe7692d" prot="public" virt="non-virtual"><scope>SphericalBasis</scope><name>dof</name></member>
      <member refid="class_spherical_basis_1aa1ad955dd550cd637a32cc11cccc3100" prot="protected" virt="non-virtual"><scope>SphericalBasis</scope><name>dpot</name></member>
      <member refid="class_spherical_basis_1a91d743a30554403f62492950613bea5b" prot="protected" virt="non-virtual"><scope>SphericalBasis</scope><name>du</name></member>
      <member refid="class_spherical_basis_1a518203f6db28e171c7dccd04611994b5" prot="public" virt="virtual"><scope>SphericalBasis</scope><name>dump_coefs</name></member>
      <member refid="class_spherical_basis_1a34866d25c28ce00edf20be346f43361f" prot="protected" virt="non-virtual"><scope>SphericalBasis</scope><name>dump_coefs_all</name></member>
      <member refid="class_spherical_basis_1aababccfd0ab296c683963963caead0be" prot="public" virt="virtual"><scope>SphericalBasis</scope><name>dump_coefs_h5</name></member>
      <member refid="class_axisymmetric_basis_1a45362e008f1389402494647b75931e1e" prot="private" virt="non-virtual"><scope>SphericalBasis</scope><name>eval</name></member>
      <member refid="class_axisymmetric_basis_1ae30dc4a6d54a9b90dbe31e2b03821382" prot="private" virt="non-virtual"><scope>SphericalBasis</scope><name>evec</name></member>
      <member refid="class_spherical_basis_1a68de61b1e9ba7549723513791436e087" prot="protected" virt="non-virtual"><scope>SphericalBasis</scope><name>EVEN_L</name></member>
      <member refid="class_spherical_basis_1acb6cedabe692304779492aaea2efb698" prot="protected" virt="non-virtual"><scope>SphericalBasis</scope><name>EVEN_M</name></member>
      <member refid="class_pot_accel_1abee9651463af53460b622250d311329e" prot="public" virt="non-virtual"><scope>SphericalBasis</scope><name>exp_thread_fork</name></member>
      <member refid="class_axisymmetric_basis_1afae69589bd4f7341ab42b8c48c22b707" prot="protected" virt="non-virtual"><scope>SphericalBasis</scope><name>expcoef</name></member>
      <member refid="class_spherical_basis_1a678f0fd3cf6338763c2acd325a3e3b18" prot="protected" virt="non-virtual"><scope>SphericalBasis</scope><name>expcoef0</name></member>
      <member refid="class_axisymmetric_basis_1ad68406307042d772a285f40728a70cf6" prot="protected" virt="non-virtual"><scope>SphericalBasis</scope><name>expcoef1</name></member>
      <member refid="class_axisymmetric_basis_1ad60eac81d3f5d960af091345128485a8" prot="protected" virt="non-virtual"><scope>SphericalBasis</scope><name>expcoefL</name></member>
      <member refid="class_axisymmetric_basis_1acc9740eafab3aa6d3b935bb310c568bd" prot="protected" virt="non-virtual"><scope>SphericalBasis</scope><name>expcoefM</name></member>
      <member refid="class_axisymmetric_basis_1a11d3819929833b80de31120b99912e96" prot="protected" virt="non-virtual"><scope>SphericalBasis</scope><name>expcoefM1</name></member>
      <member refid="class_axisymmetric_basis_1abe415ce8067b52c57aeb4beccbd85d7f" prot="protected" virt="non-virtual"><scope>SphericalBasis</scope><name>expcoefN</name></member>
      <member refid="class_axisymmetric_basis_1ad344d65e16dfdea9aed2e478185bc8e7" prot="protected" virt="non-virtual"><scope>SphericalBasis</scope><name>expcoefP</name></member>
      <member refid="class_axisymmetric_basis_1acd8494e7bb875fc2c8677ca92a0c6f01" prot="protected" virt="non-virtual"><scope>SphericalBasis</scope><name>expcoefT</name></member>
      <member refid="class_axisymmetric_basis_1a699990cc53ec82eb867cf9c85cb57f70" prot="protected" virt="non-virtual"><scope>SphericalBasis</scope><name>expcoefT1</name></member>
      <member refid="class_axisymmetric_basis_1ae6dd8f205982c2e3ef87f6f467976018" prot="private" virt="non-virtual"><scope>SphericalBasis</scope><name>fac02</name></member>
      <member refid="class_spherical_basis_1a39e31915305ef9daa6b39d3c5cbd9dad" prot="protected" virt="non-virtual"><scope>SphericalBasis</scope><name>factorial</name></member>
      <member refid="class_spherical_basis_1a31522511eefb3602a9201dd0d3fd3bb8" prot="protected" virt="non-virtual"><scope>SphericalBasis</scope><name>firstime_accel</name></member>
      <member refid="class_spherical_basis_1aef3567656d31d9a8d694f015e0ff87fe" prot="protected" virt="non-virtual"><scope>SphericalBasis</scope><name>firstime_coef</name></member>
      <member refid="class_pot_accel_1ad55d9279ca0e8318bfe1a95d1c7566fd" prot="public" virt="non-virtual"><scope>SphericalBasis</scope><name>Geometry</name></member>
      <member refid="class_pot_accel_1adb6ef0bdae7d3520ca1f9fd8a6d648ea" prot="public" virt="non-virtual"><scope>SphericalBasis</scope><name>geometry</name></member>
      <member refid="class_pot_accel_1ade38f6ecdf80f80cde847d463b14909b" prot="public" virt="non-virtual"><scope>SphericalBasis</scope><name>geoname</name></member>
      <member refid="class_spherical_basis_1a05f775f3bae56543829492fae9a0b75f" prot="public" virt="virtual"><scope>SphericalBasis</scope><name>get_acceleration_and_potential</name></member>
      <member refid="class_spherical_basis_1a0e2377c1cdc1335562343e01e4dee7cd" prot="public" virt="pure-virtual"><scope>SphericalBasis</scope><name>get_dens</name></member>
      <member refid="class_spherical_basis_1ababeb377d9cc8f3150b3dac614fed0bb" prot="protected" virt="non-virtual"><scope>SphericalBasis</scope><name>get_dens_coefs</name></member>
      <member refid="class_spherical_basis_1ac3eafe5175c669b7b7b86932c764af32" prot="public" virt="pure-virtual"><scope>SphericalBasis</scope><name>get_dpotl</name></member>
      <member refid="class_spherical_basis_1ab38a879d817874f75e324347afe33cb6" prot="protected" virt="non-virtual"><scope>SphericalBasis</scope><name>get_pot_coefs</name></member>
      <member refid="class_spherical_basis_1a590da9389de7deca03880fc5b1c6e3a4" prot="protected" virt="non-virtual"><scope>SphericalBasis</scope><name>get_pot_coefs_safe</name></member>
      <member refid="class_spherical_basis_1a63cdde991a10a6309a97e3af6b5833b3" prot="public" virt="pure-virtual"><scope>SphericalBasis</scope><name>get_potl</name></member>
      <member refid="class_spherical_basis_1a2823c30f130d1a33768cce788b05c34e" prot="public" virt="pure-virtual"><scope>SphericalBasis</scope><name>get_potl_dens</name></member>
      <member refid="class_axisymmetric_basis_1a81196ff99fb4254c4e37866ca3d2c7de" prot="public" virt="non-virtual"><scope>SphericalBasis</scope><name>getCoefs</name></member>
      <member refid="class_axisymmetric_basis_1a392660898c9be95471072adb3f0faa25" prot="public" virt="non-virtual"><scope>SphericalBasis</scope><name>getLmax</name></member>
      <member refid="class_axisymmetric_basis_1ab09be7b0782949e27379ea930eb10171" prot="public" virt="non-virtual"><scope>SphericalBasis</scope><name>getMmax</name></member>
      <member refid="class_axisymmetric_basis_1a3026462dfa88e923d7673f3d56dc4de4" prot="public" virt="non-virtual"><scope>SphericalBasis</scope><name>getNmax</name></member>
      <member refid="class_pot_accel_1a0998c361bca277b3bba95f59acaba203" prot="public" virt="virtual"><scope>SphericalBasis</scope><name>getScale</name></member>
      <member refid="class_axisymmetric_basis_1a5665efe4d9ba08fd8e173a7aa6cf77b6a355c2a93725cd932da5408330dec2a6b" prot="public" virt="non-virtual"><scope>SphericalBasis</scope><name>Hall</name></member>
      <member refid="class_pot_accel_1a4a812594dff363f07bf57d69a60e4a13" prot="public" virt="non-virtual"><scope>SphericalBasis</scope><name>HaveCoefDump</name></member>
      <member refid="class_axisymmetric_basis_1af0b7e5ba06a1acf652e61b9b4ecadfec" prot="protected" virt="non-virtual"><scope>SphericalBasis</scope><name>hexp</name></member>
      <member refid="class_pot_accel_1a1cdb2381070d7772caf533433455284c" prot="public" virt="non-virtual"><scope>SphericalBasis</scope><name>id</name></member>
      <member refid="class_spherical_basis_1a33f78daf1c5dcf5ac4d327662963b1a5" prot="protected" virt="virtual"><scope>SphericalBasis</scope><name>initialize</name></member>
      <member refid="class_axisymmetric_basis_1abe6cac911f0415ee15378c104bd3fd16" prot="private" virt="non-virtual"><scope>SphericalBasis</scope><name>inv</name></member>
      <member refid="class_pot_accel_1a706b04f03c8beb4369dd125406770116" prot="public" virt="non-virtual"><scope>SphericalBasis</scope><name>kill_mutex</name></member>
      <member refid="class_spherical_basis_1a601c0bfd766bc3de1f4983430b110663" prot="public" virt="virtual"><scope>SphericalBasis</scope><name>knl</name></member>
      <member refid="class_spherical_basis_1a79dc94b3d9151be5c82758e785f27102" prot="protected" virt="non-virtual"><scope>SphericalBasis</scope><name>krnl</name></member>
      <member refid="class_axisymmetric_basis_1a77c3332bf7286f04c94af7d068c7b2c4" prot="private" virt="non-virtual"><scope>SphericalBasis</scope><name>L0</name></member>
      <member refid="class_spherical_basis_1aa594052066fda40758b8e4757fbab0aa" prot="protected" virt="non-virtual"><scope>SphericalBasis</scope><name>lastPlayTime</name></member>
      <member refid="class_axisymmetric_basis_1a570f3d24187073d3354933ace93a6bd6" prot="private" virt="non-virtual"><scope>SphericalBasis</scope><name>Ldim</name></member>
      <member refid="class_basis_1a80975218d67cc019d69fefb7a207d344" prot="public" virt="non-virtual"><scope>SphericalBasis</scope><name>legendre_R</name></member>
      <member refid="class_spherical_basis_1a172c954d497270d8bb6561367b990b5d" prot="protected" virt="non-virtual"><scope>SphericalBasis</scope><name>legs</name></member>
      <member refid="class_axisymmetric_basis_1abed8db010c45ad27e769043c68ab3101" prot="protected" virt="non-virtual"><scope>SphericalBasis</scope><name>Lmax</name></member>
      <member refid="class_spherical_basis_1a463dfd0a4b7a6f16a7a814e887dce037" prot="protected" virt="non-virtual"><scope>SphericalBasis</scope><name>M0_only</name></member>
      <member refid="class_pot_accel_1a65fa890eea987e18d552825ab074939b" prot="public" virt="non-virtual"><scope>SphericalBasis</scope><name>make_mutex</name></member>
      <member refid="class_axisymmetric_basis_1a0c051b9729ad5af02ed9ca626b56d999" prot="protected" virt="non-virtual"><scope>SphericalBasis</scope><name>massT</name></member>
      <member refid="class_axisymmetric_basis_1a695b88eea00afd8f04b80c7f08be1b82" prot="protected" virt="non-virtual"><scope>SphericalBasis</scope><name>massT1</name></member>
      <member refid="class_axisymmetric_basis_1a4f7fd256528b06fa3124aa070e558c9a" prot="protected" virt="non-virtual"><scope>SphericalBasis</scope><name>MatrixP</name></member>
      <member refid="class_spherical_basis_1ae90709b119fc3f5df1c76abb8145bee8" prot="protected" virt="non-virtual"><scope>SphericalBasis</scope><name>meanC</name></member>
      <member refid="class_spherical_basis_1af0c80585c72228373e886563448ba6e2" prot="protected" virt="non-virtual"><scope>SphericalBasis</scope><name>mix</name></member>
      <member refid="class_pot_accel_1ad9ff6c9f431ad2f8ad2e5895c222ede8" prot="protected" virt="non-virtual"><scope>SphericalBasis</scope><name>mlevel</name></member>
      <member refid="class_axisymmetric_basis_1a2307130cf92a81e6cfb6f69fb2279585" prot="protected" virt="non-virtual"><scope>SphericalBasis</scope><name>Mmax</name></member>
      <member refid="class_spherical_basis_1af0aaa7a1ef27c5ccb866190e5cefd90a" prot="public" virt="virtual"><scope>SphericalBasis</scope><name>multistep_add_debug</name></member>
      <member refid="class_pot_accel_1a2ba58ca0219d337b13c87697353d4121" prot="public" virt="virtual"><scope>SphericalBasis</scope><name>multistep_debug</name></member>
      <member refid="class_spherical_basis_1aef978544ce5d90a116759fd3a87a8634" prot="public" virt="virtual"><scope>SphericalBasis</scope><name>multistep_reset</name></member>
      <member refid="class_spherical_basis_1a92c55df02156ac2f3633bfa950eb795b" prot="public" virt="virtual"><scope>SphericalBasis</scope><name>multistep_update</name></member>
      <member refid="class_spherical_basis_1af2393d23ec465c58280cc952a92c6fa8" prot="public" virt="virtual"><scope>SphericalBasis</scope><name>multistep_update_begin</name></member>
      <member refid="class_spherical_basis_1a50f766814b5eb9fd2d3922da477c16e5" prot="public" virt="virtual"><scope>SphericalBasis</scope><name>multistep_update_finish</name></member>
      <member refid="class_axisymmetric_basis_1a066a011ea1511b649a093b17a01bee1e" prot="protected" virt="non-virtual"><scope>SphericalBasis</scope><name>muse</name></member>
      <member refid="class_spherical_basis_1a5d72272244c58109d29a4d3e03f51ce9" prot="protected" virt="non-virtual"><scope>SphericalBasis</scope><name>muse0</name></member>
      <member refid="class_spherical_basis_1aee6466e0b29f8c1f9c4df8baa0e607d6" prot="protected" virt="non-virtual"><scope>SphericalBasis</scope><name>muse1</name></member>
      <member refid="class_pot_accel_1a73976f361ed7abf13001835bfcdee639" prot="protected" virt="non-virtual"><scope>SphericalBasis</scope><name>nbodies</name></member>
      <member refid="class_spherical_basis_1a3a81bde48ab3654d1dbe004efcd06782" prot="public" virt="non-virtual"><scope>SphericalBasis</scope><name>NewCoefs</name></member>
      <member refid="class_axisymmetric_basis_1acee029d0e3afc656f5fb5d8f063a97d9" prot="protected" virt="non-virtual"><scope>SphericalBasis</scope><name>nmax</name></member>
      <member refid="class_spherical_basis_1a67a78c946ad3a87bafd4be8ea267f266" prot="protected" virt="non-virtual"><scope>SphericalBasis</scope><name>NO_L0</name></member>
      <member refid="class_spherical_basis_1ae51f8f0ffc23b5826245038719998eb6" prot="protected" virt="non-virtual"><scope>SphericalBasis</scope><name>NO_L1</name></member>
      <member refid="class_pot_accel_1a4f2099b1b705731b909e63c90ea59f04" prot="public" virt="non-virtual"><scope>SphericalBasis</scope><name>NoCoefs</name></member>
      <member refid="class_spherical_basis_1a27229561fbae3c1f7bf416933767a494" prot="protected" virt="non-virtual"><scope>SphericalBasis</scope><name>NOISE</name></member>
      <member refid="class_spherical_basis_1a3cbbfe1042e83cf11ab096ec01b5a518" prot="protected" virt="non-virtual"><scope>SphericalBasis</scope><name>noise_model_file</name></member>
      <member refid="class_spherical_basis_1af4a0835e95c0e0f5406977a92c11ed6f" prot="protected" virt="non-virtual"><scope>SphericalBasis</scope><name>noiseN</name></member>
      <member refid="class_axisymmetric_basis_1a5665efe4d9ba08fd8e173a7aa6cf77b6a85300903a059bd6e3a193bd92112a16f" prot="public" virt="non-virtual"><scope>SphericalBasis</scope><name>None</name></member>
      <member refid="class_spherical_basis_1ad436a9e7fe4b8dca580322b59dd1b9fe" prot="public" virt="virtual"><scope>SphericalBasis</scope><name>norm</name></member>
      <member refid="class_axisymmetric_basis_1a5cffa9ce5ca3b98aeca288e4c5e11c73" prot="protected" virt="non-virtual"><scope>SphericalBasis</scope><name>normM</name></member>
      <member refid="class_axisymmetric_basis_1afa81d9394890b9ebc0a7989651b021d9" prot="protected" virt="non-virtual"><scope>SphericalBasis</scope><name>npca</name></member>
      <member refid="class_axisymmetric_basis_1a68be4e14ebd23388b75d8df12af76667" prot="protected" virt="non-virtual"><scope>SphericalBasis</scope><name>npca0</name></member>
      <member refid="class_spherical_basis_1a64ddd550a0b2994a5800a064883814e6" prot="protected" virt="non-virtual"><scope>SphericalBasis</scope><name>nrand</name></member>
      <member refid="class_spherical_basis_1a2c45c3e7a097ab190a77f882dac5c2c2" prot="protected" virt="non-virtual"><scope>SphericalBasis</scope><name>occt</name></member>
      <member refid="class_spherical_basis_1a7db3a78056025d8c840dd22bae0b2692" prot="protected" virt="non-virtual"><scope>SphericalBasis</scope><name>occt_output</name></member>
      <member refid="class_spherical_basis_1a69a29f7fd957e20aebe7797ba7f266bf" prot="protected" virt="non-virtual"><scope>SphericalBasis</scope><name>ortho_check</name></member>
      <member refid="class_pot_accel_1ad55d9279ca0e8318bfe1a95d1c7566fda7c49f38007dad33fb1e48fdebdd2f8c1" prot="public" virt="non-virtual"><scope>SphericalBasis</scope><name>other</name></member>
      <member refid="class_spherical_basis_1aa78ad9fca6de2d329ffc43522b1f067c" prot="protected" virt="non-virtual"><scope>SphericalBasis</scope><name>pack</name></member>
      <member refid="class_axisymmetric_basis_1a0ba9093da208645ba67931e04a61f4c7" prot="protected" virt="virtual"><scope>SphericalBasis</scope><name>parallel_distribute_coefficients</name></member>
      <member refid="class_axisymmetric_basis_1a1aba7be747336c8e6a67613a3109e285" prot="protected" virt="virtual"><scope>SphericalBasis</scope><name>parallel_gather_coef2</name></member>
      <member refid="class_axisymmetric_basis_1a01ab8064885a073b48ad562790b89f86" prot="protected" virt="virtual"><scope>SphericalBasis</scope><name>parallel_gather_coefficients</name></member>
      <member refid="class_axisymmetric_basis_1a408a19fff1093c88f6a9bcf9ad2601d4" prot="public" virt="non-virtual"><scope>SphericalBasis</scope><name>pca_hall</name></member>
      <member refid="class_axisymmetric_basis_1ae0353b5d1b82b19517ede95a862d7484" prot="public" virt="non-virtual"><scope>SphericalBasis</scope><name>pca_hall_2d</name></member>
      <member refid="class_axisymmetric_basis_1ab971c10417b2e844c9251d6a667103d4" prot="public" virt="non-virtual"><scope>SphericalBasis</scope><name>pca_hall_3d</name></member>
      <member refid="class_axisymmetric_basis_1aea08169a329b6608c42fdeeb1db91183" prot="protected" virt="non-virtual"><scope>SphericalBasis</scope><name>pcadiag</name></member>
      <member refid="class_axisymmetric_basis_1af2a1f4efbdc887b29a6d49b770c1f060" prot="protected" virt="non-virtual"><scope>SphericalBasis</scope><name>pcaeof</name></member>
      <member refid="class_axisymmetric_basis_1a8da7266925e30ee0056cf97e84d4809e" prot="protected" virt="non-virtual"><scope>SphericalBasis</scope><name>pcavar</name></member>
      <member refid="class_axisymmetric_basis_1ad53aa251aa38d7645a4d3eece99dc9d5" prot="protected" virt="non-virtual"><scope>SphericalBasis</scope><name>pcavtk</name></member>
      <member refid="class_pot_accel_1a74b41dd5c2f102dd3184ac53b6172462" prot="protected" virt="non-virtual"><scope>SphericalBasis</scope><name>play_back</name></member>
      <member refid="class_pot_accel_1aea1c756cd9616a1daf73541780b45798" prot="protected" virt="non-virtual"><scope>SphericalBasis</scope><name>play_cnew</name></member>
      <member refid="class_spherical_basis_1a4c8c57602fd3b7eb58c08c35c2964f90" prot="protected" virt="non-virtual"><scope>SphericalBasis</scope><name>playback</name></member>
      <member refid="class_pot_accel_1a801fdbd01e551033e79f274e4a7c1d1e" prot="public" virt="non-virtual"><scope>SphericalBasis</scope><name>PotAccel</name></member>
      <member refid="class_spherical_basis_1a843909b7df76df454ca77ca502e05065" prot="protected" virt="non-virtual"><scope>SphericalBasis</scope><name>potd</name></member>
      <member refid="class_pot_accel_1a5e257d38dbf5c3d9630906a96abf6915" prot="public" virt="non-virtual"><scope>SphericalBasis</scope><name>print_timings</name></member>
      <member refid="class_pot_accel_1a37a3c348c0febbf70ff94949071c3beb" prot="public" virt="non-virtual"><scope>SphericalBasis</scope><name>print_timings</name></member>
      <member refid="class_spherical_basis_1ad1b2e558ad5f084a43d5368e86910763" prot="protected" virt="virtual"><scope>SphericalBasis</scope><name>r_to_xi</name></member>
      <member refid="class_pot_accel_1a8aea0d1740bf7432e1193dda7121a8bb" prot="public" virt="virtual"><scope>SphericalBasis</scope><name>RegisterComponent</name></member>
      <member refid="class_spherical_basis_1ab5d753ab8f0ddfb814fe73a027af323d" prot="protected" virt="non-virtual"><scope>SphericalBasis</scope><name>resetT</name></member>
      <member refid="class_spherical_basis_1a99942ed4bb5830034724f7f32c284cea" prot="protected" virt="non-virtual"><scope>SphericalBasis</scope><name>rgen</name></member>
      <member refid="class_spherical_basis_1a498d5da25a19e0eaf75cb539fcda5227" prot="protected" virt="non-virtual"><scope>SphericalBasis</scope><name>rmax</name></member>
      <member refid="class_spherical_basis_1a1eda652331347885bac46d659ae02b8d" prot="protected" virt="non-virtual"><scope>SphericalBasis</scope><name>rmin</name></member>
      <member refid="class_spherical_basis_1a89d96243aa9a5c5932555116a3ce59e9" prot="protected" virt="non-virtual"><scope>SphericalBasis</scope><name>rmsC</name></member>
      <member refid="class_axisymmetric_basis_1a5116daa842c0f604c2a312db8e0ce97e" prot="private" virt="non-virtual"><scope>SphericalBasis</scope><name>s_Hall</name></member>
      <member refid="class_axisymmetric_basis_1a9e5bccb2a796e19083511f4e637cffda" prot="protected" virt="non-virtual"><scope>SphericalBasis</scope><name>sampT</name></member>
      <member refid="class_pot_accel_1added387424e4e4d23bac8500822e4324" prot="protected" virt="non-virtual"><scope>SphericalBasis</scope><name>scale</name></member>
      <member refid="class_spherical_basis_1a73e589dd6b66a1a015e065d34021f525" prot="protected" virt="non-virtual"><scope>SphericalBasis</scope><name>seedN</name></member>
      <member refid="class_spherical_basis_1a8a21a2f59849e53f52c532be168a5800" prot="protected" virt="non-virtual"><scope>SphericalBasis</scope><name>self_consistent</name></member>
      <member refid="class_pot_accel_1ac65dfca720c42ea4a773024d1eaf977f" prot="public" virt="virtual"><scope>SphericalBasis</scope><name>set_multistep_level</name></member>
      <member refid="class_pot_accel_1a6dc784a141afdec5f4daad63eba20b81" prot="public" virt="non-virtual"><scope>SphericalBasis</scope><name>SetExternal</name></member>
      <member refid="class_pot_accel_1ad528efbd280a21543addaf7747e9089a" prot="public" virt="virtual"><scope>SphericalBasis</scope><name>setScale</name></member>
      <member refid="class_axisymmetric_basis_1a6af1bcb2359adc5091625d457a953efa" prot="public" virt="non-virtual"><scope>SphericalBasis</scope><name>setTK</name></member>
      <member refid="class_spherical_basis_1aa6cc607bac98ab8abef4c46a6a06fee2" prot="protected" virt="non-virtual"><scope>SphericalBasis</scope><name>setup</name></member>
      <member refid="class_spherical_basis_1ad9ea2d324f62151073b6cb3b4da9f28a" prot="protected" virt="non-virtual"><scope>SphericalBasis</scope><name>setup_noise</name></member>
      <member refid="class_basis_1a0779c0b0f74361d7861bbc19a194b63c" prot="public" virt="non-virtual"><scope>SphericalBasis</scope><name>sinecosine_R</name></member>
      <member refid="class_spherical_basis_1a01e5435d45829ea1fa2a7eaa94ca967a" prot="protected" virt="non-virtual"><scope>SphericalBasis</scope><name>sinm</name></member>
      <member refid="class_pot_accel_1ad55d9279ca0e8318bfe1a95d1c7566fda0a1acd8c0d6e745fb0ae3e33e458a9b8" prot="public" virt="non-virtual"><scope>SphericalBasis</scope><name>slab</name></member>
      <member refid="class_axisymmetric_basis_1a52873b88250c954ccca613fab178c5ee" prot="private" virt="non-virtual"><scope>SphericalBasis</scope><name>smth</name></member>
      <member refid="class_axisymmetric_basis_1ac4fce6a4930030f49b46844753ce3052" prot="protected" virt="non-virtual"><scope>SphericalBasis</scope><name>snr</name></member>
      <member refid="class_spherical_basis_1a985aeb555ac7cadb48ada5aa0b87a0a4" prot="protected" virt="non-virtual"><scope>SphericalBasis</scope><name>sphCoefs</name></member>
      <member refid="class_pot_accel_1ad55d9279ca0e8318bfe1a95d1c7566fda996ce4577548b6da6b1330a78b1c6f6a" prot="public" virt="non-virtual"><scope>SphericalBasis</scope><name>sphere</name></member>
      <member refid="class_spherical_basis_1a597c70fc53eab8ec04f7ab86c04fec42" prot="public" virt="non-virtual"><scope>SphericalBasis</scope><name>SphericalBasis</name></member>
      <member refid="class_spherical_basis_1a37942ed713092a019dbc750b2c44c2d7" prot="public" virt="non-virtual"><scope>SphericalBasis</scope><name>SphericalBasis</name></member>
      <member refid="class_axisymmetric_basis_1a2dd973d8ace9db32c65938425d159af9" prot="protected" virt="non-virtual"><scope>SphericalBasis</scope><name>sqnorm</name></member>
      <member refid="class_spherical_basis_1aa69f1ee5a2a5ab8269b4cd0b97aa274a" prot="protected" virt="non-virtual"><scope>SphericalBasis</scope><name>ssfrac</name></member>
      <member refid="class_axisymmetric_basis_1a592dd952d0301e3c55da82f78eb3cfe8" prot="protected" virt="non-virtual"><scope>SphericalBasis</scope><name>subsamp</name></member>
      <member refid="class_spherical_basis_1ac8ace6001c8d041fb39f13cb27b2ca19" prot="protected" virt="non-virtual"><scope>SphericalBasis</scope><name>subset</name></member>
      <member refid="class_axisymmetric_basis_1a8298f44c8cc6e6401b471c4a50c52662" prot="protected" virt="non-virtual"><scope>SphericalBasis</scope><name>swap_coefs</name></member>
      <member refid="class_pot_accel_1aff158a74d7328a080ed619c1456836f5" prot="private" virt="non-virtual"><scope>SphericalBasis</scope><name>t</name></member>
      <member refid="class_pot_accel_1ad55d9279ca0e8318bfe1a95d1c7566fda1792d3c00a41ee78957c83611fd368a2" prot="public" virt="non-virtual"><scope>SphericalBasis</scope><name>table</name></member>
      <member refid="class_pot_accel_1a125d7343a34d292a3e4a48a5d984cac4" prot="private" virt="non-virtual"><scope>SphericalBasis</scope><name>td</name></member>
      <member refid="class_axisymmetric_basis_1a196db3f26a946c2dcbaabcbe31883b4a" prot="private" virt="non-virtual"><scope>SphericalBasis</scope><name>Tevec</name></member>
      <member refid="class_pot_accel_1a86d0d012a44e2eb7c3e385d852a5fdde" prot="public" virt="non-virtual"><scope>SphericalBasis</scope><name>thread_timing_beg</name></member>
      <member refid="class_pot_accel_1a76c805cd8d0d134d37929eeb48115b33" prot="public" virt="non-virtual"><scope>SphericalBasis</scope><name>thread_timing_end</name></member>
      <member refid="class_pot_accel_1a4315e73a641c54eefc548b7d14cb06b6" prot="protected" virt="non-virtual"><scope>SphericalBasis</scope><name>timer_list</name></member>
      <member refid="class_axisymmetric_basis_1a3e85225ea1c3c408fe2bcf23ad09b555" prot="private" virt="non-virtual"><scope>SphericalBasis</scope><name>tk_type</name></member>
      <member refid="class_axisymmetric_basis_1a3a98442a6149253a6881c33cf6792e38" prot="private" virt="non-virtual"><scope>SphericalBasis</scope><name>tkcum</name></member>
      <member refid="class_axisymmetric_basis_1ad4dabce5bd04809a4644cb36705312f9" prot="private" virt="non-virtual"><scope>SphericalBasis</scope><name>tksmooth</name></member>
      <member refid="class_axisymmetric_basis_1a5665efe4d9ba08fd8e173a7aa6cf77b6" prot="public" virt="non-virtual"><scope>SphericalBasis</scope><name>TKType</name></member>
      <member refid="class_pot_accel_1aabce5ff868883c6191b8b7f8f6281c04" prot="public" virt="non-virtual"><scope>SphericalBasis</scope><name>TList</name></member>
      <member refid="class_axisymmetric_basis_1a8acdd32795c612cdcefee5da62cc5b3a" prot="protected" virt="non-virtual"><scope>SphericalBasis</scope><name>tvar</name></member>
      <member refid="class_spherical_basis_1a3c3e727fad925e72690bb0dbd39a2676" prot="protected" virt="non-virtual"><scope>SphericalBasis</scope><name>u</name></member>
      <member refid="class_pot_accel_1a0355cfe43cdde5237f7be234e94de64b" prot="public" virt="non-virtual"><scope>SphericalBasis</scope><name>unmatched</name></member>
      <member refid="class_spherical_basis_1adb25dced63b1f56d205dd7d8e659f0ef" prot="protected" virt="non-virtual"><scope>SphericalBasis</scope><name>unpack</name></member>
      <member refid="class_spherical_basis_1aeee5549cb30e7c608c8255783ab10a52" prot="protected" virt="non-virtual"><scope>SphericalBasis</scope><name>update_noise</name></member>
      <member refid="class_pot_accel_1acd32c6464b705469911df718114187b9" prot="public" virt="non-virtual"><scope>SphericalBasis</scope><name>use</name></member>
      <member refid="class_pot_accel_1a59a4a86ea8d2b3a9a5d420ef7e712697" prot="protected" virt="non-virtual"><scope>SphericalBasis</scope><name>use_external</name></member>
      <member refid="class_pot_accel_1ae2e0dbf849707704a3d42a1fa91ce060" prot="public" virt="non-virtual"><scope>SphericalBasis</scope><name>Used</name></member>
      <member refid="class_pot_accel_1a8fe5beef77e790f0d7bf6f455f5bf1d3" prot="protected" virt="non-virtual"><scope>SphericalBasis</scope><name>used</name></member>
      <member refid="class_spherical_basis_1ad5c34eae92d36d7460c39c6f2c73fd27" prot="protected" virt="non-virtual"><scope>SphericalBasis</scope><name>valid_keys</name></member>
      <member refid="class_axisymmetric_basis_1a5665efe4d9ba08fd8e173a7aa6cf77b6a27bdb8b3a4040b794e7418581fda2615" prot="public" virt="non-virtual"><scope>SphericalBasis</scope><name>VarianceCut</name></member>
      <member refid="class_axisymmetric_basis_1a5665efe4d9ba08fd8e173a7aa6cf77b6a7381bdf9e2231e55827cf72d86f7f415" prot="public" virt="non-virtual"><scope>SphericalBasis</scope><name>VarianceWeighted</name></member>
      <member refid="class_axisymmetric_basis_1a90258bc4c31858abd74719a452f7f807" prot="protected" virt="non-virtual"><scope>SphericalBasis</scope><name>VectorP</name></member>
      <member refid="class_spherical_basis_1a4927dfcbaf0910033fcc37a4892f8bde" prot="protected" virt="non-virtual"><scope>SphericalBasis</scope><name>VectorXdP</name></member>
      <member refid="class_axisymmetric_basis_1ab0d1d51da0dc7f33cf3091bab41866d1" prot="protected" virt="non-virtual"><scope>SphericalBasis</scope><name>vtkfreq</name></member>
      <member refid="class_axisymmetric_basis_1a3708ccfcde62cc3e88dbde5994d08f26" prot="private" virt="non-virtual"><scope>SphericalBasis</scope><name>weight</name></member>
      <member refid="class_spherical_basis_1a84edfe45c66d8221046d65aa63d19f8a" prot="protected" virt="virtual"><scope>SphericalBasis</scope><name>xi_to_r</name></member>
      <member refid="class_axisymmetric_basis_1a98dbe87cedd6dc28d03bba5aba133dd4" prot="public" virt="virtual"><scope>SphericalBasis</scope><name>~AxisymmetricBasis</name></member>
      <member refid="class_pot_accel_1adcc326688bb152249f81e88d6edfde62" prot="public" virt="virtual"><scope>SphericalBasis</scope><name>~PotAccel</name></member>
      <member refid="class_spherical_basis_1aa752534f77e17674a6a99da2549af843" prot="public" virt="virtual"><scope>SphericalBasis</scope><name>~SphericalBasis</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
