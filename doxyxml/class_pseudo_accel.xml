<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="class_pseudo_accel" kind="class" language="C++" prot="public">
    <compoundname>PseudoAccel</compoundname>
    <includes refid="_pseudo_accel_8_h" local="no">PseudoAccel.H</includes>
    <sectiondef kind="private-type">
      <memberdef kind="typedef" id="class_pseudo_accel_1a2c968e5f39fd1cca180f2cf267967e97" prot="private" static="no">
        <type>std::array&lt; double, 7 &gt;</type>
        <definition>using PseudoAccel::Elem =  std::array&lt;double, 7&gt;</definition>
        <argsstring></argsstring>
        <name>Elem</name>
        <qualifiedname>PseudoAccel::Elem</qualifiedname>
        <briefdescription>
<para>Queue of elements. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/PseudoAccel.H" line="22" column="3" bodyfile="/home/weinberg/Projects/EXP/include/PseudoAccel.H" bodystart="22" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_pseudo_accel_1afd910cc267ebd1580f41cbe5958720dd" prot="private" static="no" mutable="no">
        <type>Eigen::Vector3d</type>
        <definition>Eigen::Vector3d PseudoAccel::accel</definition>
        <argsstring></argsstring>
        <name>accel</name>
        <qualifiedname>PseudoAccel::accel</qualifiedname>
        <initializer>= Eigen::Vector3d::Zero()</initializer>
        <briefdescription>
<para>Storage. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/PseudoAccel.H" line="26" column="19" bodyfile="/home/weinberg/Projects/EXP/include/PseudoAccel.H" bodystart="26" bodyend="-1"/>
        <referencedby refid="class_pseudo_accel_1ab150a00fb5d1dbd3c046c0358dd1b26d" compoundref="_pseudo_accel_8_h" startline="42" endline="93">operator()</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_pseudo_accel_1a558cb73adb4d7506a5aed2d6a6846083" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool PseudoAccel::AXIS</definition>
        <argsstring></argsstring>
        <name>AXIS</name>
        <qualifiedname>PseudoAccel::AXIS</qualifiedname>
        <initializer>=false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/PseudoAccel.H" line="19" column="15" bodyfile="/home/weinberg/Projects/EXP/include/PseudoAccel.H" bodystart="19" bodyend="-1"/>
        <referencedby refid="class_pseudo_accel_1ab150a00fb5d1dbd3c046c0358dd1b26d" compoundref="_pseudo_accel_8_h" startline="42" endline="93">operator()</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_pseudo_accel_1a09e5dc197db913699f4e653d371ddaa3" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool PseudoAccel::CENTER</definition>
        <argsstring></argsstring>
        <name>CENTER</name>
        <qualifiedname>PseudoAccel::CENTER</qualifiedname>
        <initializer>=false</initializer>
        <briefdescription>
<para>Type flags. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/PseudoAccel.H" line="19" column="8" bodyfile="/home/weinberg/Projects/EXP/include/PseudoAccel.H" bodystart="19" bodyend="-1"/>
        <referencedby refid="class_pseudo_accel_1ab150a00fb5d1dbd3c046c0358dd1b26d" compoundref="_pseudo_accel_8_h" startline="42" endline="93">operator()</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_pseudo_accel_1afd07432015f7f62bdf952fd2160a0b0e" prot="private" static="no" mutable="no">
        <type>Eigen::Vector3d</type>
        <definition>Eigen::Vector3d PseudoAccel::domdt</definition>
        <argsstring></argsstring>
        <name>domdt</name>
        <qualifiedname>PseudoAccel::domdt</qualifiedname>
        <initializer>= Eigen::Vector3d::Zero()</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/PseudoAccel.H" line="28" column="19" bodyfile="/home/weinberg/Projects/EXP/include/PseudoAccel.H" bodystart="28" bodyend="-1"/>
        <referencedby refid="class_pseudo_accel_1ab150a00fb5d1dbd3c046c0358dd1b26d" compoundref="_pseudo_accel_8_h" startline="42" endline="93">operator()</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_pseudo_accel_1a2bf7ed60fa31de425d1cb0bd8bb258e0" prot="private" static="no" mutable="no">
        <type>unsigned int</type>
        <definition>unsigned int PseudoAccel::Nsize</definition>
        <argsstring></argsstring>
        <name>Nsize</name>
        <qualifiedname>PseudoAccel::Nsize</qualifiedname>
        <briefdescription>
<para>Maximum number of time points. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/PseudoAccel.H" line="16" column="16" bodyfile="/home/weinberg/Projects/EXP/include/PseudoAccel.H" bodystart="16" bodyend="-1"/>
        <referencedby refid="class_pseudo_accel_1a483547ebb5c2e93b6e646ab8379a8231" compoundref="_pseudo_accel_8_h" startline="37" endline="40">add</referencedby>
        <referencedby refid="class_pseudo_accel_1ab150a00fb5d1dbd3c046c0358dd1b26d" compoundref="_pseudo_accel_8_h" startline="42" endline="93">operator()</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_pseudo_accel_1a4ecc396017d4241e28a61a1c14527144" prot="private" static="no" mutable="no">
        <type>Eigen::Vector3d</type>
        <definition>Eigen::Vector3d PseudoAccel::omega</definition>
        <argsstring></argsstring>
        <name>omega</name>
        <qualifiedname>PseudoAccel::omega</qualifiedname>
        <initializer>= Eigen::Vector3d::Zero()</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/PseudoAccel.H" line="27" column="19" bodyfile="/home/weinberg/Projects/EXP/include/PseudoAccel.H" bodystart="27" bodyend="-1"/>
        <referencedby refid="class_pseudo_accel_1ab150a00fb5d1dbd3c046c0358dd1b26d" compoundref="_pseudo_accel_8_h" startline="42" endline="93">operator()</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_pseudo_accel_1a005a23323c3af89dfed3a66efe9def80" prot="private" static="no" mutable="no">
        <type>std::deque&lt; <ref refid="class_pseudo_accel_1a2c968e5f39fd1cca180f2cf267967e97" kindref="member">Elem</ref> &gt;</type>
        <definition>std::deque&lt;Elem&gt; PseudoAccel::queue</definition>
        <argsstring></argsstring>
        <name>queue</name>
        <qualifiedname>PseudoAccel::queue</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/PseudoAccel.H" line="23" column="14" bodyfile="/home/weinberg/Projects/EXP/include/PseudoAccel.H" bodystart="23" bodyend="-1"/>
        <referencedby refid="class_pseudo_accel_1a483547ebb5c2e93b6e646ab8379a8231" compoundref="_pseudo_accel_8_h" startline="37" endline="40">add</referencedby>
        <referencedby refid="class_pseudo_accel_1ab150a00fb5d1dbd3c046c0358dd1b26d" compoundref="_pseudo_accel_8_h" startline="42" endline="93">operator()</referencedby>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_pseudo_accel_1a483547ebb5c2e93b6e646ab8379a8231" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void PseudoAccel::add</definition>
        <argsstring>(double t, const Eigen::Vector3d &amp;c, const Eigen::Vector3d &amp;a)</argsstring>
        <name>add</name>
        <qualifiedname>PseudoAccel::add</qualifiedname>
        <param>
          <type>double</type>
          <declname>t</declname>
        </param>
        <param>
          <type>const Eigen::Vector3d &amp;</type>
          <declname>c</declname>
        </param>
        <param>
          <type>const Eigen::Vector3d &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
<para>Add a center element to the pseudo accelration estimator. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/PseudoAccel.H" line="37" column="8" bodyfile="/home/weinberg/Projects/EXP/include/PseudoAccel.H" bodystart="37" bodyend="40"/>
        <references refid="class_pseudo_accel_1a2bf7ed60fa31de425d1cb0bd8bb258e0" compoundref="_pseudo_accel_8_h" startline="16">Nsize</references>
        <references refid="class_pseudo_accel_1a005a23323c3af89dfed3a66efe9def80" compoundref="_pseudo_accel_8_h" startline="23">queue</references>
      </memberdef>
      <memberdef kind="function" id="class_pseudo_accel_1ab150a00fb5d1dbd3c046c0358dd1b26d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::tuple&lt; Eigen::Vector3d &amp;, Eigen::Vector3d &amp;, Eigen::Vector3d &amp; &gt;</type>
        <definition>std::tuple&lt; Eigen::Vector3d &amp;, Eigen::Vector3d &amp;, Eigen::Vector3d &amp; &gt; PseudoAccel::operator()</definition>
        <argsstring>()</argsstring>
        <name>operator()</name>
        <qualifiedname>PseudoAccel::operator()</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/PseudoAccel.H" line="42" column="14" bodyfile="/home/weinberg/Projects/EXP/include/PseudoAccel.H" bodystart="42" bodyend="93"/>
        <references refid="class_pseudo_accel_1afd910cc267ebd1580f41cbe5958720dd" compoundref="_pseudo_accel_8_h" startline="26">accel</references>
        <references refid="class_pseudo_accel_1a558cb73adb4d7506a5aed2d6a6846083" compoundref="_pseudo_accel_8_h" startline="19">AXIS</references>
        <references refid="class_pseudo_accel_1a09e5dc197db913699f4e653d371ddaa3" compoundref="_pseudo_accel_8_h" startline="19">CENTER</references>
        <references refid="class_quad_l_s_1a70d3b25ce9c4cc3105182ef4c8fb303b" compoundref="_quad_l_s_8_h" startline="66" endline="67">QuadLS&lt; T &gt;::coefs</references>
        <references refid="class_pseudo_accel_1afd07432015f7f62bdf952fd2160a0b0e" compoundref="_pseudo_accel_8_h" startline="28">domdt</references>
        <references refid="class_pseudo_accel_1a2bf7ed60fa31de425d1cb0bd8bb258e0" compoundref="_pseudo_accel_8_h" startline="16">Nsize</references>
        <references refid="class_pseudo_accel_1a4ecc396017d4241e28a61a1c14527144" compoundref="_pseudo_accel_8_h" startline="27">omega</references>
        <references refid="class_pseudo_accel_1a005a23323c3af89dfed3a66efe9def80" compoundref="_pseudo_accel_8_h" startline="23">queue</references>
      </memberdef>
      <memberdef kind="function" id="class_pseudo_accel_1a4769f284b0c483413ffd9b2a03a27240" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>PseudoAccel::PseudoAccel</definition>
        <argsstring>(unsigned int Nsize, bool center, bool axis)</argsstring>
        <name>PseudoAccel</name>
        <qualifiedname>PseudoAccel::PseudoAccel</qualifiedname>
        <param>
          <type>unsigned int</type>
          <declname>Nsize</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>center</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>axis</declname>
        </param>
        <briefdescription>
<para>Construct a pseudo acceleration estimator. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/include/PseudoAccel.H" line="33" column="3" bodyfile="/home/weinberg/Projects/EXP/include/PseudoAccel.H" bodystart="33" bodyend="34"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/weinberg/Projects/EXP/include/PseudoAccel.H" line="11" column="1" bodyfile="/home/weinberg/Projects/EXP/include/PseudoAccel.H" bodystart="12" bodyend="94"/>
    <listofallmembers>
      <member refid="class_pseudo_accel_1afd910cc267ebd1580f41cbe5958720dd" prot="private" virt="non-virtual"><scope>PseudoAccel</scope><name>accel</name></member>
      <member refid="class_pseudo_accel_1a483547ebb5c2e93b6e646ab8379a8231" prot="public" virt="non-virtual"><scope>PseudoAccel</scope><name>add</name></member>
      <member refid="class_pseudo_accel_1a558cb73adb4d7506a5aed2d6a6846083" prot="private" virt="non-virtual"><scope>PseudoAccel</scope><name>AXIS</name></member>
      <member refid="class_pseudo_accel_1a09e5dc197db913699f4e653d371ddaa3" prot="private" virt="non-virtual"><scope>PseudoAccel</scope><name>CENTER</name></member>
      <member refid="class_pseudo_accel_1afd07432015f7f62bdf952fd2160a0b0e" prot="private" virt="non-virtual"><scope>PseudoAccel</scope><name>domdt</name></member>
      <member refid="class_pseudo_accel_1a2c968e5f39fd1cca180f2cf267967e97" prot="private" virt="non-virtual"><scope>PseudoAccel</scope><name>Elem</name></member>
      <member refid="class_pseudo_accel_1a2bf7ed60fa31de425d1cb0bd8bb258e0" prot="private" virt="non-virtual"><scope>PseudoAccel</scope><name>Nsize</name></member>
      <member refid="class_pseudo_accel_1a4ecc396017d4241e28a61a1c14527144" prot="private" virt="non-virtual"><scope>PseudoAccel</scope><name>omega</name></member>
      <member refid="class_pseudo_accel_1ab150a00fb5d1dbd3c046c0358dd1b26d" prot="public" virt="non-virtual"><scope>PseudoAccel</scope><name>operator()</name></member>
      <member refid="class_pseudo_accel_1a4769f284b0c483413ffd9b2a03a27240" prot="public" virt="non-virtual"><scope>PseudoAccel</scope><name>PseudoAccel</name></member>
      <member refid="class_pseudo_accel_1a005a23323c3af89dfed3a66efe9def80" prot="private" virt="non-virtual"><scope>PseudoAccel</scope><name>queue</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
