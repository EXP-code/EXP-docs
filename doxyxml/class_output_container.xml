<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="class_output_container" kind="class" language="C++" prot="public">
    <compoundname>OutputContainer</compoundname>
    <includes refid="_output_container_8_h" local="no">OutputContainer.H</includes>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_output_container_1a6850768e2b7c57dd21fbf62df989ed20" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double OutputContainer::last</definition>
        <argsstring></argsstring>
        <name>last</name>
        <qualifiedname>OutputContainer::last</qualifiedname>
        <briefdescription>
<para>Last run time. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/OutputContainer.H" line="15" column="10" bodyfile="/home/weinberg/Projects/EXP/src/OutputContainer.H" bodystart="15" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="class_output_container_1ad26a7a1ba88d39be7ba86bd3a813ceaf" prot="public" static="no" mutable="no">
        <type>std::list&lt; std::shared_ptr&lt; std::thread &gt; &gt;</type>
        <definition>std::list&lt;std::shared_ptr&lt;std::thread&gt; &gt; OutputContainer::cproc</definition>
        <argsstring></argsstring>
        <name>cproc</name>
        <qualifiedname>OutputContainer::cproc</qualifiedname>
        <briefdescription>
<para>A list of concurrent threads for asychronous processing. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/OutputContainer.H" line="20" column="13" bodyfile="/home/weinberg/Projects/EXP/src/OutputContainer.H" bodystart="20" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_output_container_1a741157a417b221c0ed447dcd02af8dd1" prot="public" static="no" mutable="no">
        <type>std::list&lt; <ref refid="class_output" kindref="compound">Output</ref> * &gt;</type>
        <definition>std::list&lt;Output*&gt; OutputContainer::out</definition>
        <argsstring></argsstring>
        <name>out</name>
        <qualifiedname>OutputContainer::out</qualifiedname>
        <briefdescription>
<para>List of output methods currently active. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/OutputContainer.H" line="23" column="13" bodyfile="/home/weinberg/Projects/EXP/src/OutputContainer.H" bodystart="23" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_output_container_1a380c6e441bd692d2719ebf24fd3d9f27" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void OutputContainer::initialize</definition>
        <argsstring>()</argsstring>
        <name>initialize</name>
        <qualifiedname>OutputContainer::initialize</qualifiedname>
        <briefdescription>
<para>Will read configuration stanza and initialize requested output methods. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/OutputContainer.H" line="32" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_output_container_1a59b4e0d99e98a1eff3ce1e3179d92f49" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>OutputContainer::OutputContainer</definition>
        <argsstring>()</argsstring>
        <name>OutputContainer</name>
        <qualifiedname>OutputContainer::OutputContainer</qualifiedname>
        <briefdescription>
<para>Constructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/OutputContainer.H" line="26" column="3"/>
      </memberdef>
      <memberdef kind="function" id="class_output_container_1a6c567e5898c74769a18ca3bc41299525" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void OutputContainer::Run</definition>
        <argsstring>(int nstep, int mstep=std::numeric_limits&lt; int &gt;::max(), bool final=false)</argsstring>
        <name>Run</name>
        <qualifiedname>OutputContainer::Run</qualifiedname>
        <param>
          <type>int</type>
          <declname>nstep</declname>
        </param>
        <param>
          <type>int</type>
          <declname>mstep</declname>
          <defval>std::numeric_limits&lt; int &gt;::max()</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>final</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Execute the all methods in the container. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/OutputContainer.H" line="35" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_output_container_1a68138fe9f917c969925b0fe241bdfdc0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>OutputContainer::~OutputContainer</definition>
        <argsstring>()</argsstring>
        <name>~OutputContainer</name>
        <qualifiedname>OutputContainer::~OutputContainer</qualifiedname>
        <briefdescription>
<para>Destructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/weinberg/Projects/EXP/src/OutputContainer.H" line="29" column="3"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Container class to hold the output chain of container methods. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/weinberg/Projects/EXP/src/OutputContainer.H" line="10" column="1" bodyfile="/home/weinberg/Projects/EXP/src/OutputContainer.H" bodystart="11" bodyend="36"/>
    <listofallmembers>
      <member refid="class_output_container_1ad26a7a1ba88d39be7ba86bd3a813ceaf" prot="public" virt="non-virtual"><scope>OutputContainer</scope><name>cproc</name></member>
      <member refid="class_output_container_1a380c6e441bd692d2719ebf24fd3d9f27" prot="public" virt="non-virtual"><scope>OutputContainer</scope><name>initialize</name></member>
      <member refid="class_output_container_1a6850768e2b7c57dd21fbf62df989ed20" prot="private" virt="non-virtual"><scope>OutputContainer</scope><name>last</name></member>
      <member refid="class_output_container_1a741157a417b221c0ed447dcd02af8dd1" prot="public" virt="non-virtual"><scope>OutputContainer</scope><name>out</name></member>
      <member refid="class_output_container_1a59b4e0d99e98a1eff3ce1e3179d92f49" prot="public" virt="non-virtual"><scope>OutputContainer</scope><name>OutputContainer</name></member>
      <member refid="class_output_container_1a6c567e5898c74769a18ca3bc41299525" prot="public" virt="non-virtual"><scope>OutputContainer</scope><name>Run</name></member>
      <member refid="class_output_container_1a68138fe9f917c969925b0fe241bdfdc0" prot="public" virt="non-virtual"><scope>OutputContainer</scope><name>~OutputContainer</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
